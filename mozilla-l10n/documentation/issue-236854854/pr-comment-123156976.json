{"url": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/comments/123156976", "pull_request_review_id": 45331276, "id": 123156976, "diff_hunk": "@@ -0,0 +1,295 @@\n+# Create a patch in Mercurial\n+\n+There are currently two different methods available to create a patch for Mercurial repositories:\n+* [Using **MozReview**](#creating-a-patch-using-mozreview).\n+* [Using **Mercurial Queues**](#creating-a-patch-using-queues) (`mq` extension).\n+\n+MozReview is the preferred method for patches to main code repositories, like `mozilla-central`. On the other hand, Queues is the only tool available for patches to l10n repositories.\n+\n+As a general rule, before creating a patch, make sure that your environment is [correctly set up](/tools/mercurial/setting_mercurial_environment.md), and update your local clones.\n+\n+## Creating a patch using MozReview\n+\n+### Creating a patch\n+\n+Consider the following example: setting up productization for Urdu (ur) on Firefox desktop. After you\u2019ve created or edited all the files you need, check the status of the repository.\n+\n+```BASH\n+$ hg status\n+M browser/locales/search/list.json\n+? browser/locales/searchplugins/amazon-in.xml\n+? browser/locales/searchplugins/wikipedia-ur.xml\n+```\n+\n+These are all status codes relevant for working with patches:\n+* M = modified. File was already tracked but has been modified.\n+* A = added. File is new and was already added with `hg add`.\n+* R = removed. File has been removed with `hg remove`.\n+* ! = missing. File has been removed from the filesystem but it\u2019s still tracked. Use `hg remove` to stop tracking it.\n+* ? = not tracked. File is not tracked yet. You can start tracking it by using `hg add`.\n+\n+Note that the file status will change once you commit, `hg status` only shows information about pending changes.\n+\n+Now you need to add the new files. You can add them using the full path, or a parent folder, just make sure you\u2019re not adding unnecessary files.\n+\n+```BASH\n+$ hg add browser/locales/searchplugins\n+$ hg status\n+M browser/locales/search/list.json\n+A browser/locales/searchplugins/amazon-in.xml\n+A browser/locales/searchplugins/wikipedia-ur.xml\n+```\n+\n+Let\u2019s create a bookmark for this pending work, for example `bug1304757`.\n+\n+```BASH\n+$ hg bookmark bug1304757\n+```\n+\n+Commit the changes with a commit message that includes the reviewer\u2019s nickname after `r?`, for example if flod is the reviewer:\n+\n+```BASH\n+$ hg commit -m \"Bug 1304757 - [ur] Search engine setup for Firefox for Urdu, r?flod\"\n+```\n+\n+At this point you can check the status of the tree:\n+\n+```BASH\n+$ hg wip\n+```\n+\n+And you should be able to identify your work and bookmark (press `q` to leave this view):\n+\n+```\n+@   358728:c0b04112d4e6 flod tip  bug1304757\n+|  Bug 1304757 - [ur] Search engine setup for Firefox for Urdu, r?flod\n+| o   358726:f7834b7b4050 aosmond  inbound\n+|/:  Bug 1299498 - Keep a main thread only pointer to the underlying nsIURI for ImageURL. r=tnikkel\n+| : o   358715:6f79cece26e9 ffxbld  beta\n+| : |  No bug, Automated blocklist update from host bld-linux64-spot-245 - a=blocklist-update\n+| : ~\n+| : o   358714:f5f73390f439 ffxbld  release\n+| : |  No bug, Automated blocklist update from host bld-linux64-spot-246 - a=blocklist-update\n+| : ~\n+o :   358709:f8107cf96144 cbook  central\n+:/   merge mozilla-inbound to mozilla-central a=merge\n+```\n+\n+Push to review with:\n+\n+```BASH\n+$ hg push review\n+```\n+\n+At the end of the process, press enter or type `y` to publish your review.\n+\n+```\n+publish these review requests now (Yn)?  y\n+(published review request XXXX)\n+```\n+\n+Once published, the review request will be attached automatically to the bug, and the reviewer will be flagged.\n+\n+### Updating an existing patch\n+\n+If you need to address review comments, you can restore your branch by switching to your bookmark, and start working on it again.\n+\n+```BASH\n+$ hg up bug1304757\n+```\n+\n+You can check which bookmark is currently active with `hg bookmarks`:\n+\n+```BASH\n+$ hg bookmarks\n+   aurora                    359014:96503957841c\n+   beta                      359025:34c73c520f93\n+ * bug1304757                359034:bde380bc54ff\n+   central                   358999:a69583d2dbc6\n+```\n+\n+Make your changes and commit them\n+\n+```BASH\n+$ hg commit -m \"Address review comments\"\n+```\n+\n+Then squash the commit together:\n+\n+```BASH\n+$ hg histedit\n+```\n+\n+The following screen will look like this:\n+\n+```\n+pick f6f70f6de69c 358597 Bug 123456 - [ur] Search engine setup for Firefox fo...\n+pick 8088fd8658fd 358598 Fix searchplugin name\n+\n+# Edit history between f6f70f6de69c and 8088fd8658fd\n+#\n+# Commits are listed from least to most recent\n+#\n+# You can reorder changesets by reordering the lines\n+#\n+# Commands:\n+#\n+#  e, edit = use commit, but stop for amending\n+#  m, mess = edit commit message without changing commit content\n+#  p, pick = use commit\n+#  d, drop = remove commit from history\n+#  f, fold = use commit, but combine it with the one above\n+#  r, roll = like fold, but discard this commit's description\n+#\n+```\n+\n+In this case you want to *roll* the second commit into the first one, so replace `pick` with `roll` (or `r`), save with `CTRL+O` and exit with `CTRL+X` (assuming the default editor is nano).\n+\n+```\n+pick f6f70f6de69c 358597 Bug 123456 - [ur] Search engine setup for Firefox fo...\n+roll 8088fd8658fd 358598 Fix searchplugin name\n+\n+...\n+```\n+\n+Push again to MozReview\n+\n+```BASH\n+$ hg push review\n+```\n+\n+You can also use `hg histedit` to reword a commit message (set the commit line to `edit`). Just remember to complete the `histedit` after commit.\n+\n+```BASH\n+$ hg commit -m \"Some changes\"\n+$ hg histedit --continue\n+```\n+\n+If necessary, you can rebase against another bookmark, like `central` or `inbound`\n+\n+```BASH\n+$ hg rebase -d central\n+```\n+\n+More information about this workflow are available in the following pages:\n+* https://mozilla-version-control-tools.readthedocs.io/en/latest/hgmozilla/firefoxworkflow.html\n+* https://www.mercurial-scm.org/wiki/Bookmarks\n+\n+### Landing the patch\n+\n+Once the patch has been reviewed, you have two options:\n+* If you have L3 access to the repository, you can use Autoland to land your commit directly from MozReview. If your reviewer has it, you can ask them to land.\n+* You can set the `checkin-needed` keyword in the bug, and sheriffs will land it from you.\n+\n+## Creating a patch using Queues\n+\n+### Creating a patch\n+\n+Consider the following example: setting up productization for Urdu (ur) on Firefox desktop (l10n repository). The first step is to create a `region.properties` file. Move into the repository folder and check its status:\n+\n+```BASH\n+$ cd ~/mozilla/mercurial/l10n/ur/l10n-central\n+\n+$ hg status\n+? browser/chrome/browser-region/region.properties\n+```\n+\n+File is brand new and needs to be added:\n+\n+```BASH\n+$ hg add browser\n+\n+$ hg status\n+A browser/chrome/browser-region/region.properties\n+```\n+\n+You need to assign a name to this patch, it\u2019s easy to use a reference to the bug number: for example, if the bug number is 123456, the file could be called `bug123456.patch` (note the added extension `.patch`).\n+\n+```BASH\n+$ hg qnew bug123456.patch\n+```\n+\n+At this point you will be asked to provide a commit message for your patch (in `nano` if you followed the instructions to set up the environment): write your commit message, then press `CTRL+O` to save the file, `enter` to confirm the proposed filename, and finally `CTRL+X` to exit the editor.\n+\n+The commit message should be the same as the bug, for example `Bug 123456 - Set up searchplugins for \"ur\" and Firefox desktop`.\n+\n+You\u2019ready to *pop* the patch out of the queue. Since it\u2019s likely that there are no other patches, you can pop them all with `-a`.\n+\n+```BASH\n+$ hg qpop -a\n+popping bug123456.patch\n+patch queue now empty\n+```\n+\n+The patch is stored inside the `.hg/patches` folder in the root of the repository (in the suggested setup, the full path would be `~/mozilla/mercurial/l10n-central/.hg/patches`). You can copy the file through the command line or the file explorer. For example, on macOS you can open the folder in Finder by typing:", "path": "tools/mercurial/creating_mercurial_patch.md", "position": 224, "original_position": 224, "commit_id": "d8925eae7492280475344dd5eb8e01a118cf559a", "original_commit_id": "d8925eae7492280475344dd5eb8e01a118cf559a", "user": {"login": "flodolo", "id": 3644868, "avatar_url": "https://avatars0.githubusercontent.com/u/3644868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodolo", "html_url": "https://github.com/flodolo", "followers_url": "https://api.github.com/users/flodolo/followers", "following_url": "https://api.github.com/users/flodolo/following{/other_user}", "gists_url": "https://api.github.com/users/flodolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodolo/subscriptions", "organizations_url": "https://api.github.com/users/flodolo/orgs", "repos_url": "https://api.github.com/users/flodolo/repos", "events_url": "https://api.github.com/users/flodolo/events{/privacy}", "received_events_url": "https://api.github.com/users/flodolo/received_events", "type": "User", "site_admin": false}, "body": "Not in this case. The example for Queues uses the l10n repository `cd ~/mozilla/mercurial/l10n/ur/l10n-central`, so this needs be fixed anyway (it should be `~/mozilla/mercurial/l10n/ur/l10n-central/.hg/patches`, missing `ur`).\r\n\r\nDo you think it would be clearer to use the same files of the MozReview section?", "created_at": "2017-06-21T05:32:03Z", "updated_at": "2017-06-21T05:32:03Z", "html_url": "https://github.com/mozilla-l10n/documentation/pull/93#discussion_r123156976", "pull_request_url": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/93", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/comments/123156976"}, "html": {"href": "https://github.com/mozilla-l10n/documentation/pull/93#discussion_r123156976"}, "pull_request": {"href": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/93"}}, "body_html": "<p>Not in this case. The example for Queues uses the l10n repository <code>cd ~/mozilla/mercurial/l10n/ur/l10n-central</code>, so this needs be fixed anyway (it should be <code>~/mozilla/mercurial/l10n/ur/l10n-central/.hg/patches</code>, missing <code>ur</code>).</p>\n<p>Do you think it would be clearer to use the same files of the MozReview section?</p>", "body_text": "Not in this case. The example for Queues uses the l10n repository cd ~/mozilla/mercurial/l10n/ur/l10n-central, so this needs be fixed anyway (it should be ~/mozilla/mercurial/l10n/ur/l10n-central/.hg/patches, missing ur).\nDo you think it would be clearer to use the same files of the MozReview section?", "in_reply_to_id": 123145494}