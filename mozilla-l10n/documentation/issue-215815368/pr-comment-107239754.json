{"url": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/comments/107239754", "pull_request_review_id": 28198445, "id": 107239754, "diff_hunk": "@@ -0,0 +1,261 @@\n+# How to add a new product to Stores\n+\n+Before starting, make sure to read the [overview](overview.md) document to get a general idea of what this web app does and its structure.\n+\n+This document will explain how to start tracking a new project, using Focus for Android as an example.\n+\n+## Add new product to configuration\n+\n+Configuration for the Stores web app is in the `Project` class (`app\\classes\\Stores\\Project.php`). The first thing to do it to add the project to `$products_data`, and you\u2019ll need to determine beforehand:\n+* How many channels are supported.\n+* Code name and displayed name for this product.\n+* If the product needs to support App Store (apple) or Play Store (google).\n+\n+This is the configuration for Focus for Android:\n+\n+```PHP\n+private $products_data = [\n+...\n+    'focus_android' =>\n+        [\n+            'channels' => ['release'],\n+            'name'     => 'Focus for Android',\n+            'store'    => 'google',\n+        ],\n+...\n+];\n+```\n+\n+Then you need to add an entry in `$supported_locales` for each of the channels available. Since Focus for Android only has a release channel, it will be:\n+\n+```PHP\n+private $supported_locales = [\n+...\n+    'focus_android' => [\n+        'release' => [\n+            'ar', 'ast', 'az', 'bn-BD', 'ca', 'cs', 'cy', 'de', 'el', 'eo',\n+            'es-AR', 'es-CL', 'es-ES', 'es-MX', 'fa', 'fr', 'fy-NL', 'he',\n+            'hu', 'hy-AM', 'id', 'it', 'ja', 'kab', 'ko', 'lo', 'nl', 'pl',\n+            'pt-BR', 'ru', 'sk', 'sl', 'sq', 'sv-SE', 'th', 'tr', 'uk',\n+            'zh-CN', 'zh-TW',\n+        ],\n+    ],\n+...\n+];\n+```\n+\n+Note: it the project is tracked on [Webstatus](https://l10n.mozilla-community.org/webstatus/), you can use its [API](https://github.com/mozilla-l10n/webstatus/#available-urls) to get the list of all locales available ([example](https://l10n.mozilla-community.org/webstatus/api/?product=focus-android&txt) for Focus for Android).\n+\n+The next step is to add which templates and .lang files will be used for this project. In case of Focus for Android there is:\n+* `template`: PHP file used to display the full information about this product.\n+* `listing`: .lang file containing the strings used in template (description, keywords, etc.).\n+* `screenshots`: .lang file used to localize screenshots. It\u2019s distinct from the main .lang file in order to support only a subset of languages.\n+\n+Since it\u2019s the first launch for Focus for Android, a `whatsnew` entry won\u2019t be needed, but it will be starting from the first update.\n+\n+**Important**: follow the naming convention of existing products.\n+\n+Here\u2019s how the `focus_android` entry will look like:\n+\n+```PHP\n+private $$templates = [\n+...\n+    'focus_android' => [\n+        'release' => [\n+            'template'    => 'focus_android/release/listing_mar_2017.php',\n+            'listing'     => 'focus_android/description_release.lang',\n+            'screenshots' => 'focus_android/screenshots_v1.lang',\n+        ],\n+    ],\n+...\n+];\n+```\n+\n+## Add templates\n+\n+Now that the configuration is done, you need to add the actual template file. Templates are stored in `app/templates`, and the easiest way to start is by copying an existing project, in this case you can copy templates from Focus for iOS, making sure to rename the folder to `focus_android`, and the template to `listing_mar_2017.php`, as specified in the configuration above.\n+\n+This is the initial part of the template:\n+\n+```PHP\n+<?php\n+namespace Stores;\n+\n+// Include closure needed in template\n+include INC . 'utilities.php';\n+\n+$app_title = function ($translations) use ($_) {\n+    return $_('Firefox Focus: The privacy browser');\n+};\n+\n+$description = function ($translations) use ($_) {\n+    return <<<OUT\n+{$_('Browse like no one\u2019s watching.')} {$_('The new Firefox Focus automatically blocks a wide range of online trackers \u2014 from the moment you launch it to the second you leave it.')} {$_('Easily erase your history, passwords and cookies, so you won\u2019t get followed by things like unwanted ads.')}\n+\n+{$_('\u201cPrivate browsing\u201d on most browsers isn\u2019t comprehensive or easy to use.')} {$_('Focus is next-level privacy that\u2019s free, always on and always on your side \u2014 because it\u2019s backed by Mozilla, the non-profit that fights for your rights on the Web.')}\n+\n+{$_('AUTOMATIC PRIVACY')}\n+\u2022 {$_('Blocks a wide range of common Web trackers without any settings to set')}\n+\u2022 {$_('Easily erases your history \u2014 no passwords, no cookies, no trackers')}\n+\n+{$_('BROWSE FASTER')}\n+\u2022 {$_('By removing trackers and ads, Web pages may require less data and load faster')}\n+\n+{$_('MADE BY MOZILLA')}\n+\u2022 {$_('We believe everyone should have control over their lives online. That\u2019s what we\u2019ve been fighting for since 1998.')}\n+OUT;\n+};\n+...\n+```\n+\n+The first lines are common to all templates: they define the `namespace` and include a set of helper functions. Then, each section of the template is defined as a variable that returns translations for selected strings. The simplest case is:\n+\n+```PHP\n+$app_title = function ($translations) use ($_) {\n+    return $_('Firefox Focus: The privacy browser');\n+};\n+```\n+\n+`$app_title` is defined as a function that returns the translation, using the helper function `$_()`, for only one string.\n+\n+In case there are more strings in a section, [HEREDOC](http://php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc) syntax can be used.\n+\n+```PHP\n+$screenshots = function ($translations) use ($_) {\n+    return <<<OUT\n+{$_('Automatically block ads<br>& other Web trackers')}\n+\n+{$_('Browse Faster<br>Web pages may load faster<br>by removing trackers')}\n+OUT;\n+};\n+```\n+\n+Associating a group of strings to a variable allows to count the total number of characters for a section, and see if it\u2019s longer than allowed.\n+\n+Pay attention to the log when testing a new template that you\u2019ve copied from another product, some functions and variables are exclusive of a specific store, for example:\n+* `$keywords_warning` is defined only for App Stores projects.\n+* `$short_desc` is defined only for Play Store projects.\n+\n+## Add views\n+\n+The next step is to add a view for each channel supported for this product. Views are stored in `views/product_name/channel`, in case of Focus for Android `views/focus_android/release`. There are 2 files to create:\n+* `locale_view.php`: used for *General view*.\n+* `locale_view_escaped.php`: used for *Description raw HTML*. It\u2019s the same content as `locale_view.php`, but each element is included in `<pre contenteditable=\"true\"></pre>` elements.\n+\n+As for templates, the easiest way to start is by copying files from an existing product.\n+\n+This is how the first part of `locale_view.php` looks like:\n+\n+```PHP\n+<h1>Focus for Android Listing Copy (<?= $request['locale'] ?>)</h1>\n+\n+<h3>Title &mdash; <?= $title_warning ?></h3>\n+<pre><?= $app_title($translations) ?></pre>\n+\n+<h3>Short Description &mdash; <?= $short_desc_warning ?></h3>\n+<pre><?= $short_desc($translations) ?></pre>\n+```\n+\n+As you can see, it simply calls the variables created inside the template. The interesting part is that you can add more complex logic in this file:\n+\n+```PHP\n+<?php\n+    /*\n+        Check if the file used for screenshots exists, display this section\n+        only in that case.\n+    */\n+    $screenshot_lang = $project->getLangFiles($request['locale'], $request['product'], $request['channel'], 'screenshots');\n+    if ($screenshot_lang) {\n+        $locale_file = LOCALES_PATH . $request['locale'] . '/' . array_shift($screenshot_lang);\n+        if (file_exists($locale_file)) {\n+            ?>\n+            <h3>Screenshots</h3>\n+            <pre class=\"text-center\"><?= $screenshots($translations) ?></pre>\n+<?php\n+\n+        }\n+    }\n+?>\n+```\n+\n+In this case, the screenshots session is displayed only if the requested locale actually has screenshots, i.e. if the file specified in the configuration is available.\n+\n+`locale_view_escaped.php` is exactly the same as the default view, only using a different HTML structure to make copy and paste easier. For example, the same section displayed above becomes:\n+\n+```PHP\n+<h1>Focus for Android Listing Copy (<?= $request['locale'] ?>)</h1>\n+\n+<h3>Title &mdash; <?= $title_warning ?></h3>\n+<pre contenteditable=\"true\"><?= htmlspecialchars($app_title($translations)) ?></pre>\n+\n+<h3>Short Description &mdash; <?= $short_desc_warning ?></h3>\n+<pre contenteditable=\"true\"><?= $short_desc($translations) ?></pre>\n+```\n+\n+As for the templates, pay attention to differences between a product shipping on Play Store and one shipping on App Stores:\n+* For Android products there should be length warnings on title, short description, and description.\n+* There are no keywords in Android, short description is not available for iOS products.", "path": "tools/stores_l10n/add_new_product.md", "position": null, "original_position": 197, "commit_id": "7c964f1625489adefcca1f74b14bd6794040080b", "original_commit_id": "660183463eedcc096a4dae0c0efa9207e6290f54", "user": {"login": "flodolo", "id": 3644868, "avatar_url": "https://avatars0.githubusercontent.com/u/3644868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodolo", "html_url": "https://github.com/flodolo", "followers_url": "https://api.github.com/users/flodolo/followers", "following_url": "https://api.github.com/users/flodolo/following{/other_user}", "gists_url": "https://api.github.com/users/flodolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodolo/subscriptions", "organizations_url": "https://api.github.com/users/flodolo/orgs", "repos_url": "https://api.github.com/users/flodolo/repos", "events_url": "https://api.github.com/users/flodolo/events{/privacy}", "received_events_url": "https://api.github.com/users/flodolo/received_events", "type": "User", "site_admin": false}, "body": "indeed, I wasn't planning to be exhaustive, but maybe it's not a bad to idea to add all cases.", "created_at": "2017-03-21T18:35:18Z", "updated_at": "2017-03-23T16:49:20Z", "html_url": "https://github.com/mozilla-l10n/documentation/pull/73#discussion_r107239754", "pull_request_url": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/73", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/comments/107239754"}, "html": {"href": "https://github.com/mozilla-l10n/documentation/pull/73#discussion_r107239754"}, "pull_request": {"href": "https://api.github.com/repos/mozilla-l10n/documentation/pulls/73"}}, "body_html": "<p>indeed, I wasn't planning to be exhaustive, but maybe it's not a bad to idea to add all cases.</p>", "body_text": "indeed, I wasn't planning to be exhaustive, but maybe it's not a bad to idea to add all cases.", "in_reply_to_id": 107222525}