{"body": "> I've already left some comments. Otherwise, is the goal that extant recipes get the power to trigger their own preference experiments? \r\n\r\nI'm not quite sure what you mean by \"extant recipes\". All the recipes will have access to the methods for starting them, but only the `preference-experiment` action will use the API. Having non-preference-experiment recipes use the API isn't a specific goal.\r\n\r\n>     should we limit what preferences they can toggle? Some are more... problematic... than others.\r\n\r\nI think limiting what preferences can be toggled is up to the approval process that RelMan comes up with for approving these recipes to go out. Even for scary things like update-server URLs, I can see us using Normandy to run a test of moving, like, 1% of users to a new update server to see if it can handle the load or break things for those users. This PR doesn't have it, but we plan to add a timeout so that if the browser can't reach the recipe server after some amount of days, we revert the experiment and preference, which makes this feature ideal for testing things like that.\r\n\r\n>     can they coordinate setting more than one pref per recipe?\r\n\r\nNope, it's explicitly not something we want to support. Features that want to change multiple preferences for an experiment will be required to add a new preference that triggers those changes. Apparently changing multiple preferences has implications for experiment design and reporting that the working group didn't want to deal with.", "body_text": "I've already left some comments. Otherwise, is the goal that extant recipes get the power to trigger their own preference experiments?\n\nI'm not quite sure what you mean by \"extant recipes\". All the recipes will have access to the methods for starting them, but only the preference-experiment action will use the API. Having non-preference-experiment recipes use the API isn't a specific goal.\n\nshould we limit what preferences they can toggle? Some are more... problematic... than others.\n\n\nI think limiting what preferences can be toggled is up to the approval process that RelMan comes up with for approving these recipes to go out. Even for scary things like update-server URLs, I can see us using Normandy to run a test of moving, like, 1% of users to a new update server to see if it can handle the load or break things for those users. This PR doesn't have it, but we plan to add a timeout so that if the browser can't reach the recipe server after some amount of days, we revert the experiment and preference, which makes this feature ideal for testing things like that.\n\ncan they coordinate setting more than one pref per recipe?\n\n\nNope, it's explicitly not something we want to support. Features that want to change multiple preferences for an experiment will be required to add a new preference that triggers those changes. Apparently changing multiple preferences has implications for experiment design and reporting that the working group didn't want to deal with.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/288476048", "created_at": "2017-03-22T17:27:37Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/623#issuecomment-288476048", "updated_at": "2017-03-22T17:27:37Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<blockquote>\n<p>I've already left some comments. Otherwise, is the goal that extant recipes get the power to trigger their own preference experiments?</p>\n</blockquote>\n<p>I'm not quite sure what you mean by \"extant recipes\". All the recipes will have access to the methods for starting them, but only the <code>preference-experiment</code> action will use the API. Having non-preference-experiment recipes use the API isn't a specific goal.</p>\n<blockquote>\n<pre><code>should we limit what preferences they can toggle? Some are more... problematic... than others.\n</code></pre>\n</blockquote>\n<p>I think limiting what preferences can be toggled is up to the approval process that RelMan comes up with for approving these recipes to go out. Even for scary things like update-server URLs, I can see us using Normandy to run a test of moving, like, 1% of users to a new update server to see if it can handle the load or break things for those users. This PR doesn't have it, but we plan to add a timeout so that if the browser can't reach the recipe server after some amount of days, we revert the experiment and preference, which makes this feature ideal for testing things like that.</p>\n<blockquote>\n<pre><code>can they coordinate setting more than one pref per recipe?\n</code></pre>\n</blockquote>\n<p>Nope, it's explicitly not something we want to support. Features that want to change multiple preferences for an experiment will be required to add a new preference that triggers those changes. Apparently changing multiple preferences has implications for experiment design and reporting that the working group didn't want to deal with.</p>", "id": 288476048, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/623"}