{"original_position": 75, "diff_hunk": "@@ -0,0 +1,306 @@\n+\"use strict\";\n+\n+Cu.import(\"resource://gre/modules/Preferences.jsm\");\n+Cu.import(\"resource://shield-recipe-client/lib/PreferenceExperiments.jsm\");\n+\n+load(\"utils.js\"); /* globals withMockPreferences */\n+\n+// Save ourselves some typing\n+const {withMockExperiments} = PreferenceExperiments;\n+\n+function experimentFactory(attrs) {\n+  return Object.assign({\n+    name: \"fakename\",\n+    branch: \"fakebranch\",\n+    expired: false,\n+    lastSeen: new Date().toJSON(),\n+    preferenceName: \"fake.preference\",\n+    preferenceValue: \"falkevalue\",\n+    previousPreferenceValue: \"oldfakevalue\",\n+  }, attrs);\n+}\n+\n+// clearAllExperimentStorage\n+add_task(withMockExperiments(function* (experiments) {\n+  experiments[\"test\"] = experimentFactory({name: \"test\"});\n+  ok(yield PreferenceExperiments.has(\"test\"), \"Mock experiment is detected.\");\n+  yield PreferenceExperiments.clearAllExperimentStorage();\n+  ok(\n+    !(yield PreferenceExperiments.has(\"test\")),\n+    \"clearAllExperimentStorage removed all stored experiments\",\n+  );\n+}));\n+\n+// start should throw if an experiment with the given name already exists\n+add_task(withMockExperiments(function* (experiments) {\n+  experiments[\"test\"] = experimentFactory({name: \"test\"});\n+  yield Assert.rejects(\n+    PreferenceExperiments.start(\"test\", \"branch\", \"fake.preference\", \"value\"),\n+    \"start threw an error due to a conflicting experiment name\",\n+  );\n+}));\n+\n+// start should throw if an experiment for the given preference is active\n+add_task(withMockExperiments(function* (experiments) {\n+  experiments[\"test\"] = experimentFactory({name: \"test\", preferenceName: \"fake.preference\"});\n+  yield Assert.rejects(\n+    PreferenceExperiments.start(\"different\", \"branch\", \"fake.preference\", \"value\"),\n+    \"start threw an error due to an active experiment for the given preference\",\n+  );\n+}));\n+\n+// start should save experiment data, modify the preference, and register a\n+// watcher.\n+add_task(withMockExperiments(withMockPreferences(function* (experiments, mockPreferences) {\n+  const startObserver = sinon.stub(PreferenceExperiments, \"startObserver\");\n+  mockPreferences.set(\"fake.preference\", \"oldvalue\");\n+\n+  yield PreferenceExperiments.start(\"test\", \"branch\", \"fake.preference\", \"newvalue\");\n+  ok(\"test\" in experiments, \"start saved the experiment\");\n+  ok(\n+    startObserver.calledWith(\"test\", \"fake.preference\", \"newvalue\"),\n+    \"start registered an observer\",\n+  );\n+\n+  const experiment = experiments[\"test\"];\n+  equal(experiment.name, \"test\", \"start saved the experiment name\");\n+  equal(experiment.branch, \"branch\", \"start saved the experiment branch\");\n+  equal(experiment.expired, false, \"start saved the expired status\");\n+  equal(experiment.preferenceName, \"fake.preference\", \"start saved the preference name\");\n+  equal(experiment.preferenceValue, \"newvalue\", \"start saved the preference value\");\n+  equal(\n+    experiment.previousPreferenceValue,\n+    \"oldvalue\",\n+    \"start saved the previous preference value\",\n+  );", "body_text": "I think there is a deepEqual hiding around here somwhere, if you wanted to do all these comparisons at once.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/623", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107294594", "created_at": "2017-03-21T22:44:21Z", "author_association": "MEMBER", "body": "I think there is a `deepEqual` hiding around here somwhere, if you wanted to do all these comparisons at once.", "updated_at": "2017-03-25T04:25:33Z", "html_url": "https://github.com/mozilla/normandy/pull/623#discussion_r107294594", "pull_request_review_id": 28256784, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107294594"}, "html": {"href": "https://github.com/mozilla/normandy/pull/623#discussion_r107294594"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/623"}}, "commit_id": "6bf1456bdc7a171d0c91c246b0cb9906dd2e320e", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<p>I think there is a <code>deepEqual</code> hiding around here somwhere, if you wanted to do all these comparisons at once.</p>", "original_commit_id": "f4732714cbf1fbdf2bcd59fc95e1894330d44425", "id": 107294594}