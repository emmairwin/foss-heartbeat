{"original_position": 61, "diff_hunk": "@@ -0,0 +1,296 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\n+/**\n+ * Preference Experiments temporarily change a preference to one of several test\n+ * values for the duration of the experiment. Telemetry packets are annotated to\n+ * show what experiments are active, and we use this data to measure the\n+ * effectiveness of the preference change.\n+ *\n+ * Info on active and past experiments is stored in a JSON file in the profile\n+ * folder.\n+ *\n+ * Active preference experiments are stopped if they aren't active on the recipe\n+ * server. They also expire if Firefox isn't able to contact the recipe server\n+ * after a period of time, as well as if the user modifies the preference during\n+ * an active experiment.\n+ */\n+\n+/**\n+ * Experiments store info about an active or expired preference experiment.\n+ * They are single-depth objects to simplify cloning.\n+ * @typedef {Object} Experiment\n+ * @property {string} name\n+ *   Unique name of the experiment\n+ * @property {string} branch\n+ *   Experiment branch that the user was matched to\n+ * @property {boolean} expired\n+ *   If false, the experiment is active.\n+ * @property {string} lastSeen\n+ *   ISO-formatted date string of when the experiment was last seen from the\n+ *   recipe server.\n+ * @property {string} preferenceName\n+ *   Name of the preference affected by this experiment.\n+ * @property {string|integer|boolean} preferenceValue\n+ *   Value to change the preference to during the experiment.\n+ * @property {string|integer|boolean|undefined} previousPreferenceValue\n+ *   Value of the preference prior to the experiment, or undefined if it was\n+ *   unset.\n+ */\n+\n+\"use strict\";\n+\n+const {utils: Cu} = Components;\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+\n+XPCOMUtils.defineLazyModuleGetter(this, \"CleanupManager\", \"resource://shield-recipe-client/lib/CleanupManager.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"JSONFile\", \"resource://gre/modules/JSONFile.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"OS\", \"resource://gre/modules/osfile.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"LogManager\", \"resource://shield-recipe-client/lib/LogManager.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"Preferences\", \"resource://gre/modules/Preferences.jsm\");\n+\n+this.EXPORTED_SYMBOLS = [\"PreferenceExperiments\"];\n+\n+const EXPERIMENT_FILE = \"shield-preference-experiments.json\";\n+\n+/**\n+ * Asynchronously load the JSON file that stores experiment status in the profile.\n+ */\n+let storePromise;\n+function loadStorage() {", "body_text": "Nit: because this doesn't always actually do a file load, I think calling it ensureStorage or similar would make more sense.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/623", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107392658", "created_at": "2017-03-22T11:44:11Z", "author_association": "CONTRIBUTOR", "body": "Nit: because this doesn't always actually do a file load, I think calling it `ensureStorage` or similar would make more sense.", "updated_at": "2017-03-25T04:25:33Z", "html_url": "https://github.com/mozilla/normandy/pull/623#discussion_r107392658", "pull_request_review_id": 28359641, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107392658"}, "html": {"href": "https://github.com/mozilla/normandy/pull/623#discussion_r107392658"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/623"}}, "commit_id": "6bf1456bdc7a171d0c91c246b0cb9906dd2e320e", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/lib/PreferenceExperiments.jsm", "body_html": "<p>Nit: because this doesn't always actually do a file load, I think calling it <code>ensureStorage</code> or similar would make more sense.</p>", "original_commit_id": "7956cfdb98803a4d1a41c4abe5dc29ad6a5755b8", "id": 107392658}