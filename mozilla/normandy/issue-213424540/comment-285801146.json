{"body": "I learned a bit more about CSP and verified this better by actually running it against Firefox 52. Like @Osmose learned from the docs, `*` isn't a valid value for `frame-ancestors`. Setting it to `[]` makes `django-csp` delete the directive entirely, which is what we want for an \"allow all\" rule.\r\n\r\nThe \"There was a problem fetching the SelfSupport URL\" error we saw earlier was actually a CSP error, and after adding the CSP reporting endpoint, it was pretty easy to verify that. I can remove that if it isn't wanted. It isn't needed for this fix, but I found it quite helpful.\r\n\r\n@jvehent I looked through the Firefox code and still wasn't able to figure out a origin that works here.  I tried `chrome:` and `resource:` based on [the code I found](http://searchfox.org/mozilla-central/source/xpfe/appshell/nsAppShellService.cpp#55), but they didn't work. This page doesn't render anything, so I don't think there is any risk of click jacking. Are there any other attacks we are worried about with any site being able to frame this page?", "body_text": "I learned a bit more about CSP and verified this better by actually running it against Firefox 52. Like @Osmose learned from the docs, * isn't a valid value for frame-ancestors. Setting it to [] makes django-csp delete the directive entirely, which is what we want for an \"allow all\" rule.\nThe \"There was a problem fetching the SelfSupport URL\" error we saw earlier was actually a CSP error, and after adding the CSP reporting endpoint, it was pretty easy to verify that. I can remove that if it isn't wanted. It isn't needed for this fix, but I found it quite helpful.\n@jvehent I looked through the Firefox code and still wasn't able to figure out a origin that works here.  I tried chrome: and resource: based on the code I found, but they didn't work. This page doesn't render anything, so I don't think there is any risk of click jacking. Are there any other attacks we are worried about with any site being able to frame this page?", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/285801146", "created_at": "2017-03-10T22:21:47Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/604#issuecomment-285801146", "updated_at": "2017-03-10T22:23:08Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<p>I learned a bit more about CSP and verified this better by actually running it against Firefox 52. Like <a class=\"user-mention\" href=\"https://github.com/osmose\">@Osmose</a> learned from the docs, <code>*</code> isn't a valid value for <code>frame-ancestors</code>. Setting it to <code>[]</code> makes <code>django-csp</code> delete the directive entirely, which is what we want for an \"allow all\" rule.</p>\n<p>The \"There was a problem fetching the SelfSupport URL\" error we saw earlier was actually a CSP error, and after adding the CSP reporting endpoint, it was pretty easy to verify that. I can remove that if it isn't wanted. It isn't needed for this fix, but I found it quite helpful.</p>\n<p><a class=\"user-mention\" href=\"https://github.com/jvehent\">@jvehent</a> I looked through the Firefox code and still wasn't able to figure out a origin that works here.  I tried <code>chrome:</code> and <code>resource:</code> based on <a href=\"http://searchfox.org/mozilla-central/source/xpfe/appshell/nsAppShellService.cpp#55\" rel=\"nofollow\">the code I found</a>, but they didn't work. This page doesn't render anything, so I don't think there is any risk of click jacking. Are there any other attacks we are worried about with any site being able to frame this page?</p>", "id": 285801146, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/604"}