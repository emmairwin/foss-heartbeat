{"body_text": "STR:\n\nChoose a preference with a default value (e.g. browser.newtabpage.columns) and set it to a non-default user-set value. This means the default preference branch has a value, and the user preference branch has a different value.\nCreate a preference experiment recipe for that preference. Set it to use the default preference branch. To illustrate the problem, create a branch with a value different from the default and user-set values from step 1.\nExecute the recipe. You will be enrolled in the experiment, and the default branch will get a different value. But the user-set value is still in place.\n\nPreviously, we discussed this issue and decided that filter expressions can prevent this from happening (by filtering out users who have user-set values for the preferences we want to test). @mythmon and I discussed it some more, and have decided that our default behavior should be to avoid enrolling users with user-set values into experiments on the default preference branch for those prefs.\nOur current behavior is fine and should be preserved for all other combinations (default-exp default-value, user-exp user-value, and user-exp default-value).", "labels": [], "number": 797, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2018-01-30T20:10:00Z", "body_html": "<p>STR:</p>\n<ol>\n<li>Choose a preference with a default value (e.g. <code>browser.newtabpage.columns</code>) and set it to a non-default user-set value. This means the default preference branch has a value, and the user preference branch has a different value.</li>\n<li>Create a preference experiment recipe for that preference. Set it to use the default preference branch. To illustrate the problem, create a branch with a value different from the default and user-set values from step 1.</li>\n<li>Execute the recipe. You will be enrolled in the experiment, and the default branch will get a different value. But the user-set value is still in place.</li>\n</ol>\n<p>Previously, we discussed this issue and decided that filter expressions can prevent this from happening (by filtering out users who have user-set values for the preferences we want to test). <a class=\"user-mention\" href=\"https://github.com/mythmon\">@mythmon</a> and I discussed it some more, and have decided that our default behavior should be to avoid enrolling users with user-set values into experiments on the default preference branch for those prefs.</p>\n<p>Our current behavior is fine and should be preserved for all other combinations (default-exp default-value, user-exp user-value, and user-exp default-value).</p>", "id": 234386034, "title": "Default-branch preference experiments enroll users with user-set values", "comments": 1, "state": "closed", "body": "STR:\r\n1. Choose a preference with a default value (e.g. `browser.newtabpage.columns`) and set it to a non-default user-set value. This means the default preference branch has a value, and the user preference branch has a different value.\r\n2. Create a preference experiment recipe for that preference. Set it to use the default preference branch. To illustrate the problem, create a branch with a value different from the default and user-set values from step 1.\r\n3. Execute the recipe. You will be enrolled in the experiment, and the default branch will get a different value. But the user-set value is still in place.\r\n\r\nPreviously, we discussed this issue and decided that filter expressions can prevent this from happening (by filtering out users who have user-set values for the preferences we want to test). @mythmon and I discussed it some more, and have decided that our default behavior should be to avoid enrolling users with user-set values into experiments on the default preference branch for those prefs.\r\n\r\nOur current behavior is fine and should be preserved for all other combinations (default-exp default-value, user-exp user-value, and user-exp default-value).", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/797/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/797/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/797/comments", "html_url": "https://github.com/mozilla/normandy/issues/797", "updated_at": "2018-01-30T20:10:00Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/797", "created_at": "2017-06-08T01:23:30Z", "assignees": []}