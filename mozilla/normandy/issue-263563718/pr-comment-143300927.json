{"original_position": 18, "diff_hunk": "@@ -0,0 +1,37 @@\n+import { combineReducers } from 'redux';\n+import { fromJS, Map, List } from 'immutable';\n+\n+import {\n+  EXPERIMENTS_RECEIVE,\n+  EXPERIMENT_ACCEPTED,\n+  EXPERIMENT_ALREADY_ACCEPTED,\n+  EXPERIMENT_REJECTED,\n+  EXPERIMENT_SELECT_REJECTED,\n+} from 'control/state/action-types';\n+\n+function filterExperiments(state, slug) {\n+  const experiments = state.get('experiments', new List());\n+  const filteredExperiments = experiments.filter(experiment => experiment.get('experiment_slug') !== slug);\n+  return state.set('experiments', filteredExperiments);\n+}\n+\n+function items(state = new Map(), action) {", "body_text": "The default value here should probably have the initial keys in it, like an empty value for experiments. Having the correct shape in the state at all times helps keep the state's API consistent, making other code more reliable. A common pattern for that is to have a separate function for the initial value, like this:\nfunction initialValue() {\n  return new Map()\n    .set('experiments', new List())\n    .set('rejected_experiment', null);\n}\n\nfunction items(state = initialState(), action) {\n  // ...\n}", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1098", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/143300927", "created_at": "2017-10-06T21:45:06Z", "author_association": "MEMBER", "body": "The default value here should probably have the initial keys in it, like an empty value for `experiments`. Having the correct shape in the state at all times helps keep the state's API consistent, making other code more reliable. A common pattern for that is to have a separate function for the initial value, like this:\r\n\r\n```js\r\nfunction initialValue() {\r\n  return new Map()\r\n    .set('experiments', new List())\r\n    .set('rejected_experiment', null);\r\n}\r\n\r\nfunction items(state = initialState(), action) {\r\n  // ...\r\n}\r\n```", "updated_at": "2017-10-19T17:43:08Z", "html_url": "https://github.com/mozilla/normandy/pull/1098#discussion_r143300927", "pull_request_review_id": 67795895, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/143300927"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1098#discussion_r143300927"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1098"}}, "commit_id": "5b305d208f017ac1c7c09a9c00574348a1b01f74", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control/state/app/experimenter/reducers.js", "body_html": "<p>The default value here should probably have the initial keys in it, like an empty value for <code>experiments</code>. Having the correct shape in the state at all times helps keep the state's API consistent, making other code more reliable. A common pattern for that is to have a separate function for the initial value, like this:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">initialValue</span>() {\n  <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Map</span>()\n    .<span class=\"pl-c1\">set</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>experiments<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">new</span> <span class=\"pl-en\">List</span>())\n    .<span class=\"pl-c1\">set</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rejected_experiment<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">null</span>);\n}\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">items</span>(<span class=\"pl-smi\">state</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">initialState</span>(), <span class=\"pl-smi\">action</span>) {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> ...</span>\n}</pre></div>", "original_commit_id": "98fc1d6a39c82abe4419e91c2dd41038188e4597", "id": 143300927}