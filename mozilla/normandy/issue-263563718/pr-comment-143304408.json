{"original_position": 85, "diff_hunk": "@@ -0,0 +1,206 @@\n+import React from 'react';\n+import { Card, Modal } from 'antd';\n+import { shallow } from 'enzyme';\n+\n+import ExperimentFactory from 'control/tests/state/experimenter';\n+import LoadingOverlay from 'control/components/common/LoadingOverlay';\n+import QueryExperiments from 'control/components/data/QueryExperiments';\n+import ImportExperimentsPage, {\n+  ExperimentAcceptButton,\n+  ExperimentRejectButton,\n+  ExperimentButtons,\n+  ExperimentTitle,\n+  Experiment,\n+  ExperimentRejectModal,\n+  ExperimentsList,\n+} from 'control/components/recipes/ImportExperimentsPage';\n+\n+describe('<ImportExperimentsPage>', () => {\n+  it('should work', () => {\n+    const wrapper = () => shallow(<ImportExperimentsPage />);\n+    expect(wrapper).not.toThrow();\n+  });\n+  it('should contain QueryExperiments', () => {\n+    const wrapper = shallow(<ImportExperimentsPage />);\n+    expect(wrapper.contains(<QueryExperiments />)).toBeTruthy();\n+  });\n+  it('should contain LoadingOverlay', () => {\n+    const wrapper = shallow(<ImportExperimentsPage />);\n+    expect(wrapper.find(LoadingOverlay).length).toEqual(1);\n+  });\n+  it('should contain ExperimentRejectModal', () => {\n+    const wrapper = shallow(<ImportExperimentsPage />);\n+    expect(wrapper.contains(<ExperimentRejectModal />)).toBeTruthy();\n+  });\n+  it('should contain ExperimentsList', () => {\n+    const wrapper = shallow(<ImportExperimentsPage />);\n+    expect(wrapper.contains(<ExperimentsList />)).toBeTruthy();\n+  });\n+});\n+\n+describe('<ExperimentsList>', () => {\n+  const props = {\n+    experiments: ExperimentFactory.buildMany(3),\n+  };\n+\n+  it('should work', () => {\n+    const wrapper = () => shallow(<ExperimentsList.WrappedComponent {...props} />);\n+    expect(wrapper).not.toThrow();\n+  });\n+  it('should contain Experiments', () => {\n+    const wrapper = shallow(<ExperimentsList.WrappedComponent {...props} />);\n+    expect(wrapper.find(Experiment).length).toEqual(props.experiments.length);\n+  });\n+});\n+\n+describe('<ExperimentRejectModal>', () => {\n+  const props = {\n+    rejectExperiment: () => {},\n+    rejectedExperiment: null,\n+    selectRejectedExperiment: () => {},\n+  };\n+\n+  it('should work', () => {\n+    const wrapper = () => shallow(<ExperimentRejectModal.WrappedComponent {...props} />);\n+    expect(wrapper).not.toThrow();\n+  });\n+  it('should not contain a Modal if no rejectedExperiment is set', () => {\n+    const wrapper = shallow(<ExperimentRejectModal.WrappedComponent {...props} />);\n+    expect(wrapper.find(Modal).length).toEqual(0);\n+  });\n+  it('should contain a Modal if rejectedExperiment is set', () => {\n+    const testProps = {\n+      rejectExperiment: () => {},\n+      rejectedExperiment: ExperimentFactory.build(),\n+      selectRejectedExperiment: () => {},\n+    };\n+\n+    const wrapper = shallow(<ExperimentRejectModal.WrappedComponent {...testProps} />);\n+    expect(wrapper.find(Modal).length).toEqual(1);\n+  });\n+  it('should store the rejection reason in its state when edited', () => {\n+    const reason = 'rejected for reasons.';\n+    const wrapper = shallow(<ExperimentRejectModal.WrappedComponent {...props} />);\n+    wrapper.instance().handleReasonChange({ target: { value: reason } });\n+    expect(wrapper.state().reason).toEqual(reason);", "body_text": "I didn't know that enzyme gave access to the state like this. That's cool.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1098", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/143304408", "created_at": "2017-10-06T22:09:58Z", "author_association": "MEMBER", "body": "I didn't know that enzyme gave access to the state like this. That's cool.", "updated_at": "2017-10-19T17:43:08Z", "html_url": "https://github.com/mozilla/normandy/pull/1098#discussion_r143304408", "pull_request_review_id": 67795895, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/143304408"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1098#discussion_r143304408"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1098"}}, "commit_id": "5b305d208f017ac1c7c09a9c00574348a1b01f74", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": 94, "path": "recipe-server/client/control/tests/components/recipes/test_ImportExperimentsPage.js", "body_html": "<p>I didn't know that enzyme gave access to the state like this. That's cool.</p>", "original_commit_id": "98fc1d6a39c82abe4419e91c2dd41038188e4597", "id": 143304408}