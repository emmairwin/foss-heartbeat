{"body_text": "This PR encapsulates the core functionality to query experiment definitions from Experimenter (https://github.com/mozilla/experimenter) and import them into Normandy through the Normandy web UI.\nThis adds functionality to the Django backend to host the Experimenter API URL to the React frontend, state actions/reducers/selectors to receive that data and store it in the State, and components to display the experiments to the user.\nRemaining TODO inside this PR:\n\n\n Look up 'actions' from the store by a stored constant (I'm not sure how we want to handle this, I added a note in the code)\n\n\n Handle the case that a recipe sent to Normandy already exists (I think we want to add a richer response code to the recipe API that signals to the client that it already exists, which the client can check for and react accordingly)\n\n\n Handle the case that the Normandy server sends a null value for the Experimenter API URL which the client can then gracefully handle.\n\n\nThank you for taking the time to review this!", "labels": [], "number": 1098, "assignee": {"following_url": "https://api.github.com/users/jaredkerim/following{/other_user}", "events_url": "https://api.github.com/users/jaredkerim/events{/privacy}", "organizations_url": "https://api.github.com/users/jaredkerim/orgs", "url": "https://api.github.com/users/jaredkerim", "gists_url": "https://api.github.com/users/jaredkerim/gists{/gist_id}", "html_url": "https://github.com/jaredkerim", "subscriptions_url": "https://api.github.com/users/jaredkerim/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/119884?v=4", "repos_url": "https://api.github.com/users/jaredkerim/repos", "received_events_url": "https://api.github.com/users/jaredkerim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/jaredkerim/starred{/owner}{/repo}", "site_admin": false, "login": "jaredkerim", "type": "User", "id": 119884, "followers_url": "https://api.github.com/users/jaredkerim/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-11-16T22:20:25Z", "body_html": "<p>This PR encapsulates the core functionality to query experiment definitions from Experimenter (<a href=\"https://github.com/mozilla/experimenter\">https://github.com/mozilla/experimenter</a>) and import them into Normandy through the Normandy web UI.</p>\n<p>This adds functionality to the Django backend to host the Experimenter API URL to the React frontend, state actions/reducers/selectors to receive that data and store it in the State, and components to display the experiments to the user.</p>\n<p>Remaining TODO inside this PR:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Look up 'actions' from the store by a stored constant (I'm not sure how we want to handle this, I added a note in the code)</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Handle the case that a recipe sent to Normandy already exists (I think we want to add a richer response code to the recipe API that signals to the client that it already exists, which the client can check for and react accordingly)</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Handle the case that the Normandy server sends a null value for the Experimenter API URL which the client can then gracefully handle.</p>\n</li>\n</ul>\n<p>Thank you for taking the time to review this!</p>", "id": 263563718, "title": "Fixes #917 Import Experiments from Experimenter into Normandy", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/1098", "diff_url": "https://github.com/mozilla/normandy/pull/1098.diff", "html_url": "https://github.com/mozilla/normandy/pull/1098", "patch_url": "https://github.com/mozilla/normandy/pull/1098.patch"}, "comments": 2, "state": "closed", "body": "This PR encapsulates the core functionality to query experiment definitions from Experimenter (https://github.com/mozilla/experimenter) and import them into Normandy through the Normandy web UI.\r\n\r\nThis adds functionality to the Django backend to host the Experimenter API URL to the React frontend, state actions/reducers/selectors to receive that data and store it in the State, and components to display the experiments to the user.\r\n\r\nRemaining TODO inside this PR:\r\n\r\n* [ ] Look up 'actions' from the store by a stored constant (I'm not sure how we want to handle this, I added a note in the code)\r\n\r\n* [x] Handle the case that a recipe sent to Normandy already exists (I think we want to add a richer response code to the recipe API that signals to the client that it already exists, which the client can check for and react accordingly)\r\n\r\n* [x] Handle the case that the Normandy server sends a null value for the Experimenter API URL which the client can then gracefully handle.\r\n\r\nThank you for taking the time to review this!", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/1098/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/1098/labels{/name}", "author_association": "CONTRIBUTOR", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/1098/comments", "html_url": "https://github.com/mozilla/normandy/pull/1098", "updated_at": "2017-11-16T22:20:25Z", "user": {"following_url": "https://api.github.com/users/jaredkerim/following{/other_user}", "events_url": "https://api.github.com/users/jaredkerim/events{/privacy}", "organizations_url": "https://api.github.com/users/jaredkerim/orgs", "url": "https://api.github.com/users/jaredkerim", "gists_url": "https://api.github.com/users/jaredkerim/gists{/gist_id}", "html_url": "https://github.com/jaredkerim", "subscriptions_url": "https://api.github.com/users/jaredkerim/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/119884?v=4", "repos_url": "https://api.github.com/users/jaredkerim/repos", "received_events_url": "https://api.github.com/users/jaredkerim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/jaredkerim/starred{/owner}{/repo}", "site_admin": false, "login": "jaredkerim", "type": "User", "id": 119884, "followers_url": "https://api.github.com/users/jaredkerim/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/1098", "created_at": "2017-10-06T20:32:46Z", "assignees": [{"following_url": "https://api.github.com/users/jaredkerim/following{/other_user}", "events_url": "https://api.github.com/users/jaredkerim/events{/privacy}", "organizations_url": "https://api.github.com/users/jaredkerim/orgs", "url": "https://api.github.com/users/jaredkerim", "gists_url": "https://api.github.com/users/jaredkerim/gists{/gist_id}", "html_url": "https://github.com/jaredkerim", "subscriptions_url": "https://api.github.com/users/jaredkerim/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/119884?v=4", "repos_url": "https://api.github.com/users/jaredkerim/repos", "received_events_url": "https://api.github.com/users/jaredkerim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/jaredkerim/starred{/owner}{/repo}", "site_admin": false, "login": "jaredkerim", "type": "User", "id": 119884, "followers_url": "https://api.github.com/users/jaredkerim/followers"}]}