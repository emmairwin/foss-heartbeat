{"body": "That looks good to me. The idea of having a flat structure that gets unpacked into the tree is something we've talked about positively before. It definitely seems like a good way to go.\r\n\r\nI've been pondering if the `Route` class should also take in the url definition (`/recipe/:recipeId/edit/`), and just get a list of Route objects, instead of a map. I'm not sure if that would help or hurt anything though.\r\n\r\nAlso, how do crumb title and `parentSlug`s fit into this? Would it be better for `Route` to take an options object instead, like this?\r\n\r\n```js\r\nnew Route({\r\n  url: '/recipe/:recipeId/clone/',\r\n  crumb: 'Clone',\r\n  slug: 'recipe-clone',\r\n  parentSlug: 'recipe-detail',\r\n})\r\n```\r\n\r\nAlso, some useful inspiration that I've been thinking about is [the way Django does routing](https://docs.djangoproject.com/en/dev/topics/http/urls/#examples). We definitely don't need to do things the way they did, but they can prove as a source of useful ideas if we get stuck.", "body_text": "That looks good to me. The idea of having a flat structure that gets unpacked into the tree is something we've talked about positively before. It definitely seems like a good way to go.\nI've been pondering if the Route class should also take in the url definition (/recipe/:recipeId/edit/), and just get a list of Route objects, instead of a map. I'm not sure if that would help or hurt anything though.\nAlso, how do crumb title and parentSlugs fit into this? Would it be better for Route to take an options object instead, like this?\nnew Route({\n  url: '/recipe/:recipeId/clone/',\n  crumb: 'Clone',\n  slug: 'recipe-clone',\n  parentSlug: 'recipe-detail',\n})\nAlso, some useful inspiration that I've been thinking about is the way Django does routing. We definitely don't need to do things the way they did, but they can prove as a source of useful ideas if we get stuck.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/335946739", "created_at": "2017-10-11T20:59:58Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/1065#issuecomment-335946739", "updated_at": "2017-10-11T20:59:58Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<p>That looks good to me. The idea of having a flat structure that gets unpacked into the tree is something we've talked about positively before. It definitely seems like a good way to go.</p>\n<p>I've been pondering if the <code>Route</code> class should also take in the url definition (<code>/recipe/:recipeId/edit/</code>), and just get a list of Route objects, instead of a map. I'm not sure if that would help or hurt anything though.</p>\n<p>Also, how do crumb title and <code>parentSlug</code>s fit into this? Would it be better for <code>Route</code> to take an options object instead, like this?</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">new</span> <span class=\"pl-en\">Route</span>({\n  url<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/recipe/:recipeId/clone/<span class=\"pl-pds\">'</span></span>,\n  crumb<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Clone<span class=\"pl-pds\">'</span></span>,\n  slug<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>recipe-clone<span class=\"pl-pds\">'</span></span>,\n  parentSlug<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>recipe-detail<span class=\"pl-pds\">'</span></span>,\n})</pre></div>\n<p>Also, some useful inspiration that I've been thinking about is <a href=\"https://docs.djangoproject.com/en/dev/topics/http/urls/#examples\" rel=\"nofollow\">the way Django does routing</a>. We definitely don't need to do things the way they did, but they can prove as a source of useful ideas if we get stuck.</p>", "id": 335946739, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/1065"}