{"original_position": 100, "diff_hunk": "@@ -0,0 +1,117 @@\n+import { message } from 'antd';\n+import autobind from 'autobind-decorator';\n+import { Map } from 'immutable';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+import { Link, push as pushAction } from 'redux-little-router';\n+\n+import { SimpleLoadingOverlay } from 'control_new/components/common/LoadingOverlay';\n+import RecipeForm from 'control_new/components/recipes/RecipeForm';\n+import QueryRecipe from 'control_new/components/data/QueryRecipe';\n+\n+import { createRecipe as createAction } from 'control_new/state/recipes/actions';\n+import { getRecipeFromURL } from 'control_new/state/recipes/selectors';\n+\n+@connect(\n+  state => {\n+    const {\n+      isLatestRevision,\n+      recipe,\n+      recipeId,\n+      revisionId,\n+    } = getRecipeFromURL(state);\n+\n+    return {\n+      isLatestRevision,\n+      recipe,\n+      recipeId,\n+      revisionId,\n+    };\n+  },\n+  {\n+    push: pushAction,\n+    createRecipe: createAction,\n+  },\n+)\n+@autobind\n+export default class CloneRecipePage extends React.Component {\n+  static propTypes = {\n+    createRecipe: PropTypes.func.isRequired,\n+    isLatestRevision: PropTypes.bool,\n+    recipeId: PropTypes.number.isRequired,\n+    recipe: PropTypes.instanceOf(Map),\n+    revisionId: PropTypes.string.isRequired,\n+  };\n+\n+  static defaultProps = {\n+    recipe: null,\n+    isLatestRevision: false,\n+  };\n+\n+  state = {\n+    formErrors: undefined,\n+  };\n+\n+  /**\n+   * Update the existing recipe and display a message.\n+   */\n+  async handleSubmit(values) {\n+    const { push } = this.props;\n+\n+    try {\n+      const newId = await this.props.createRecipe(values);\n+\n+      message.success('Recipe saved');\n+      this.setState({\n+        formErrors: undefined,\n+      });\n+\n+      push(`/recipe/${newId}`);\n+    } catch (error) {\n+      message.error(\n+        'Recipe cannot be saved. Please correct any errors listed in the form below.',\n+      );\n+\n+      this.setState({\n+        formErrors: error.data || error,\n+      });\n+    }\n+  }\n+\n+  render() {\n+    const { recipe, recipeId, isLatestRevision, revisionId } = this.props;\n+    const recipeName = recipe.get('name');\n+\n+    // Remove the 'name' field value.\n+    const displayedRecipe = recipe.set('name');\n+\n+    // URL and text for the \"Cloning this from [a recipe]\" link\n+    const originalRecipeURL = `/recipe/${recipeId}${isLatestRevision ? '' : `/rev/${revisionId}`}`;\n+\n+    // Only display revision hash if we're _not_ on the latest version.\n+    const revisionAddendum = isLatestRevision ? '' : `(revision ${revisionId.slice(0, 7)}...)`;\n+    const originalRecipeText = `\"${recipeName}\" ${revisionAddendum}`;\n+\n+    return (\n+      <div className=\"clone-page\">\n+        <QueryRecipe pk={recipeId} />\n+        <SimpleLoadingOverlay isVisible={!recipeName}>\n+          <h2>New Recipe</h2>", "body_text": "I think it's better to signify that it's a new recipe versus a cloned recipe. 'Cloning' here is essentially using the values from one recipe to autofill the New Recipe form. Users can then mess with the values, the original history is not brought over, etc. There's no connection to the original recipe and the new recipe beyond any values that were left untouched.\nTo the end user, the only difference between hitting new recipe and clone is that on the clone page it has Cloning from \"some recipe\" and the fields are pre-populated. At the end of the day, you're still just creating a new recipe.", "in_reply_to_id": 128394952, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/898", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128402138", "created_at": "2017-07-20T00:40:31Z", "author_association": "CONTRIBUTOR", "body": "I think it's better to signify that it's a `new` recipe versus a `cloned` recipe. 'Cloning' here is essentially using the values from one recipe to autofill the New Recipe form. Users can then mess with the values, the original history is not brought over, etc. There's no connection to the original recipe and the new recipe beyond any values that were left untouched.\r\n\r\nTo the end user, the only difference between hitting `new recipe` and `clone` is that on the clone page it has `Cloning from \"some recipe\"` and the fields are pre-populated. At the end of the day, you're still just creating a new recipe.", "updated_at": "2017-07-20T19:52:57Z", "html_url": "https://github.com/mozilla/normandy/pull/898#discussion_r128402138", "pull_request_review_id": 51078121, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128402138"}, "html": {"href": "https://github.com/mozilla/normandy/pull/898#discussion_r128402138"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/898"}}, "commit_id": "e353a5b68bea895c6b7fefafd872c538fce14c85", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control_new/components/recipes/CloneRecipePage.js", "body_html": "<p>I think it's better to signify that it's a <code>new</code> recipe versus a <code>cloned</code> recipe. 'Cloning' here is essentially using the values from one recipe to autofill the New Recipe form. Users can then mess with the values, the original history is not brought over, etc. There's no connection to the original recipe and the new recipe beyond any values that were left untouched.</p>\n<p>To the end user, the only difference between hitting <code>new recipe</code> and <code>clone</code> is that on the clone page it has <code>Cloning from \"some recipe\"</code> and the fields are pre-populated. At the end of the day, you're still just creating a new recipe.</p>", "original_commit_id": "9131531ad889ceb945acd1fb7a61d7fd57fcb309", "id": 128402138}