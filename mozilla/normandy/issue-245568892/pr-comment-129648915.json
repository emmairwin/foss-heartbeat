{"original_position": 18, "diff_hunk": "@@ -182,11 +182,11 @@ this.NormandyDriver = function(sandboxManager) {\n \n     // Study storage API\n     studies: {\n-      create: sandboxManager.wrapAsync(StudyStorage.create, {cloneArguments: true}),\n-      update: sandboxManager.wrapAsync(StudyStorage.update, {cloneArguments: true}),\n-      get: sandboxManager.wrapAsync(StudyStorage.get, {cloneInto: true}),\n-      getAll: sandboxManager.wrapAsync(StudyStorage.getAll, {cloneInto: true}),\n-      has: sandboxManager.wrapAsync(StudyStorage.has),\n+      start: sandboxManager.wrapAsync(AddonStudies.start, {cloneArguments: true, cloneInto: true}),", "body_text": "Ability to install add-ons was one of the things we brought up in the original security review of the sandbox, but it wasn't implemented or concrete at the time, so it may not have gotten enough scrutiny. I'll double-check.\nAlthough, if the answer is no, we have a larger problem, as the entire point of opt-out studies is to install these add-ons. What would be the alternative, shipping the sandbox-level code in the add-on itself and just downloading the argument payload from Shield? Wouldn't that be susceptible to the same issues? Although there's a case to be made that logic errors in the sandbox code are more likely than errors in a static payload.", "in_reply_to_id": 129596756, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/919", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/129648915", "created_at": "2017-07-26T17:56:44Z", "author_association": "MEMBER", "body": "Ability to install add-ons was one of the things we brought up in the original security review of the sandbox, but it wasn't implemented or concrete at the time, so it may not have gotten enough scrutiny. I'll double-check.\r\n\r\nAlthough, if the answer is no, we have a larger problem, as the entire point of opt-out studies is to install these add-ons. What would be the alternative, shipping the sandbox-level code in the add-on itself and just downloading the argument payload from Shield? Wouldn't that be susceptible to the same issues? Although there's a case to be made that logic errors in the sandbox code are more likely than errors in a static payload.", "updated_at": "2017-07-29T08:05:04Z", "html_url": "https://github.com/mozilla/normandy/pull/919#discussion_r129648915", "pull_request_review_id": 52445296, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/129648915"}, "html": {"href": "https://github.com/mozilla/normandy/pull/919#discussion_r129648915"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/919"}}, "commit_id": "7351b095c1164513f096650ebc41a4298af9fc2c", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 18, "path": "recipe-client-addon/lib/NormandyDriver.jsm", "body_html": "<p>Ability to install add-ons was one of the things we brought up in the original security review of the sandbox, but it wasn't implemented or concrete at the time, so it may not have gotten enough scrutiny. I'll double-check.</p>\n<p>Although, if the answer is no, we have a larger problem, as the entire point of opt-out studies is to install these add-ons. What would be the alternative, shipping the sandbox-level code in the add-on itself and just downloading the argument payload from Shield? Wouldn't that be susceptible to the same issues? Although there's a case to be made that logic errors in the sandbox code are more likely than errors in a static payload.</p>", "original_commit_id": "2bf859d0e75d413a3bf070eecc920d3418f1004c", "id": 129648915}