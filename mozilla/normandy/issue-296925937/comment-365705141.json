{"body": "One thing I forgot to mention: one of the types of filter objects that I had imagined as an escape hatch is a raw JEXL expression:\r\n\r\n```json\r\n[\r\n  {\"type\": \"jexl\", \"comment\": \"check something complicated\", \"expression\": \"...\"},\r\n]\r\n```\r\n\r\nThis allows us to maintain the level of power we have, by pushing the complexity on to users i.e. telling them to \"use jexl\". This has a couple advantages over continuing to expose `extra_filter_expressions` in the UI:\r\n\r\n* We can eventually deprecate the `extra_filter_expression` field, which simplifies things in the UI\r\n* Metadata about JEXL expressions, like the `comment` field above, can be made mandatory\r\n* They can be composed. One filter object can contain multiple items of type `jexl`, which can help us \"pave cowpaths\" in the future.", "body_text": "One thing I forgot to mention: one of the types of filter objects that I had imagined as an escape hatch is a raw JEXL expression:\n[\n  {\"type\": \"jexl\", \"comment\": \"check something complicated\", \"expression\": \"...\"},\n]\nThis allows us to maintain the level of power we have, by pushing the complexity on to users i.e. telling them to \"use jexl\". This has a couple advantages over continuing to expose extra_filter_expressions in the UI:\n\nWe can eventually deprecate the extra_filter_expression field, which simplifies things in the UI\nMetadata about JEXL expressions, like the comment field above, can be made mandatory\nThey can be composed. One filter object can contain multiple items of type jexl, which can help us \"pave cowpaths\" in the future.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/365705141", "created_at": "2018-02-14T18:44:54Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/1184#issuecomment-365705141", "updated_at": "2018-02-14T18:44:54Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<p>One thing I forgot to mention: one of the types of filter objects that I had imagined as an escape hatch is a raw JEXL expression:</p>\n<div class=\"highlight highlight-source-json\"><pre>[\n  {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>type<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jexl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>comment<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>check something complicated<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>expression<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>...<span class=\"pl-pds\">\"</span></span>},\n]</pre></div>\n<p>This allows us to maintain the level of power we have, by pushing the complexity on to users i.e. telling them to \"use jexl\". This has a couple advantages over continuing to expose <code>extra_filter_expressions</code> in the UI:</p>\n<ul>\n<li>We can eventually deprecate the <code>extra_filter_expression</code> field, which simplifies things in the UI</li>\n<li>Metadata about JEXL expressions, like the <code>comment</code> field above, can be made mandatory</li>\n<li>They can be composed. One filter object can contain multiple items of type <code>jexl</code>, which can help us \"pave cowpaths\" in the future.</li>\n</ul>", "id": 365705141, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/1184"}