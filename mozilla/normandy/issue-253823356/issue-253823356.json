{"body_text": "In our infrastructure, HTTP -> HTTPS redirects are generally a bug, because the app servers should not be accessible over HTTP. This can cause strange bugs like self-imploding 301 caching. To help track this down, we should add logging any time we would redirect to HTTPS.\nThere are two ways to do this:\n\nModify the Django middleware that is doing this redirect.\nInstall a separate middleware that logs all HTTP requests that would be redirected, independent of the middleware doing the actual redirecting. This should exclude URLs in settings.SECURE_REDIRECT_EXEMPT, which we use to filter out endpoints that are hit directly via HTTP by automation.\n\nReaching into Django internals is usually a bad idea, so I suggest we go with option 2.\n@relud Can you specify what kind of logging you'd like to get out of this?", "labels": [], "number": 1013, "assignee": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-09-05T19:22:05Z", "body_html": "<p>In our infrastructure, HTTP -&gt; HTTPS redirects are generally a bug, because the app servers should not be accessible over HTTP. This can cause strange bugs like self-imploding 301 caching. To help track this down, we should add logging any time we would redirect to HTTPS.</p>\n<p>There are two ways to do this:</p>\n<ol>\n<li>Modify the Django middleware that is doing this redirect.</li>\n<li>Install a separate middleware that logs all HTTP requests that would be redirected, independent of the middleware doing the actual redirecting. This should exclude URLs in <code>settings.SECURE_REDIRECT_EXEMPT</code>, which we use to filter out endpoints that are hit directly via HTTP by automation.</li>\n</ol>\n<p>Reaching into Django internals is usually a bad idea, so I suggest we go with option 2.</p>\n<p><a class=\"user-mention\" href=\"https://github.com/relud\">@relud</a> Can you specify what kind of logging you'd like to get out of this?</p>", "id": 253823356, "title": "Log HTTP -> HTTPS redirects", "comments": 1, "state": "closed", "body": "In our infrastructure, HTTP -> HTTPS redirects are generally a bug, because the app servers should not be accessible over HTTP. This can cause strange bugs like self-imploding 301 caching. To help track this down, we should add logging any time we would redirect to HTTPS.\r\n\r\nThere are two ways to do this:\r\n\r\n1. Modify the Django middleware that is doing this redirect.\r\n2. Install a separate middleware that logs all HTTP requests that would be redirected, independent of the middleware doing the actual redirecting. This should exclude URLs in `settings.SECURE_REDIRECT_EXEMPT`, which we use to filter out endpoints that are hit directly via HTTP by automation.\r\n\r\nReaching into Django internals is usually a bad idea, so I suggest we go with option 2.\r\n\r\n@relud Can you specify what kind of logging you'd like to get out of this?", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/1013/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/1013/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/1013/comments", "html_url": "https://github.com/mozilla/normandy/issues/1013", "updated_at": "2017-09-05T19:22:05Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/1013", "created_at": "2017-08-29T22:23:38Z", "assignees": [{"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}]}