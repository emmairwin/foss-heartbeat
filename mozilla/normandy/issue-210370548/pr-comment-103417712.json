{"original_position": 21, "diff_hunk": "@@ -27,4 +27,48 @@ this.Utils = {\n       yield testGenerator(driver);\n     });\n   },\n+\n+  /**\n+   * Test wrapper that replaces a property on an object with another value for\n+   * the duration of the test. The test generator is passed the replaced value.\n+   */\n+  withPatch(object, propertyName, patchValue, testGenerator) {\n+    return function* inner() {\n+      const original = object[propertyName];\n+      object[propertyName] = patchValue;\n+      yield testGenerator(patchValue);\n+      object[propertyName] = original;\n+    };\n+  },\n+\n+  /**\n+   * Creates a wrapper function that tracks whether it has been called.\n+   */\n+  createMock(wrapped) {", "body_text": "I think other people have used sinon for this and similar tasks. I'm not super familiar with it, but at least for this particular util I believe sinon.spy() does what you want. See https://dxr.mozilla.org/mozilla-central/source/browser/components/preferences/in-content/tests/browser_advanced_siteData.js#9-10 (and further down) for an example.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/557", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/103417712", "created_at": "2017-02-28T10:06:56Z", "author_association": "CONTRIBUTOR", "body": "I think other people have used `sinon` for this and similar tasks. I'm not super familiar with it, but at least for this particular util I believe `sinon.spy()` does what you want. See https://dxr.mozilla.org/mozilla-central/source/browser/components/preferences/in-content/tests/browser_advanced_siteData.js#9-10 (and further down) for an example.", "updated_at": "2017-03-01T04:22:15Z", "html_url": "https://github.com/mozilla/normandy/pull/557#discussion_r103417712", "pull_request_review_id": 24201325, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/103417712"}, "html": {"href": "https://github.com/mozilla/normandy/pull/557#discussion_r103417712"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/557"}}, "commit_id": "24ca379ceb8b510786c0d6ffaa3af4e707f5d2a0", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/browser/Utils.jsm", "body_html": "<p>I think other people have used <code>sinon</code> for this and similar tasks. I'm not super familiar with it, but at least for this particular util I believe <code>sinon.spy()</code> does what you want. See <a href=\"https://dxr.mozilla.org/mozilla-central/source/browser/components/preferences/in-content/tests/browser_advanced_siteData.js#9-10\" rel=\"nofollow\">https://dxr.mozilla.org/mozilla-central/source/browser/components/preferences/in-content/tests/browser_advanced_siteData.js#9-10</a> (and further down) for an example.</p>", "original_commit_id": "a245a318538ebe732fe4d8a1facd7ac6d307c9c0", "id": 103417712}