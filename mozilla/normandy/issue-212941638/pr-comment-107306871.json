{"original_position": 19, "diff_hunk": "@@ -33,12 +33,14 @@ describe('<RecipeForm>', () => {\n       expect(wrapper.find(ConsoleLogFields).length).toBe(1);\n     });\n \n-    it('should render the fields for the show-heartbeat action', () => {\n-      const wrapper = shallow(\n-        <RecipeForm selectedAction=\"show-heartbeat\" {...propFactory()} />\n-      );\n-      expect(wrapper.find(HeartbeatFields).length).toBe(1);\n-    });\n+    // TODO(osmose): Figure out how to shallow-render and test connected components", "body_text": "If I use mount, I get an error:\nError: Field must be inside a component decorated with reduxForm() in client/control/tests/index.js line 140 > eval (line 59)\n\nThe shallow render of RecipeForm elsewhere works because it's not a connected component (vs the default export, which I don't import during these tests), and the Field components never actually get rendered.\nI suspect the long-term solution is either use mount and get better at mocking the state tree so that we can fully render connected components during tests, or do some wrapper around the heartbeat fields with a classname we can hook into. The former is definitely the more desirable option, but also conflicts with the upcoming state tree changes.", "in_reply_to_id": 107286949, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/603", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107306871", "created_at": "2017-03-22T00:11:54Z", "author_association": "MEMBER", "body": "If I use mount, I get an error:\r\n\r\n```\r\nError: Field must be inside a component decorated with reduxForm() in client/control/tests/index.js line 140 > eval (line 59)\r\n```\r\n\r\nThe shallow render of `RecipeForm` elsewhere works because it's not a connected component (vs the default export, which I don't import during these tests), and the `Field` components never actually get rendered.\r\n\r\nI suspect the long-term solution is either use mount and get better at mocking the state tree so that we can fully render connected components during tests, or do some wrapper around the heartbeat fields with a classname we can hook into. The former is definitely the more desirable option, but also conflicts with the upcoming state tree changes.", "updated_at": "2017-03-22T00:19:23Z", "html_url": "https://github.com/mozilla/normandy/pull/603#discussion_r107306871", "pull_request_review_id": 28270678, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/107306871"}, "html": {"href": "https://github.com/mozilla/normandy/pull/603#discussion_r107306871"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/603"}}, "commit_id": "e41088823c8cb9671de9ae79f0eb7b41d1b5801f", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 19, "path": "recipe-server/client/control/tests/components/test_RecipeForm.js", "body_html": "<p>If I use mount, I get an error:</p>\n<pre><code>Error: Field must be inside a component decorated with reduxForm() in client/control/tests/index.js line 140 &gt; eval (line 59)\n</code></pre>\n<p>The shallow render of <code>RecipeForm</code> elsewhere works because it's not a connected component (vs the default export, which I don't import during these tests), and the <code>Field</code> components never actually get rendered.</p>\n<p>I suspect the long-term solution is either use mount and get better at mocking the state tree so that we can fully render connected components during tests, or do some wrapper around the heartbeat fields with a classname we can hook into. The former is definitely the more desirable option, but also conflicts with the upcoming state tree changes.</p>", "original_commit_id": "aad7fa9dbe90a2f86398f17dacd694afcdb670b7", "id": 107306871}