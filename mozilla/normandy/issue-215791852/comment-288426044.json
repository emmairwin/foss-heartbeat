{"body": "Interesting. \r\n\r\n@mythmon What user agent(s) are you getting that CSP report for? default-src 'self' and `localhost:8000` should be fine to swap. They're equivalent except for the protocol, but that should be enforced elsewhere with HSTS and HPKP headers. I'd add `frame-ancestors` `'none'` too if the page isn't framed anywhere.\r\n\r\nFor devtools when `'unsafe-inline'` isn't in `style-src`, I'd guess CSP blocks adding a style if it's implemented as inserting an inline style tag or adding a style html attribute to the element and doesn't block modifying an existing CSS rule for that element. I'd expect devtools to bypass CSP in this case, so you might check if that's intended behavior in #contentsecurity on IRC (I can do that too if you want since I'm curious).", "body_text": "Interesting.\n@mythmon What user agent(s) are you getting that CSP report for? default-src 'self' and localhost:8000 should be fine to swap. They're equivalent except for the protocol, but that should be enforced elsewhere with HSTS and HPKP headers. I'd add frame-ancestors 'none' too if the page isn't framed anywhere.\nFor devtools when 'unsafe-inline' isn't in style-src, I'd guess CSP blocks adding a style if it's implemented as inserting an inline style tag or adding a style html attribute to the element and doesn't block modifying an existing CSS rule for that element. I'd expect devtools to bypass CSP in this case, so you might check if that's intended behavior in #contentsecurity on IRC (I can do that too if you want since I'm curious).", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/288426044", "created_at": "2017-03-22T14:59:30Z", "author_association": "NONE", "html_url": "https://github.com/mozilla/normandy/issues/621#issuecomment-288426044", "updated_at": "2017-03-22T14:59:30Z", "user": {"following_url": "https://api.github.com/users/g-k/following{/other_user}", "events_url": "https://api.github.com/users/g-k/events{/privacy}", "organizations_url": "https://api.github.com/users/g-k/orgs", "url": "https://api.github.com/users/g-k", "gists_url": "https://api.github.com/users/g-k/gists{/gist_id}", "html_url": "https://github.com/g-k", "subscriptions_url": "https://api.github.com/users/g-k/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/226605?v=4", "repos_url": "https://api.github.com/users/g-k/repos", "received_events_url": "https://api.github.com/users/g-k/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/g-k/starred{/owner}{/repo}", "site_admin": false, "login": "g-k", "type": "User", "id": 226605, "followers_url": "https://api.github.com/users/g-k/followers"}, "body_html": "<p>Interesting.</p>\n<p><a class=\"user-mention\" href=\"https://github.com/mythmon\">@mythmon</a> What user agent(s) are you getting that CSP report for? default-src 'self' and <code>localhost:8000</code> should be fine to swap. They're equivalent except for the protocol, but that should be enforced elsewhere with HSTS and HPKP headers. I'd add <code>frame-ancestors</code> <code>'none'</code> too if the page isn't framed anywhere.</p>\n<p>For devtools when <code>'unsafe-inline'</code> isn't in <code>style-src</code>, I'd guess CSP blocks adding a style if it's implemented as inserting an inline style tag or adding a style html attribute to the element and doesn't block modifying an existing CSS rule for that element. I'd expect devtools to bypass CSP in this case, so you might check if that's intended behavior in #contentsecurity on IRC (I can do that too if you want since I'm curious).</p>", "id": 288426044, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/621"}