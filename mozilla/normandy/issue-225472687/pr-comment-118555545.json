{"original_position": 48, "diff_hunk": "@@ -0,0 +1,395 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\n+/**\n+ * PreferenceManagement exposes an API for recipes such as Preference Experiments\n+ * to handle manipulating default/user branch preferences. Recipes should extend\n+ * this module.\n+ *\n+ * Info on active and past recipes is stored in a JSON file in the profile\n+ * folder. Preference observers can also be tracked/instantiated/etc.\n+ */\n+\"use strict\";\n+\n+const {utils: Cu} = Components;\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+\n+XPCOMUtils.defineLazyModuleGetter(this, \"Services\", \"resource://gre/modules/Services.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"CleanupManager\", \"resource://shield-recipe-client/lib/CleanupManager.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"JSONFile\", \"resource://gre/modules/JSONFile.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"OS\", \"resource://gre/modules/osfile.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"LogManager\", \"resource://shield-recipe-client/lib/LogManager.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"Preferences\", \"resource://gre/modules/Preferences.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"TelemetryEnvironment\", \"resource://gre/modules/TelemetryEnvironment.jsm\");\n+\n+this.EXPORTED_SYMBOLS = [\"PreferenceManagement\"];\n+\n+const STORE_FILE = \"shield-preference-recipes.json\";\n+\n+const PREFERENCE_TYPE_MAP = {\n+  boolean: Services.prefs.PREF_BOOL,\n+  string: Services.prefs.PREF_STRING,\n+  integer: Services.prefs.PREF_INT,\n+};\n+\n+const DefaultPreferences = new Preferences({defaultBranch: true});\n+/**\n+ * Enum storing Preference modules for each type of preference branch.\n+ * @enum {Object}\n+ */\n+const PreferenceBranchType = {\n+  user: Preferences,\n+  default: DefaultPreferences,\n+};\n+\n+const log = LogManager.getLogger(\"preference-management\");\n+\n+this.PreferenceManagement = (namespace) => ({", "body_text": "I landed on this approach of creating an object for recipes to extend since Experiments/Rollouts are both singletons as it is, and Rollouts require access to some of the internals of the PrefMan business. I also based most of the work off PrefExperiments, which doesn't use a class or  prototype, so I assumed a POJO would be alright. If it makes more sense, I can switch to using ES6 classes here and in Rollouts/Experiments!", "in_reply_to_id": 118448945, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/724", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/118555545", "created_at": "2017-05-25T18:42:37Z", "author_association": "CONTRIBUTOR", "body": "I landed on this approach of creating an object for recipes to extend since Experiments/Rollouts are both singletons as it is, and Rollouts require access to some of the internals of the PrefMan business. I also based most of the work off `PrefExperiments`, which doesn't use a class or  prototype, so I assumed a POJO would be alright. If it makes more sense, I can switch to using ES6 classes here and in Rollouts/Experiments!", "updated_at": "2017-06-12T21:44:43Z", "html_url": "https://github.com/mozilla/normandy/pull/724#discussion_r118555545", "pull_request_review_id": 40359421, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/118555545"}, "html": {"href": "https://github.com/mozilla/normandy/pull/724#discussion_r118555545"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/724"}}, "commit_id": "46651e36e3771d2c4d90f6529a28ef814e4d9e4b", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-client-addon/lib/PreferenceManagement.jsm", "body_html": "<p>I landed on this approach of creating an object for recipes to extend since Experiments/Rollouts are both singletons as it is, and Rollouts require access to some of the internals of the PrefMan business. I also based most of the work off <code>PrefExperiments</code>, which doesn't use a class or  prototype, so I assumed a POJO would be alright. If it makes more sense, I can switch to using ES6 classes here and in Rollouts/Experiments!</p>", "original_commit_id": "56b772323bbfb68cf5f7771579c1c1d213fe33f0", "id": 118555545}