{"original_position": 114, "diff_hunk": "@@ -110,6 +165,25 @@ add_task(withMockPreferences(function* (mockPreferences) {\n   stop.restore();\n }));\n \n+// startObserver should observe changes to the default preference value.\n+add_task(withMockPreferences(function* (mockPreferences) {\n+  const stop = sinon.stub(PreferenceExperiments, \"stop\");\n+  mockPreferences.set(\"fake.preference\", \"startvalue\", \"default\");\n+\n+  PreferenceExperiments.startObserver(\"test\", \"fake.preference\", \"experimentvalue\");\n+\n+  // Setting it to the experimental value should not trigger the call.\n+  DefaultPreferences.set(\"fake.preference\", \"experimentvalue\");\n+  ok(!stop.called, \"Changing to the experimental pref value did not trigger the observer\");\n+\n+  // Setting it to something different should trigger the call.", "body_text": "Testing after setting it back doesn't really matter, because by that point stop has already been called, which (when not mocked, like in this test) would remove the observer.\nstartObserver doesn't actually modify the preference, it only sets up the preference watcher, so the preference isn't set to the experimental value until the first DefaultPreferences.set call. #645 isn't finished yet, but it will need to call this function on startup for the active experiments, and I figured it'd be easier to reason about how this behaves without setting the preference than it was to figure out if setting the experiment preferences on startup was an issue.\nI'll add a comment clarifying that startObserver does not modify the preference to these tests.", "in_reply_to_id": 110403952, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/670", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/110488905", "created_at": "2017-04-07T21:43:23Z", "author_association": "MEMBER", "body": "Testing after setting it back doesn't really matter, because by that point `stop` has already been called, which (when not mocked, like in this test) would remove the observer.\r\n\r\n`startObserver` doesn't actually modify the preference, it only sets up the preference watcher, so the preference isn't set to the experimental value until the first `DefaultPreferences.set` call. #645 isn't finished yet, but it will need to call this function on startup for the active experiments, and I figured it'd be easier to reason about how this behaves without setting the preference than it was to figure out if setting the experiment preferences on startup was an issue.\r\n\r\nI'll add a comment clarifying that `startObserver` does not modify the preference to these tests.", "updated_at": "2017-04-12T17:17:01Z", "html_url": "https://github.com/mozilla/normandy/pull/670#discussion_r110488905", "pull_request_review_id": 31671011, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/110488905"}, "html": {"href": "https://github.com/mozilla/normandy/pull/670#discussion_r110488905"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/670"}}, "commit_id": "05a53dac8b1bbcf2a57c097190c1c7e5644f5f28", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 167, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<p>Testing after setting it back doesn't really matter, because by that point <code>stop</code> has already been called, which (when not mocked, like in this test) would remove the observer.</p>\n<p><code>startObserver</code> doesn't actually modify the preference, it only sets up the preference watcher, so the preference isn't set to the experimental value until the first <code>DefaultPreferences.set</code> call. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"217709468\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/mozilla/normandy/issues/645\" href=\"https://github.com/mozilla/normandy/issues/645\">#645</a> isn't finished yet, but it will need to call this function on startup for the active experiments, and I figured it'd be easier to reason about how this behaves without setting the preference than it was to figure out if setting the experiment preferences on startup was an issue.</p>\n<p>I'll add a comment clarifying that <code>startObserver</code> does not modify the preference to these tests.</p>", "original_commit_id": "98de402df6a46aef592a090407dae2cf4c6afe78", "id": 110488905}