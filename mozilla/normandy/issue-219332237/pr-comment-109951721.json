{"original_position": 71, "diff_hunk": "@@ -47,8 +61,32 @@ add_task(async function() {\n   is(val, true, \"Bucket sample returns true for a known sample\");\n   val = await FilterExpressions.eval('[\"test-4\"]|bucketSample(0, 5, 10)');\n   is(val, false, \"Bucket sample returns false for a known sample\");\n+});\n \n-  // Test that it reads from the context correctly.\n-  val = await FilterExpressions.eval(\"first + second + 3\", {first: 1, second: 2});\n-  is(val, 6, \"context is available to filter expressions\");\n+// Preference tests\n+add_task(async function() {\n+  let val;\n+  // Compare the value of the preference\n+  await SpecialPowers.pushPrefEnv({set: [[\"normandy.test.value\", 3]]});\n+  val = await FilterExpressions.eval('\"normandy.test.value\"|preferenceValue == 3');\n+  is(val, true, \"preferenceValue expression compares against preference values\");\n+\n+  // preferenceValue can take a default value as an optional argument, which\n+  // defaults to `undefined`.\n+  val = await FilterExpressions.eval('\"normandy.test.default\"|preferenceValue(false) == false');\n+  is(val, true, `preferenceValue takes optional 'default value' param for prefs without set values`);\n+\n+  val = await FilterExpressions.eval('\"normandy.test.value\"|preferenceValue(5) == 3');\n+  is(val, true, `preferenceValue default param is not returned for prefs with set values`);\n+\n+  // Compare if the preference is user set\n+  val = await FilterExpressions.eval('\"normandy.test.isSet\"|preferenceIsUserSet != true');\n+  is(val, true, \"preferenceIsUserSet expression determines if preference is even set\");\n+\n+  val = await FilterExpressions.eval('\"normandy.test.value\"|preferenceIsUserSet == true');\n+  is(val, true, \"preferenceIsUserSet expression determines if user set preference themselves\");\n+\n+  // Compare if the preference has _any_ value, whether it's user-set or default,\n+  val = await FilterExpressions.eval('\"normandy.test.nonexistant\"|preferenceExists == false');\n+  is(val, true, \"preferenceExists expression determines if preference exists at all\");", "body_text": "I've added some 'negative' tests for when return values would be false. Let me know if you think theses tests suffice, or if there's a particular case I'm missing!", "in_reply_to_id": 109777503, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/661", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109951721", "created_at": "2017-04-05T15:41:49Z", "author_association": "CONTRIBUTOR", "body": "I've added some 'negative' tests for when return values would be false. Let me know if you think theses tests suffice, or if there's a particular case I'm missing!", "updated_at": "2017-04-05T17:48:52Z", "html_url": "https://github.com/mozilla/normandy/pull/661#discussion_r109951721", "pull_request_review_id": 31088101, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109951721"}, "html": {"href": "https://github.com/mozilla/normandy/pull/661#discussion_r109951721"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/661"}}, "commit_id": "b07cf3e891f9fe3be7a9bcbf38779f532b42173b", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-client-addon/test/browser/browser_FilterExpressions.js", "body_html": "<p>I've added some 'negative' tests for when return values would be false. Let me know if you think theses tests suffice, or if there's a particular case I'm missing!</p>", "original_commit_id": "3ba7d069e46aad965359d593877c9c5a6166e7a8", "id": 109951721}