{"body_text": "This is specs for @marcrowo's benefit.\n/api/v2/recipe/ should have a new field, identicon_seed. It should validate that the seed is of the format generation:seed, like v1:asdfasdf, where the first part is always v1 (for now), and the second part is any string. If no generation is supplied in the  API, it may add a v1: prefix.\nThere should be a new API, /api/v2/identicon/${generation}:${seed}.svg that returns a SVG shield identicon using stable-random generation techniques, like in #983. This should always return the exact same output for the same input, and there should be a test for this.", "labels": [], "number": 988, "assignee": {"following_url": "https://api.github.com/users/marcrowo/following{/other_user}", "events_url": "https://api.github.com/users/marcrowo/events{/privacy}", "organizations_url": "https://api.github.com/users/marcrowo/orgs", "url": "https://api.github.com/users/marcrowo", "gists_url": "https://api.github.com/users/marcrowo/gists{/gist_id}", "html_url": "https://github.com/marcrowo", "subscriptions_url": "https://api.github.com/users/marcrowo/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/1198628?v=4", "repos_url": "https://api.github.com/users/marcrowo/repos", "received_events_url": "https://api.github.com/users/marcrowo/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/marcrowo/starred{/owner}{/repo}", "site_admin": false, "login": "marcrowo", "type": "User", "id": 1198628, "followers_url": "https://api.github.com/users/marcrowo/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-09-06T20:51:39Z", "body_html": "<p>This is specs for <a class=\"user-mention\" href=\"https://github.com/marcrowo\">@marcrowo</a>'s benefit.</p>\n<p><code>/api/v2/recipe/</code> should have a new field, <code>identicon_seed</code>. It should validate that the seed is of the format <code>generation:seed</code>, like <code>v1:asdfasdf</code>, where the first part is always <code>v1</code> (for now), and the second part is any string. If no generation is supplied in the  API, it may add a <code>v1:</code> prefix.</p>\n<p>There should be a new API, <code>/api/v2/identicon/${generation}:${seed}.svg</code> that returns a SVG shield identicon using stable-random generation techniques, like in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"250134245\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/mozilla/normandy/issues/983\" href=\"https://github.com/mozilla/normandy/pull/983\">#983</a>. This should always return the exact same output for the same input, and there should be a test for this.</p>", "id": 250791736, "title": "Add server side shield identicons", "comments": 4, "state": "closed", "body": "This is specs for @marcrowo's benefit.\r\n\r\n`/api/v2/recipe/` should have a new field, `identicon_seed`. It should validate that the seed is of the format `generation:seed`, like `v1:asdfasdf`, where the first part is always `v1` (for now), and the second part is any string. If no generation is supplied in the  API, it may add a `v1:` prefix.\r\n\r\nThere should be a new API, `/api/v2/identicon/${generation}:${seed}.svg` that returns a SVG shield identicon using stable-random generation techniques, like in #983. This should always return the exact same output for the same input, and there should be a test for this.", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/988/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/988/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/988/comments", "html_url": "https://github.com/mozilla/normandy/issues/988", "updated_at": "2017-09-06T20:51:39Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/988", "created_at": "2017-08-16T23:46:53Z", "assignees": [{"following_url": "https://api.github.com/users/marcrowo/following{/other_user}", "events_url": "https://api.github.com/users/marcrowo/events{/privacy}", "organizations_url": "https://api.github.com/users/marcrowo/orgs", "url": "https://api.github.com/users/marcrowo", "gists_url": "https://api.github.com/users/marcrowo/gists{/gist_id}", "html_url": "https://github.com/marcrowo", "subscriptions_url": "https://api.github.com/users/marcrowo/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/1198628?v=4", "repos_url": "https://api.github.com/users/marcrowo/repos", "received_events_url": "https://api.github.com/users/marcrowo/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/marcrowo/starred{/owner}{/repo}", "site_admin": false, "login": "marcrowo", "type": "User", "id": 1198628, "followers_url": "https://api.github.com/users/marcrowo/followers"}]}