{"body_text": "Here's some livestream footage from while I was writing this patch:\n\nThere are a few known bugs with this patch:\n\nIf a branch in a preference experiment has a validation error, the message overflows because it's absolutely positioned and doesn't cause the container to expand. This is deep in Ant's HTML/CSS and I'm not entirely sure how we should solve this. Should we gather branch errors in one spot?\nSwitching between preference value types has interesting results. And if you just switch the type but don't update the values, I think the form still posts them as the old datatype.\n\nI don't think they're blockers, though. Here's other relevant notes:\n\n\nI ran into this before with the ant-redesign branch, and briefly talked to @rehandalal about it, but the v2 recipe API uses the action_id field for writing what action is being used, but recipe form doesn't know the IDs of actions; it'd have to fetch all of them and then do a name lookup if it wanted the right ID.\nI couldn't find anything in the new interface that was yet relying on nested actions being returned by the recipe API, so I refactored the API such that recipe.action is a string with the action's unique name. I imagine things like the recipe listing might have to do some extra work to fetch action data, so let me know if that's a problem.\n\n\nI left some comments explaining more, but Ant's form handling is not great at nesting more than one level down. The preference branches input deals with this by not using nested field names outside of displaying errors.\n\n\nI removed the lint rule that prefers functional components because Ant also had issues with them (it uses refs to track components wrapped by Form.Item). We've also had issues in the past testing functional components, so from now on I'm just going to default to class-based components where possible.", "labels": [], "number": 859, "assignee": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-07-11T17:18:39Z", "body_html": "<p>Here's some livestream footage from while I was writing this patch:</p>\n<p><a target=\"_blank\" href=\"https://camo.githubusercontent.com/e16c88f5910d5a84bd94595f2b411e98c57a3898/68747470733a2f2f692e726564642e69742f786c39373171636d726a377a2e676966\"><img src=\"https://camo.githubusercontent.com/e16c88f5910d5a84bd94595f2b411e98c57a3898/68747470733a2f2f692e726564642e69742f786c39373171636d726a377a2e676966\" alt=\"\" data-canonical-src=\"https://i.redd.it/xl971qcmrj7z.gif\" style=\"max-width:100%;\"></a></p>\n<p>There are a few known bugs with this patch:</p>\n<ul>\n<li>If a branch in a preference experiment has a validation error, the message overflows because it's absolutely positioned and doesn't cause the container to expand. This is deep in Ant's HTML/CSS and I'm not entirely sure how we should solve this. Should we gather branch errors in one spot?</li>\n<li>Switching between preference value types has interesting results. And if you just switch the type but don't update the values, I think the form still posts them as the old datatype.</li>\n</ul>\n<p>I don't think they're blockers, though. Here's other relevant notes:</p>\n<ul>\n<li>\n<p>I ran into this before with the <code>ant-redesign</code> branch, and briefly talked to <a class=\"user-mention\" href=\"https://github.com/rehandalal\">@rehandalal</a> about it, but the v2 recipe API uses the <code>action_id</code> field for writing what action is being used, but recipe form doesn't know the IDs of actions; it'd have to fetch all of them and then do a name lookup if it wanted the right ID.</p>\n<p>I couldn't find anything in the new interface that was yet relying on nested actions being returned by the recipe API, so I refactored the API such that <code>recipe.action</code> is a string with the action's unique name. I imagine things like the recipe listing might have to do some extra work to fetch action data, so let me know if that's a problem.</p>\n</li>\n<li>\n<p>I left some comments explaining more, but Ant's form handling is not great at nesting more than one level down. The preference branches input deals with this by not using nested field names outside of displaying errors.</p>\n</li>\n<li>\n<p>I removed the lint rule that prefers functional components because Ant also had issues with them (it uses refs to track components wrapped by Form.Item). We've also had issues in the past testing functional components, so from now on I'm just going to default to class-based components where possible.</p>\n</li>\n</ul>", "id": 240537972, "title": "New control interface: Editing recipes", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/859", "diff_url": "https://github.com/mozilla/normandy/pull/859.diff", "html_url": "https://github.com/mozilla/normandy/pull/859", "patch_url": "https://github.com/mozilla/normandy/pull/859.patch"}, "comments": 5, "state": "closed", "body": "Here's some livestream footage from while I was writing this patch:\r\n\r\n![](https://i.redd.it/xl971qcmrj7z.gif)\r\n\r\nThere are a few known bugs with this patch:\r\n\r\n- If a branch in a preference experiment has a validation error, the message overflows because it's absolutely positioned and doesn't cause the container to expand. This is deep in Ant's HTML/CSS and I'm not entirely sure how we should solve this. Should we gather branch errors in one spot?\r\n- Switching between preference value types has interesting results. And if you just switch the type but don't update the values, I think the form still posts them as the old datatype.\r\n\r\nI don't think they're blockers, though. Here's other relevant notes:\r\n\r\n- I ran into this before with the `ant-redesign` branch, and briefly talked to @rehandalal about it, but the v2 recipe API uses the `action_id` field for writing what action is being used, but recipe form doesn't know the IDs of actions; it'd have to fetch all of them and then do a name lookup if it wanted the right ID. \r\n\r\n  I couldn't find anything in the new interface that was yet relying on nested actions being returned by the recipe API, so I refactored the API such that `recipe.action` is a string with the action's unique name. I imagine things like the recipe listing might have to do some extra work to fetch action data, so let me know if that's a problem.\r\n- I left some comments explaining more, but Ant's form handling is not great at nesting more than one level down. The preference branches input deals with this by not using nested field names outside of displaying errors.\r\n- I removed the lint rule that prefers functional components because Ant also had issues with them (it uses refs to track components wrapped by Form.Item). We've also had issues in the past testing functional components, so from now on I'm just going to default to class-based components where possible.", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/859/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/859/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/859/comments", "html_url": "https://github.com/mozilla/normandy/pull/859", "updated_at": "2017-07-11T20:57:50Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/859", "created_at": "2017-07-05T04:58:31Z", "assignees": [{"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}]}