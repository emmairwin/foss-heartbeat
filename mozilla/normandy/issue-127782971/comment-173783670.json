{"body": "> I'm uncomfortable with needing to wipe out all the migrations on a matter of principle. It isn't really a problem at this point, but if we had a production DB this would be a big problem, since it seems to require trashing the database too. Or did I get that wrong?\n\nIt would be if we had a prod DB, the \"fine at this stage\" comment was specifically referring to the fact that it's fine since we don't have one.\n\nHowever, I've gone back and figure out the issue was converting what was a string field to an integer field in the database. My solution was to add two migrations; one to remove the existing locale field, and another to add the new ForeignKey one.\n\nUntil we squash the migrations we'll have to keep `LocaleField` around, which sucks.\n\n> I installed the new version of product_details, ran the migrations, and ran ./manage.py update_product_details. It ran without errors, but the recipes_locale table is empty. That seems wrong.\n\nMake sure you run it with `--force` in case you've already got up-to-date locale info; the storage classes don't get called unless there's new data.\n\n> Also, you should remove the PROD_DETAILS_STORAGE from the Test configuration.\n\nDone!\n", "body_text": "I'm uncomfortable with needing to wipe out all the migrations on a matter of principle. It isn't really a problem at this point, but if we had a production DB this would be a big problem, since it seems to require trashing the database too. Or did I get that wrong?\n\nIt would be if we had a prod DB, the \"fine at this stage\" comment was specifically referring to the fact that it's fine since we don't have one.\nHowever, I've gone back and figure out the issue was converting what was a string field to an integer field in the database. My solution was to add two migrations; one to remove the existing locale field, and another to add the new ForeignKey one.\nUntil we squash the migrations we'll have to keep LocaleField around, which sucks.\n\nI installed the new version of product_details, ran the migrations, and ran ./manage.py update_product_details. It ran without errors, but the recipes_locale table is empty. That seems wrong.\n\nMake sure you run it with --force in case you've already got up-to-date locale info; the storage classes don't get called unless there's new data.\n\nAlso, you should remove the PROD_DETAILS_STORAGE from the Test configuration.\n\nDone!", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/173783670", "created_at": "2016-01-22T02:36:43Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/9#issuecomment-173783670", "updated_at": "2016-01-22T02:36:43Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<blockquote>\n<p>I'm uncomfortable with needing to wipe out all the migrations on a matter of principle. It isn't really a problem at this point, but if we had a production DB this would be a big problem, since it seems to require trashing the database too. Or did I get that wrong?</p>\n</blockquote>\n<p>It would be if we had a prod DB, the \"fine at this stage\" comment was specifically referring to the fact that it's fine since we don't have one.</p>\n<p>However, I've gone back and figure out the issue was converting what was a string field to an integer field in the database. My solution was to add two migrations; one to remove the existing locale field, and another to add the new ForeignKey one.</p>\n<p>Until we squash the migrations we'll have to keep <code>LocaleField</code> around, which sucks.</p>\n<blockquote>\n<p>I installed the new version of product_details, ran the migrations, and ran ./manage.py update_product_details. It ran without errors, but the recipes_locale table is empty. That seems wrong.</p>\n</blockquote>\n<p>Make sure you run it with <code>--force</code> in case you've already got up-to-date locale info; the storage classes don't get called unless there's new data.</p>\n<blockquote>\n<p>Also, you should remove the PROD_DETAILS_STORAGE from the Test configuration.</p>\n</blockquote>\n<p>Done!</p>", "id": 173783670, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/9"}