{"body": "> Hm, I didn't realize that we were implementing the expiry system as part of a recipe. It seems like it would more properly live inside the add-on, as it's the client that should expire the recipe... is it too late to change this?\r\n\r\nIt's not too late, but I think it's better in the long run. The general rule I've been following is to prefer logic within the sandbox to logic outside of it, because we can ship updates and changes to it way faster than the system add-on, and the impact of breakage is reduced. I would've put _most_ of the preference experiment logic within the sandbox, but the need to persist event handlers past the lifetime of the recipe sandbox made that difficult.\r\n\r\nI also think that having the logic for when to start and when to stop experiments in the same place is a better design, although there are expiry cases where we can't really do that cleanly (e.g. when the user modifies the preference).\r\n\r\nDoes that sound reasonable?", "body_text": "Hm, I didn't realize that we were implementing the expiry system as part of a recipe. It seems like it would more properly live inside the add-on, as it's the client that should expire the recipe... is it too late to change this?\n\nIt's not too late, but I think it's better in the long run. The general rule I've been following is to prefer logic within the sandbox to logic outside of it, because we can ship updates and changes to it way faster than the system add-on, and the impact of breakage is reduced. I would've put most of the preference experiment logic within the sandbox, but the need to persist event handlers past the lifetime of the recipe sandbox made that difficult.\nI also think that having the logic for when to start and when to stop experiments in the same place is a better design, although there are expiry cases where we can't really do that cleanly (e.g. when the user modifies the preference).\nDoes that sound reasonable?", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/292027071", "created_at": "2017-04-05T23:34:09Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/659#issuecomment-292027071", "updated_at": "2017-04-05T23:34:09Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<blockquote>\n<p>Hm, I didn't realize that we were implementing the expiry system as part of a recipe. It seems like it would more properly live inside the add-on, as it's the client that should expire the recipe... is it too late to change this?</p>\n</blockquote>\n<p>It's not too late, but I think it's better in the long run. The general rule I've been following is to prefer logic within the sandbox to logic outside of it, because we can ship updates and changes to it way faster than the system add-on, and the impact of breakage is reduced. I would've put <em>most</em> of the preference experiment logic within the sandbox, but the need to persist event handlers past the lifetime of the recipe sandbox made that difficult.</p>\n<p>I also think that having the logic for when to start and when to stop experiments in the same place is a better design, although there are expiry cases where we can't really do that cleanly (e.g. when the user modifies the preference).</p>\n<p>Does that sound reasonable?</p>", "id": 292027071, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/659"}