{"original_position": 19, "diff_hunk": "@@ -1,8 +1,30 @@\n+const CC = Components.Constructor;\n+const BinaryInputStream = CC(\"@mozilla.org/binaryinputstream;1\", \"nsIBinaryInputStream\", \"setInputStream\");\n+\n+// Returns a JSON string containing the query string arguments and the\n+// request body parsed as JSON.\n function handleRequest(request, response) {\n   // Allow cross-origin, so you can XHR to it!\n   response.setHeader(\"Access-Control-Allow-Origin\", \"*\", false);\n   // Avoid confusing cache behaviors\n   response.setHeader(\"Cache-Control\", \"no-cache\", false);\n   response.setHeader(\"Content-Type\", \"application/json\", false);\n-  response.write(JSON.stringify({test: \"data\"}))\n+\n+  // Read request body\n+  const inputStream = new BinaryInputStream(request.bodyInputStream);\n+  const bytes = [];\n+  let available;\n+  while ((available = inputStream.available()) > 0) {\n+    Array.prototype.push.apply(bytes, inputStream.readByteArray(available));", "body_text": "I think you can just use:\nbytes = bytes.concat(inputStream.readByteArray(available));\nwhich is a little easier?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/555", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/103117671", "created_at": "2017-02-26T21:39:39Z", "author_association": "CONTRIBUTOR", "body": "I think you can just use:\r\n\r\n```js\r\nbytes = bytes.concat(inputStream.readByteArray(available));\r\n```\r\nwhich is a little easier?", "updated_at": "2017-02-27T21:20:56Z", "html_url": "https://github.com/mozilla/normandy/pull/555#discussion_r103117671", "pull_request_review_id": 23894281, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/103117671"}, "html": {"href": "https://github.com/mozilla/normandy/pull/555#discussion_r103117671"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/555"}}, "commit_id": "531628aad0265b5c9458a7862770a22cb1428ce5", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/browser/test_server.sjs", "body_html": "<p>I think you can just use:</p>\n<div class=\"highlight highlight-source-js\"><pre>bytes <span class=\"pl-k\">=</span> <span class=\"pl-smi\">bytes</span>.<span class=\"pl-c1\">concat</span>(<span class=\"pl-smi\">inputStream</span>.<span class=\"pl-en\">readByteArray</span>(available));</pre></div>\n<p>which is a little easier?</p>", "original_commit_id": "7c57fed8c06ab50e3516ff3911d90e36bfe32a0b", "id": 103117671}