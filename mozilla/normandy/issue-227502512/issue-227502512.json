{"body_text": "We want to be able to target recipes based on the add-ons that a user has installed. Telemetry may contain this information, but to make filers more readable, and to allow for future expansion, we want to add another API to query the AddonManager directly. Here's my strawman:\n// normandy.addons is a map; keys are add-on IDs, and the values are objects\nnormandy.addons['shield-recipe-client@mozilla.org'] // Truthyness means the add-on is installed\n\n// The value contains version information\nnormandy.addons['shield-recipe-client@mozilla.org'].version == '1.0.0'\nOne thing that is important to test here is if [] syntax for indexing into an object gracefully handles missing keys. I think JEXL actually throws if a key doesn't exist (whereas . syntax does not, it just returns undefined in all cases). It may be time for us to fork JEXL to change this behavior.\n@rayborn @gregglind @MattGrimes Thoughts on the syntax above?", "labels": [], "number": 743, "assignee": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-07-22T01:27:27Z", "body_html": "<p>We want to be able to target recipes based on the add-ons that a user has installed. Telemetry may contain this information, but to make filers more readable, and to allow for future expansion, we want to add another API to query the AddonManager directly. Here's my strawman:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> normandy.addons is a map; keys are add-on IDs, and the values are objects</span>\n<span class=\"pl-smi\">normandy</span>.<span class=\"pl-smi\">addons</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>shield-recipe-client@mozilla.org<span class=\"pl-pds\">'</span></span>] <span class=\"pl-c\"><span class=\"pl-c\">//</span> Truthyness means the add-on is installed</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> The value contains version information</span>\n<span class=\"pl-smi\">normandy</span>.<span class=\"pl-smi\">addons</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>shield-recipe-client@mozilla.org<span class=\"pl-pds\">'</span></span>].<span class=\"pl-c1\">version</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1.0.0<span class=\"pl-pds\">'</span></span></pre></div>\n<p>One thing that is important to test here is if <code>[]</code> syntax for indexing into an object gracefully handles missing keys. I <em>think</em> JEXL actually throws if a key doesn't exist (whereas <code>.</code> syntax does not, it just returns <code>undefined</code> in all cases). It may be time for us to fork JEXL to change this behavior.</p>\n<p><a class=\"user-mention\" href=\"https://github.com/rayborn\">@rayborn</a> <a class=\"user-mention\" href=\"https://github.com/gregglind\">@gregglind</a> <a class=\"user-mention\" href=\"https://github.com/mattgrimes\">@MattGrimes</a> Thoughts on the syntax above?</p>", "id": 227502512, "title": "Filtering by add-ons", "comments": 6, "state": "closed", "body": "We want to be able to target recipes based on the add-ons that a user has installed. Telemetry may contain this information, but to make filers more readable, and to allow for future expansion, we want to add another API to query the AddonManager directly. Here's my strawman:\r\n\r\n```js\r\n// normandy.addons is a map; keys are add-on IDs, and the values are objects\r\nnormandy.addons['shield-recipe-client@mozilla.org'] // Truthyness means the add-on is installed\r\n\r\n// The value contains version information\r\nnormandy.addons['shield-recipe-client@mozilla.org'].version == '1.0.0'\r\n```\r\n\r\nOne thing that is important to test here is if `[]` syntax for indexing into an object gracefully handles missing keys. I _think_ JEXL actually throws if a key doesn't exist (whereas `.` syntax does not, it just returns `undefined` in all cases). It may be time for us to fork JEXL to change this behavior.\r\n\r\n@rayborn @gregglind @MattGrimes Thoughts on the syntax above?", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/743/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/743/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/743/comments", "html_url": "https://github.com/mozilla/normandy/issues/743", "updated_at": "2018-01-30T17:39:18Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/743", "created_at": "2017-05-09T21:24:03Z", "assignees": [{"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}]}