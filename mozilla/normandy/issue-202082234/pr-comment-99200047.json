{"original_position": 74, "diff_hunk": "@@ -0,0 +1,375 @@\n+import json\n+import random\n+from urllib.parse import urlparse, urlunparse\n+\n+from normandy.base.utils import canonical_json_dumps\n+from normandy.recipes.api.serializers import ClientSerializer\n+from normandy.recipes.models import Action, Recipe\n+from normandy.recipes.tests import ClientFactory, RecipeFactory, SignatureFactory\n+\n+\n+def console_log(message, **kwargs):\n+    return RecipeFactory(\n+        action=Action.objects.get(name='console-log'),\n+        arguments={'message': message},\n+        **kwargs\n+    )\n+\n+\n+def show_heartbeat(**kwargs):\n+    return RecipeFactory(\n+        action=Action.objects.get(name='show-heartbeat'),\n+        **kwargs\n+    )\n+\n+\n+def generate_long_message():\n+    phrases = [\n+        'You all know the mission and what is at stake.',\n+        ('I have come to trust each of you with my life, but I have also heard murmurs of '\n+         'discontent.'),\n+        'I share your concerns.',\n+        'We are trained for espionage.',\n+        'We would be legends, but the records are sealed.',\n+        'Glory in battle is not our way.',\n+        'Think of our heroes: the Silent Step, who defeated a nation with a single shot.',\n+        'Or the Ever Alert, who kept armies at bay with hidden facts.',\n+        'These giants do not seem to give us solace here, but they are not all that we are.',\n+        'Before the network, there was the fleet.',\n+        'Before diplomacy, there were soldiers.',\n+        'Our influence stopped the rachni, but before that, we held the line.',\n+        'Our influence stopped the krogan, but before that, we held the line!',\n+        'Our influence will stop Saren! In the battle today, we will hold the line!',\n+    ]\n+    return ' '.join([random.choice(phrases) for _ in range(1000)])\n+\n+\n+def get_testcases():\n+    \"\"\"Return all defined testcases.\"\"\"\n+    return sorted(\n+        [TestCaseClass() for TestCaseClass in TestCase.__subclasses__()],\n+        key=lambda f: f.name\n+    )\n+\n+\n+class TestCase(object):\n+    \"\"\"\n+    Configuration for a specific manual test case. Subclasses can\n+    override methods on this class to customize the state of the server\n+    that will be serialized, or, if necessary, the serialization itself.\n+    \"\"\"\n+    @property\n+    def name(self):\n+        return self.__class__.__name__\n+\n+    @property\n+    def description(self):\n+        return '<p class=\"description\">{}</p>'.format(self.__doc__)\n+\n+    def load(self):\n+        \"\"\"\n+        Clear out all existing recipes and load this test's data in\n+        its place.\n+        \"\"\"\n+        Recipe.objects.all().delete()", "body_text": "It would be really cool if this was a context manager that used database transactions to automatically roll back the changes.\nAlternatively, do we need to delete Actions and other objects besides the Recipes?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/437", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99200047", "created_at": "2017-02-02T19:29:11Z", "author_association": "MEMBER", "body": "It would be really cool if this was a context manager that used database transactions to automatically roll back the changes.\r\n\r\nAlternatively, do we need to delete Actions and other objects besides the Recipes?", "updated_at": "2017-02-02T19:32:45Z", "html_url": "https://github.com/mozilla/normandy/pull/437#discussion_r99200047", "pull_request_review_id": 19865321, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99200047"}, "html": {"href": "https://github.com/mozilla/normandy/pull/437#discussion_r99200047"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/437"}}, "commit_id": "d00bbfd3fa37fe81049fbe331504ff8f3b07e1e6", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": 74, "path": "mock-recipe-server/testcases.py", "body_html": "<p>It would be really cool if this was a context manager that used database transactions to automatically roll back the changes.</p>\n<p>Alternatively, do we need to delete Actions and other objects besides the Recipes?</p>", "original_commit_id": "d00bbfd3fa37fe81049fbe331504ff8f3b07e1e6", "id": 99200047}