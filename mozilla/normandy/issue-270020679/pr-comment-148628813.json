{"original_position": 30, "diff_hunk": "@@ -0,0 +1,45 @@\n+import { message } from 'antd';\n+\n+import APIClient from 'control/utils/api';\n+\n+\n+export const ERR_MESSAGES = {\n+  FORM_VALIDATION: 'Please correct the form items highlighted below.',\n+  NO_INTERNET: 'Check your internet connection and try again.',\n+  SERVER_FAILED: 'The server failed to respond. Please try again.',\n+};\n+\n+// String to search for to determine if a fetch failed. Unlikely to change.\n+const fetchFailureMessage = 'Failed to fetch';\n+\n+const defaultMethods = {\n+  checkUserOnline: () => navigator.onLine,\n+  notifyUser: errMsg => message.error(errMsg),\n+};\n+\n+export default function handleError(context = 'Error!', error, methodOverrides = {}) {\n+  const methods = { ...defaultMethods, ...methodOverrides };\n+  let errMsg = '';\n+\n+  if (error) {\n+    if (!methods.checkUserOnline()) {\n+      errMsg = ERR_MESSAGES.NO_INTERNET;\n+    } else if (error.message.indexOf(fetchFailureMessage) > -1) {\n+      errMsg = ERR_MESSAGES.SERVER_FAILED;\n+    } else if (error instanceof APIClient.APIError && error.data) {\n+      errMsg = ERR_MESSAGES.FORM_VALIDATION;", "body_text": "The APIClient already handles determining the message to return with the server error, I assumed it was safe for handleError to inherit it from there:\n// control/utils/api.js\n...\nif (!response.ok) {\n  let message;\n  let data;\n  let err;\n\n  try {\n    data = await response.json();\n    message = data.detail || response.statusText;\n  } catch (error) {\n    message = error.message;\n    err = error;\n  }\n\n  throw new APIClient.APIError(message, data, err);\n}\n...\n\nI agree that checking against the data prop for the form validation errors is weak, I can find a way to strengthen that. I can work on api.js to inspect the status codes, as well.", "in_reply_to_id": 148116287, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1121", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/148628813", "created_at": "2017-11-02T18:54:24Z", "author_association": "CONTRIBUTOR", "body": "The `APIClient` already handles determining the `message` to return with the server error, I assumed it was safe for `handleError` to inherit it from there:\r\n```\r\n// control/utils/api.js\r\n...\r\nif (!response.ok) {\r\n  let message;\r\n  let data;\r\n  let err;\r\n\r\n  try {\r\n    data = await response.json();\r\n    message = data.detail || response.statusText;\r\n  } catch (error) {\r\n    message = error.message;\r\n    err = error;\r\n  }\r\n\r\n  throw new APIClient.APIError(message, data, err);\r\n}\r\n...\r\n```\r\n\r\nI agree that checking against the `data` prop for the form validation errors is weak, I can find a way to strengthen that. I can work on `api.js` to inspect the status codes, as well.", "updated_at": "2017-11-15T14:54:27Z", "html_url": "https://github.com/mozilla/normandy/pull/1121#discussion_r148628813", "pull_request_review_id": 73902867, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/148628813"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1121#discussion_r148628813"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1121"}}, "commit_id": "8609b4ed0cb5a04f83a1a220e61d83c26534ce79", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control/utils/handleError.js", "body_html": "<p>The <code>APIClient</code> already handles determining the <code>message</code> to return with the server error, I assumed it was safe for <code>handleError</code> to inherit it from there:</p>\n<pre><code>// control/utils/api.js\n...\nif (!response.ok) {\n  let message;\n  let data;\n  let err;\n\n  try {\n    data = await response.json();\n    message = data.detail || response.statusText;\n  } catch (error) {\n    message = error.message;\n    err = error;\n  }\n\n  throw new APIClient.APIError(message, data, err);\n}\n...\n</code></pre>\n<p>I agree that checking against the <code>data</code> prop for the form validation errors is weak, I can find a way to strengthen that. I can work on <code>api.js</code> to inspect the status codes, as well.</p>", "original_commit_id": "613f558d9628344debe4fcc25a45d482f92a7ccc", "id": 148628813}