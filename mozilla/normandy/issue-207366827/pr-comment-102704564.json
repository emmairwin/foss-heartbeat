{"original_position": 45, "diff_hunk": "@@ -0,0 +1,90 @@\n+\"use strict\";\n+// Cu is defined in xpc_head.js\n+/* globals Cu */\n+\n+Cu.import(\"resource://gre/modules/Services.jsm\");\n+Cu.import(\"resource://gre/modules/Task.jsm\");\n+Cu.import(\"resource://testing-common/httpd.js\"); /* globals HttpServer */\n+Cu.import(\"resource://gre/modules/osfile.jsm\", this); /* globals OS, TextDecoder */\n+Cu.import(\"resource://shield-recipe-client/lib/NormandyApi.jsm\", this);\n+\n+function withServer(task) {\n+  return function* inner() {\n+    const server = makeMockApiServer();\n+    const serverUrl = `http://localhost:${server.identity.primaryPort}`;\n+    Services.prefs.setCharPref(\"extensions.shield-recipe-client.api_url\", `${serverUrl}/api/v1`);\n+    Services.prefs.setCharPref(\n+      \"security.content.signature.root_hash\",\n+      // Hash of the key that signs the normandy dev certificates\n+      \"4C:35:B1:C3:E3:12:D9:55:E7:78:ED:D0:A7:E7:8A:38:83:04:EF:01:BF:FA:03:29:B2:46:9F:3C:C5:EC:36:04\"\n+    );\n+    yield task(serverUrl);\n+    yield new Promise(resolve => server.stop(resolve));\n+  };\n+}\n+\n+function makeMockApiServer() {\n+  const server = new HttpServer();\n+  server.registerDirectory(\"/\", do_get_file(\"mock_api\"));\n+\n+  server.setIndexHandler(Task.async(function* (request, response) {\n+    response.processAsync();\n+    const dir = request.getProperty(\"directory\");\n+    const index = dir.clone();\n+    index.append(\"index.json\");\n+\n+    if (!index.exists()) {\n+      response.setStatusLine(\"1.1\", 404, \"Not Found\");\n+      response.write(`Cannot find path ${index.path}`);\n+      response.finish();\n+      return;\n+    }\n+\n+    try {\n+      const contentsArray = yield OS.File.read(index.path);\n+      const contents = new TextDecoder().decode(contentsArray);", "body_text": "Nit: you can use the options object for OS.File to make this less torturous:\nconst contents = yield OS.File.read(index.path, { encoding: \"utf-8\" });\nreturns a string directly.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/510", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/102704564", "created_at": "2017-02-23T12:45:41Z", "author_association": "CONTRIBUTOR", "body": "Nit: you can use the options object for `OS.File` to make this less torturous:\r\n```js\r\nconst contents = yield OS.File.read(index.path, { encoding: \"utf-8\" });\r\n```\r\nreturns a string directly.", "updated_at": "2017-02-23T22:37:10Z", "html_url": "https://github.com/mozilla/normandy/pull/510#discussion_r102704564", "pull_request_review_id": 23466575, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/102704564"}, "html": {"href": "https://github.com/mozilla/normandy/pull/510#discussion_r102704564"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/510"}}, "commit_id": "e83c63174a7ed48da636f574c05d9cbeb11abe04", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_NormandyApi.js", "body_html": "<p>Nit: you can use the options object for <code>OS.File</code> to make this less torturous:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">contents</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">yield</span> <span class=\"pl-c1\">OS</span>.<span class=\"pl-smi\">File</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-smi\">index</span>.<span class=\"pl-smi\">path</span>, { encoding<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>utf-8<span class=\"pl-pds\">\"</span></span> });</pre></div>\n<p>returns a string directly.</p>", "original_commit_id": "ea2c4ccc9c8d3e6c603edf5ece7bdb9608723090", "id": 102704564}