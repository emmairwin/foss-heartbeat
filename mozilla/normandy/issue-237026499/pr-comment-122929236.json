{"original_position": 109, "diff_hunk": "@@ -126,6 +142,73 @@ add_task(withMockApiServer(async function test_fetchRecipes() {\n   equal(recipes[0].name, \"system-addon-test\");\n }));\n \n+add_task(async function test_fetchRecipes_canonical_mismatch() {\n+  const getApiUrl = sinon.stub(NormandyApi, \"getApiUrl\").resolves(\"http://localhost/recipes/\");\n+\n+  // Recipe is non-canonical (it has whitespace, properties are out of order)\n+  const response = new MockResponse(`[\n+    {\n+      \"recipe\": {\"b\": 1, \"a\": 2},\n+      \"signature\": {\"signature\": \"\", \"x5u\": \"\"}\n+    }\n+  ]`);\n+  const get = sinon.stub(NormandyApi, \"get\").resolves(response);\n+\n+  try {\n+    await NormandyApi.fetchRecipes();\n+    ok(false, \"fetchRecipes did not throw for canonical JSON mismatch\");\n+  } catch (err) {\n+    ok(err instanceof InvalidSignatureError, \"Error was not an InvalidSignatureError\");\n+    ok(/Canonical/.test(err), \"Error was not due to canonical JSON mismatch\");\n+  }\n+\n+  getApiUrl.restore();\n+  get.restore();\n+});\n+\n+add_task(async function test_fetchRecipes_validation_error() {\n+  const getApiUrl = sinon.stub(NormandyApi, \"getApiUrl\").resolves(\"http://localhost/recipes/\");\n+\n+  // Mock two URLs: recipes and the x5u\n+  const get = sinon.stub(NormandyApi, \"get\").callsFake(async url => {\n+    if (url.endsWith(\"recipes/\")) {\n+      return new MockResponse(CanonicalJSON.stringify([\n+        {\n+          recipe: {a: 1, b: 2},\n+          signature: {signature: \"invalidsignature\", x5u: \"http://localhost/x5u/\"},\n+        },\n+      ]));\n+    } else if (url.endsWith(\"x5u/\")) {\n+      return new MockResponse(\"certchain\");\n+    }\n+\n+    return null;\n+  });\n+\n+  // Validation should fail due to a malformed x5u and signature.\n+  try {\n+    await NormandyApi.fetchRecipes();\n+    ok(false, \"fetchRecipes did not throw for a validation error\");\n+  } catch (err) {\n+    ok(err instanceof InvalidSignatureError, \"Error was not an InvalidSignatureError\");\n+    ok(/signature/.test(err), \"Error was not due to a validation error\");\n+  }\n+\n+  getApiUrl.restore();\n+  get.restore();\n+});\n+\n+const invalidSignatureServer = makeMockApiServer(do_get_file(\"invalid_recipe_signature_api\"));", "body_text": "I don't really understand this last test. It seems to do the same thing as the test before it, with the same assertions. What is it trying to do and how is it different from the previous test, which also checks for an invalid signature error result?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/818", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/122929236", "created_at": "2017-06-20T09:47:47Z", "author_association": "CONTRIBUTOR", "body": "I don't really understand this last test. It seems to do the same thing as the test before it, with the same assertions. What is it trying to do and how is it different from the previous test, which also checks for an invalid signature error result?", "updated_at": "2017-07-21T16:50:57Z", "html_url": "https://github.com/mozilla/normandy/pull/818#discussion_r122929236", "pull_request_review_id": 45082071, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/122929236"}, "html": {"href": "https://github.com/mozilla/normandy/pull/818#discussion_r122929236"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/818"}}, "commit_id": "93c2a45d817d55211a5aa0ea6379d3d9f8800a8b", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_NormandyApi.js", "body_html": "<p>I don't really understand this last test. It seems to do the same thing as the test before it, with the same assertions. What is it trying to do and how is it different from the previous test, which also checks for an invalid signature error result?</p>", "original_commit_id": "260749b2fb00e039a207680482c91bc975ee972d", "id": 122929236}