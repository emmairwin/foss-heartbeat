{"original_position": 70, "diff_hunk": "@@ -594,20 +611,21 @@ add_task(withMockExperiments(async function testInitTelemetryExpired(experiments\n \n // Experiments should end if the preference has been changed when init() is called\n add_task(withMockExperiments(withMockPreferences(async function testInitChanges(experiments, mockPreferences) {\n+  const stopStub = sinon.stub(PreferenceExperiments, \"stop\");\n   experiments[\"test\"] = experimentFactory({\n     name: \"test\",\n     preferenceName: \"fake.preference\",\n     preferenceValue: \"experiment value\",\n   });\n   mockPreferences.set(\"fake.preference\", \"changed value\");\n   await PreferenceExperiments.init();\n-  ok(experiments[\"test\"].expired, \"Experiment expires because value changed\");\n+  ok(stopStub.calledWith(\"test\"), \"Experiment is stopped because value changed\");", "body_text": "calledWith only asserts about the arguments you pass. so\nconst foo = sinon.stub();\nfoo(1, 2, 3);\nok(foo.calledWith(1));\nwould pass. The behavior you're thinking of is a part of calledWithExact. Which we should probably be using.", "in_reply_to_id": 111639199, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/684", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111642544", "created_at": "2017-04-14T22:01:17Z", "author_association": "MEMBER", "body": "`calledWith` only asserts about the arguments you pass. so\r\n\r\n```js\r\nconst foo = sinon.stub();\r\nfoo(1, 2, 3);\r\nok(foo.calledWith(1));\r\n```\r\n\r\nwould pass. The behavior you're thinking of is a part of `calledWithExact`. Which we should probably be using.", "updated_at": "2017-04-20T21:43:09Z", "html_url": "https://github.com/mozilla/normandy/pull/684#discussion_r111642544", "pull_request_review_id": 32904518, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111642544"}, "html": {"href": "https://github.com/mozilla/normandy/pull/684#discussion_r111642544"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/684"}}, "commit_id": "009453077d34baa6259317a687770e0d34627c79", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<p><code>calledWith</code> only asserts about the arguments you pass. so</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">foo</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">sinon</span>.<span class=\"pl-en\">stub</span>();\n<span class=\"pl-en\">foo</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>);\n<span class=\"pl-en\">ok</span>(<span class=\"pl-smi\">foo</span>.<span class=\"pl-en\">calledWith</span>(<span class=\"pl-c1\">1</span>));</pre></div>\n<p>would pass. The behavior you're thinking of is a part of <code>calledWithExact</code>. Which we should probably be using.</p>", "original_commit_id": "ba7561489c9e77268b36065d7db3da8fc1f7cdd3", "id": 111642544}