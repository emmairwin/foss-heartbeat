{"original_position": 221, "diff_hunk": "@@ -521,41 +521,48 @@ add_task(withMockExperiments(async function (experiments) {\n // init should set the default preference value for active, default experiments\n add_task(withMockExperiments(withMockPreferences(async function testInit(experiments, mockPreferences) {\n   experiments[\"user\"] = experimentFactory({\n+    name: \"user\",\n     preferenceName: \"user\",\n     preferenceValue: true,\n     expired: false,\n     preferenceBranchType: \"user\",\n   });\n   experiments[\"default\"] = experimentFactory({\n+    name: \"default\",\n     preferenceName: \"default\",\n     preferenceValue: true,\n     expired: false,\n     preferenceBranchType: \"default\",\n   });\n   experiments[\"expireddefault\"] = experimentFactory({\n+    name: \"expireddefault\",\n     preferenceName: \"expireddefault\",\n     preferenceValue: true,\n     expired: true,\n     preferenceBranchType: \"default\",\n   });\n \n-  for (const name of Object.keys(experiments)) {\n-    mockPreferences.set(name, false, \"default\");\n+  for (const experiment of Object.values(experiments)) {\n+    mockPreferences.set(experiment.preferenceName, false, \"default\");\n   }\n \n   await PreferenceExperiments.init();\n \n-  equal(DefaultPreferences.get(\"user\"), false, \"init ignored a user pref experiment\");\n-  equal(\n-    DefaultPreferences.get(\"expireddefault\"),\n+  is(\n+    mockPreferences.get(\"user\", undefined, \"default\"),\n     false,\n-    \"init ignored an expired default pref experiment\",\n+    \"init ignored a user pref experiment\",\n   );\n-  equal(\n-    DefaultPreferences.get(\"default\"),\n+  is(\n+    mockPreferences.get(\"default\", undefined, \"default\"),", "body_text": "It seemed strange to deal with two different objects for interacting with preferences during tests. This way a test that uses prefs only needs one object, instead of two or three (in the case of using both default and non-default prefs). It also gives us a consistent API between setting and getting prefs, which is nice.", "in_reply_to_id": 111640190, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/684", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111774550", "created_at": "2017-04-17T17:04:07Z", "author_association": "MEMBER", "body": "It seemed strange to deal with two different objects for interacting with preferences during tests. This way a test that uses prefs only needs one object, instead of two or three (in the case of using both default and non-default prefs). It also gives us a consistent API between setting and getting prefs, which is nice.", "updated_at": "2017-04-20T21:43:09Z", "html_url": "https://github.com/mozilla/normandy/pull/684#discussion_r111774550", "pull_request_review_id": 33039227, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111774550"}, "html": {"href": "https://github.com/mozilla/normandy/pull/684#discussion_r111774550"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/684"}}, "commit_id": "009453077d34baa6259317a687770e0d34627c79", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-client-addon/test/browser/browser_PreferenceExperiments.js", "body_html": "<p>It seemed strange to deal with two different objects for interacting with preferences during tests. This way a test that uses prefs only needs one object, instead of two or three (in the case of using both default and non-default prefs). It also gives us a consistent API between setting and getting prefs, which is nice.</p>", "original_commit_id": "8cec91dce43e88369b8e9c0dc87ba2820880ede5", "id": 111774550}