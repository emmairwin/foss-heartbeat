{"original_position": 81, "diff_hunk": "@@ -0,0 +1,116 @@\n+Docker for QA\n+=============\n+The following describes how to get a prebuilt instance of Normandy for\n+testing. This is not suitable for development.\n+\n+Prerequisites\n+-------------\n+This guide assumes you have already installed and set up the following:\n+\n+1. Docker_\n+2. `Postgres 9.4`_\n+\n+.. _Docker: https://docs.docker.com/engine/installation/\n+.. _Postgres 9.4: http://www.postgresql.org/\n+\n+Preparing an environment file\n+-----------------------------\n+Normandy gets all of its configuration via environment variables. Docker\n+has built in support for this pattern. For this set up, we will be using\n+and environment file to specifiy this configuration, and having Docker\n+read that file.\n+\n+The file can be named anything, but canonically is named ``.env``. The\n+only thing that is required is a database config, which looks something\n+like the below. We'll go over how to fill in the blanks next.\n+\n+.. code-block:: ini\n+\n+  DATABASE_URL=postgresql://<username>:<password>@<host>/<db_name>\n+\n+``<username>`` and ``<password>`` are the details to authenticate with\n+Postgres. ``<db_name>`` is the name of the database to connect to, and\n+is usually ``normandy``.\n+\n+``<host>`` is more complicated. This needs to be something that the\n+Docker container can use to connect to Postgres. There are a few options here:\n+\n+Linux with local Postgres\n+  Use ``172.17.0.1``\n+\n+_`Docker Toolbox` with local Postgres (OSX or Windows)\n+  Use ``192.168.99.1``\n+\n+.. _the Docker Toolbox: https://docs.docker.com/engine/installation/mac/\n+\n+Configuring Postgres\n+--------------------\n+\n+1. Listening on the Docker IP:\n+\n+  By default Postgres only listens on localhost, and so Docker containers\n+  won't be able to connect to it. To change this, edit your Postgres config\n+  (it is in the Postgres data directory, often at\n+  ``/var/lib/postgres/postgresql.conf`` or similar). There should be a commented\n+  out line like:\n+\n+  .. code-block:: ini\n+\n+    #listen_addresses = 'localhost'\n+\n+  Uncomment it, and change it to include the host IP address you found above,\n+  like:\n+\n+  .. code-block:: ini\n+\n+    listen_addresses = 'localhost,172.17.0.1'\n+\n+2. Allowing connections from the Docker subnet:\n+\n+   Postgres has ACLs per IP, so we'll need to allow connections from the Docker\n+   network. Edit your Postgres HBA file, ``pg_hba.conf``. It should be in the\n+   same place as ``postgresql.conf``. Add a line referencing the docker\n+   network, like this:\n+\n+   .. code-block:: ini\n+\n+     host    all             all             172.17.0.0/16           trust\n+\n+   For Docker Toolbox, use ``192.168.99.0/24``.\n+\n+Running Normandy", "body_text": "We could probably write that script. Though I'm actually unsure if the \"get the IP address\" instructions work here. On a mac you might have to use the docker-machine command to get the IP and use that instead. Can you test this part?\n\nYou're right, the docker-machine ip command gives me the correct IP, the current instructions do not.\n\nMost guides about this subject leave off the -d flag in the docker run command, and have \"now open another terminal and run...\". That way you can halt it manually. Maybe that is a better approach?\n\nI like that over encouraging people to leave stuff running in the background.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/54", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/54635155", "created_at": "2016-03-01T21:03:36Z", "author_association": "MEMBER", "body": "> We could probably write that script. Though I'm actually unsure if the \"get the IP address\" instructions work here. On a mac you might have to use the docker-machine command to get the IP and use that instead. Can you test this part?\n\nYou're right, the `docker-machine ip` command gives me the correct IP, the current instructions do not.\n\n> Most guides about this subject leave off the -d flag in the docker run command, and have \"now open another terminal and run...\". That way you can halt it manually. Maybe that is a better approach?\n\nI like that over encouraging people to leave stuff running in the background.\n", "updated_at": "2016-03-02T00:58:23Z", "html_url": "https://github.com/mozilla/normandy/pull/54#discussion_r54635155", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/54635155"}, "html": {"href": "https://github.com/mozilla/normandy/pull/54#discussion_r54635155"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/54"}}, "commit_id": "0017d89b4341090efa2aaca5f53b07310de3b234", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 85, "path": "docs/qa/docker.rst", "body_html": "<blockquote>\n<p>We could probably write that script. Though I'm actually unsure if the \"get the IP address\" instructions work here. On a mac you might have to use the docker-machine command to get the IP and use that instead. Can you test this part?</p>\n</blockquote>\n<p>You're right, the <code>docker-machine ip</code> command gives me the correct IP, the current instructions do not.</p>\n<blockquote>\n<p>Most guides about this subject leave off the -d flag in the docker run command, and have \"now open another terminal and run...\". That way you can halt it manually. Maybe that is a better approach?</p>\n</blockquote>\n<p>I like that over encouraging people to leave stuff running in the background.</p>", "original_commit_id": "88c9d00de264cdf2310d46303681c53b71f7f139", "id": 54635155}