{"original_position": 148, "diff_hunk": "@@ -0,0 +1,169 @@\n+import { Button, Card, Col, message, Modal, Row, Tag } from 'antd';\n+import autobind from 'autobind-decorator';\n+import { Map } from 'immutable';\n+import moment from 'moment';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+\n+import ApprovalForm from 'control_new/components/recipes/ApprovalForm';\n+import Details from 'control_new/components/recipes/Details';\n+import * as approvalRequestActions from 'control_new/state/approvalRequests/actions';\n+import {\n+  getRecipeForRevision,\n+  isRevisionPendingApproval,\n+} from 'control_new/state/revisions/selectors';\n+\n+\n+@connect(\n+  (state, { revision }) => ({\n+    approvalRequest: revision.get('approval_request', new Map()),\n+    recipe: getRecipeForRevision(state, revision.get('id'), new Map()),\n+    isPendingApproval: isRevisionPendingApproval(state, revision.get('id')),\n+  }),\n+  {\n+    approveApprovalRequest: approvalRequestActions.approveApprovalRequest,\n+    closeApprovalRequest: approvalRequestActions.closeApprovalRequest,\n+    rejectApprovalRequest: approvalRequestActions.rejectApprovalRequest,\n+  },\n+)\n+@autobind\n+export default class ApprovalRequest extends React.Component {\n+  static propTypes = {\n+    approvalRequest: PropTypes.object.isRequired,\n+    approveApprovalRequest: PropTypes.func.isRequired,\n+    closeApprovalRequest: PropTypes.func.isRequired,\n+    isPendingApproval: PropTypes.bool.isRequired,\n+    recipe: PropTypes.object.isRequired,\n+    rejectApprovalRequest: PropTypes.func.isRequired,\n+    revision: PropTypes.object.isRequired,\n+  };\n+\n+  state = {\n+    formErrors: {},\n+  };\n+\n+  handleCloseButtonClick() {\n+    const { approvalRequest, closeApprovalRequest } = this.props;\n+    Modal.confirm({\n+      title: 'Are you sure you want to close this approval request?',\n+      onOk() {\n+        closeApprovalRequest(approvalRequest.get('id'));\n+      },\n+    });\n+  }\n+\n+  async handleSubmit(values, context) {\n+    const {\n+      approvalRequest,\n+      approveApprovalRequest,\n+      rejectApprovalRequest,\n+    } = this.props;\n+\n+    let action;\n+    let successMessage;\n+\n+    // The form submits if the user hits enter in the comment field. To ensure we are only\n+    // submitting an approval or rejection when one of the buttons is explicitly clicked we\n+    // do a strict comparison to the expected boolean values.\n+    if (context.approved === true) {\n+      action = approveApprovalRequest;\n+      successMessage = 'Request approved';\n+    } else if (context.approved === false) {\n+      action = rejectApprovalRequest;\n+      successMessage = 'Request rejected';\n+    }\n+\n+    if (action) {\n+      try {\n+        await action(approvalRequest.get('id'), values);\n+        message.success(successMessage);\n+      } catch (error) {\n+        if (error.data.error) {\n+          message.error(error.data.error);\n+        } else {\n+          message.error(\n+            'Approval could not be submitted. Please correct any errors listed in the form below.',\n+          );\n+        }\n+        if (error.data) {\n+          this.setState({ formErrors: error.data });\n+        }\n+      }\n+    }\n+  }\n+\n+  renderRequestDetails() {\n+    const { approvalRequest } = this.props;\n+\n+    return (\n+      <dl className=\"details narrow\">\n+        <dt>\n+          {approvalRequest.get('approved') ? 'Approved' : 'Rejected'} by\n+        </dt>\n+        <dd>\n+          {approvalRequest.getIn(['approver', 'email'])}\n+        </dd>\n+\n+        <dt>Response Date</dt>\n+        <dd>{moment(approvalRequest.get('created')).format('MMMM Do YYYY, h:mm a')}</dd>\n+\n+        <dt>Comment</dt>\n+        <dd>{approvalRequest.get('comment')}</dd>\n+      </dl>\n+    );\n+  }\n+\n+  render() {\n+    const { approvalRequest, isPendingApproval, recipe } = this.props;\n+\n+    let extra;\n+\n+    if (isPendingApproval) {\n+      extra = (\n+        <Button icon=\"close-circle\" size=\"small\" onClick={this.handleCloseButtonClick}>\n+          Close\n+        </Button>\n+      );\n+    } else if (approvalRequest.get('approved')) {\n+      extra = <Tag color=\"green\">Approved</Tag>;\n+    } else {\n+      extra = <Tag color=\"red\">Rejected</Tag>;\n+    }\n+\n+    return (\n+      <div className=\"approval-history-details\">\n+        <Row gutter={24}>\n+          <Col span={16}>\n+            <Details recipe={recipe} />\n+          </Col>\n+          <Col span={8}>\n+            <Card title=\"Approval Request\" extra={extra}>\n+              <div className=\"request-metadata\">\n+                <dl className=\"details narrow\">\n+                  <dt>Requested by</dt>\n+                  <dd>{approvalRequest.getIn(['creator', 'email'])}</dd>\n+\n+                  <dt>Request Date</dt>\n+                  <dd>{moment(approvalRequest.get('created')).format('MMMM Do YYYY, h:mm a')}</dd>", "body_text": "i dont think there will be a need to copy/paste. if there is we can deal with that when it's brought up.", "in_reply_to_id": 128052696, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/858", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128085636", "created_at": "2017-07-18T20:25:55Z", "author_association": "MEMBER", "body": "i dont think there will be a need to copy/paste. if there is we can deal with that when it's brought up.", "updated_at": "2017-07-19T17:27:53Z", "html_url": "https://github.com/mozilla/normandy/pull/858#discussion_r128085636", "pull_request_review_id": 50732580, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128085636"}, "html": {"href": "https://github.com/mozilla/normandy/pull/858#discussion_r128085636"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/858"}}, "commit_id": "a01fcec3e56173c666db8178da1bee6718534598", "user": {"following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "url": "https://api.github.com/users/rehandalal", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "html_url": "https://github.com/rehandalal", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "repos_url": "https://api.github.com/users/rehandalal/repos", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "site_admin": false, "login": "rehandalal", "type": "User", "id": 987136, "followers_url": "https://api.github.com/users/rehandalal/followers"}, "position": null, "path": "recipe-server/client/control_new/components/recipes/ApprovalRequest.js", "body_html": "<p>i dont think there will be a need to copy/paste. if there is we can deal with that when it's brought up.</p>", "original_commit_id": "c30aa6f9ddb808845a2de34640fee9fa4cdd5c94", "id": 128085636}