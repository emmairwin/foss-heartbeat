{"original_position": 9, "diff_hunk": "@@ -285,6 +285,15 @@ this.PreferenceExperiments = {\n   },\n \n   /**\n+   * Get a list of all stored experiment objects.\n+   * @resolves {Experiment[]}\n+   */\n+  async getAll() {\n+    const store = await ensureStorage();\n+    return Object.values(store.data).map(experiment => Object.assign({}, experiment));", "body_text": "It is, I thought I had a comment here. Must've forgot, whoops!\nThe typedef for experiment objects at the top explicitly calls out the one-level-deep requirement, so it's better than not being documented. We don't use it, but I also like that cloning with Object.assign is possible within sandboxes as well as outside of them, vs cloneInto, which would require writing a deep copy for cloning outside of chrome code.\nI don't really feel strongly one way or another. You think we might as well use cloneInto?", "in_reply_to_id": 109621152, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/660", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109731486", "created_at": "2017-04-04T17:46:01Z", "author_association": "MEMBER", "body": "It is, I thought I had a comment here. Must've forgot, whoops!\r\n\r\nThe typedef for experiment objects at the top explicitly calls out the one-level-deep requirement, so it's better than not being documented. We don't use it, but I also like that cloning with `Object.assign` is possible within sandboxes as well as outside of them, vs `cloneInto`, which would require writing a deep copy for cloning outside of chrome code.\r\n\r\nI don't really feel strongly one way or another. You think we might as well use `cloneInto`?", "updated_at": "2017-04-05T23:16:12Z", "html_url": "https://github.com/mozilla/normandy/pull/660#discussion_r109731486", "pull_request_review_id": 30852626, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109731486"}, "html": {"href": "https://github.com/mozilla/normandy/pull/660#discussion_r109731486"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/660"}}, "commit_id": "9bbce66ba5d240d9175fb9e178358cabfe34eebf", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/lib/PreferenceExperiments.jsm", "body_html": "<p>It is, I thought I had a comment here. Must've forgot, whoops!</p>\n<p>The typedef for experiment objects at the top explicitly calls out the one-level-deep requirement, so it's better than not being documented. We don't use it, but I also like that cloning with <code>Object.assign</code> is possible within sandboxes as well as outside of them, vs <code>cloneInto</code>, which would require writing a deep copy for cloning outside of chrome code.</p>\n<p>I don't really feel strongly one way or another. You think we might as well use <code>cloneInto</code>?</p>", "original_commit_id": "ff4630e2b5173dd23d4d57391b88c630d43fdf27", "id": 109731486}