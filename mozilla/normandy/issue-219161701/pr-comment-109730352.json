{"original_position": 29, "diff_hunk": "@@ -222,6 +222,39 @@ filter expressions.\n \n    Boolean specifying whether the user has enabled Do Not Track.\n \n+.. js:attribute:: normandy.experiments\n+\n+   Object with several arrays containing the unique slugs for experiments that\n+   the user has participated in. Currently, this is limited to preference\n+   experiments.\n+\n+   .. js:attribute:: normandy.experiments.all\n+\n+      Array of experiment slugs for every experiment that the user has  enrolled\n+      in, whether currently active or expired.\n+\n+   .. js:attribute:: normandy.experiments.active\n+\n+      Array of experiment slugs for active experiments that the user is enrolled\n+      in.\n+\n+   .. js:attribute:: normandy.experiments.expired\n+\n+      Array of experiment slugs for expired experiments that the user has\n+      enrolled in.\n+\n+   .. code-block:: javascript\n+\n+      // Target clients that have ever participated in the \"australis\"\n+      // experiment, including clients that are currently running it\n+      \"australis\" in normandy.experiments.all", "body_text": "We could add JEXL transforms that call Set methods, and have something like:\nnormandy.experiments.all|includes(\"australis\")\nBut that would stand out as weird compared to all the other APIs in filter expressions, which use lists and work with the in operator.\nThe filter expression doesn't really care about enforcing uniqueness or lack of order in the list, so maybe PreferenceExperiments.getAll() should return a set, and then the code in ClientEnvironment should convert that to a list?\nAlthough it'd be nice to patch JEXL to support in for sets. We'd just have to add it here: https://github.com/TechnologyAdvice/Jexl/blob/master/lib/grammar.js#L53", "in_reply_to_id": 109620499, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/660", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109730352", "created_at": "2017-04-04T17:41:27Z", "author_association": "MEMBER", "body": "We _could_ add JEXL transforms that call Set methods, and have something like:\r\n\r\n```js\r\nnormandy.experiments.all|includes(\"australis\")\r\n```\r\n\r\nBut that would stand out as weird compared to all the other APIs in filter expressions, which use lists and work with the `in` operator. \r\n\r\nThe filter expression doesn't really care about enforcing uniqueness or lack of order in the list, so maybe `PreferenceExperiments.getAll()` should return a set, and then the code in `ClientEnvironment` should convert that to a list?\r\n\r\nAlthough it'd be nice to patch JEXL to support `in` for sets. We'd just have to add it here: https://github.com/TechnologyAdvice/Jexl/blob/master/lib/grammar.js#L53", "updated_at": "2017-04-05T23:16:12Z", "html_url": "https://github.com/mozilla/normandy/pull/660#discussion_r109730352", "pull_request_review_id": 30851416, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109730352"}, "html": {"href": "https://github.com/mozilla/normandy/pull/660#discussion_r109730352"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/660"}}, "commit_id": "9bbce66ba5d240d9175fb9e178358cabfe34eebf", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 29, "path": "docs/user/filter_expressions.rst", "body_html": "<p>We <em>could</em> add JEXL transforms that call Set methods, and have something like:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">normandy</span>.<span class=\"pl-smi\">experiments</span>.<span class=\"pl-c1\">all</span><span class=\"pl-k\">|</span><span class=\"pl-en\">includes</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>australis<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p>But that would stand out as weird compared to all the other APIs in filter expressions, which use lists and work with the <code>in</code> operator.</p>\n<p>The filter expression doesn't really care about enforcing uniqueness or lack of order in the list, so maybe <code>PreferenceExperiments.getAll()</code> should return a set, and then the code in <code>ClientEnvironment</code> should convert that to a list?</p>\n<p>Although it'd be nice to patch JEXL to support <code>in</code> for sets. We'd just have to add it here: <a href=\"https://github.com/TechnologyAdvice/Jexl/blob/master/lib/grammar.js#L53\">https://github.com/TechnologyAdvice/Jexl/blob/master/lib/grammar.js#L53</a></p>", "original_commit_id": "ff4630e2b5173dd23d4d57391b88c630d43fdf27", "id": 109730352}