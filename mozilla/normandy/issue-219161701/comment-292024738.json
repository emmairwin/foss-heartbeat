{"body": "Feedback'd. RE: the `in` operator, I think adding set support to JEXL is the right answer, but I want to punt on that for this PR. I think in the medium term we're on a path to fork JEXL, given that\r\n\r\n1. It seems relatively unmaintained.\r\n2. I'm already maintaining a Python implementation that we're using.\r\n3. JEXL has some weird edge cases that we don't like, like filter expressions (not the expressions that Normandy use) or implicitly using undefined for attribute values, but not when using square brackets.\r\n4. We have more changes we'd like to make.", "body_text": "Feedback'd. RE: the in operator, I think adding set support to JEXL is the right answer, but I want to punt on that for this PR. I think in the medium term we're on a path to fork JEXL, given that\n\nIt seems relatively unmaintained.\nI'm already maintaining a Python implementation that we're using.\nJEXL has some weird edge cases that we don't like, like filter expressions (not the expressions that Normandy use) or implicitly using undefined for attribute values, but not when using square brackets.\nWe have more changes we'd like to make.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/292024738", "created_at": "2017-04-05T23:19:50Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/660#issuecomment-292024738", "updated_at": "2017-04-05T23:19:50Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<p>Feedback'd. RE: the <code>in</code> operator, I think adding set support to JEXL is the right answer, but I want to punt on that for this PR. I think in the medium term we're on a path to fork JEXL, given that</p>\n<ol>\n<li>It seems relatively unmaintained.</li>\n<li>I'm already maintaining a Python implementation that we're using.</li>\n<li>JEXL has some weird edge cases that we don't like, like filter expressions (not the expressions that Normandy use) or implicitly using undefined for attribute values, but not when using square brackets.</li>\n<li>We have more changes we'd like to make.</li>\n</ol>", "id": 292024738, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/660"}