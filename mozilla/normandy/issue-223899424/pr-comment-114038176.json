{"original_position": 81, "diff_hunk": "@@ -42,39 +50,66 @@ def version_info_dir(self, tmpdir, settings):\n     @pytest.fixture\n     def commit_file(self, version_info_dir):\n         f = version_info_dir.join('commit')\n-        f.write('bc685e4be05a182ae819990509c92affa3d882ab\\n')\n+        f.commit = 'bc685e4be05a182ae819990509c92affa3d882ab'\n+        f.write(f.commit + '\\n')\n         return f\n \n     @pytest.fixture\n     def tag_file(self, version_info_dir):\n         f = version_info_dir.join('tag')\n-        f.write('v20\\n')\n+        f.tag = 'v20'\n+        f.write(f.tag + '\\n')\n         return f\n \n-    def test_with_both(self, commit_file, tag_file):\n-        commit, tag = views.get_version_info()\n-        assert commit == 'bc685e4be05a182ae819990509c92affa3d882ab'\n-        assert tag == 'v20'\n-\n-    def test_with_only_commit(self, commit_file):\n-        commit, tag = views.get_version_info()\n-        assert commit == 'bc685e4be05a182ae819990509c92affa3d882ab'\n-        assert tag == 'unknown'\n-\n-    def test_with_only_tag(self, tag_file):\n-        commit, tag = views.get_version_info()\n-        assert commit == 'unknown'\n-        assert tag == 'v20'\n-\n-    def test_with_nothing(self, version_info_dir):\n-        commit, tag = views.get_version_info()\n-        assert commit == 'unknown'\n-        assert tag == 'unknown'\n-\n-    def test_it_is_cached(self, commit_file, tag_file):\n-        commit, tag = views.get_version_info()\n-        assert commit == 'bc685e4be05a182ae819990509c92affa3d882ab'\n-        assert tag == 'v20'\n+    @pytest.fixture\n+    def build_time_file(self, version_info_dir):\n+        f = version_info_dir.join('build_time')\n+        ts = 1493051820\n+        f.write('1493051820\\n')\n+        f.datetime = datetime.utcfromtimestamp(ts)\n+        return f\n+\n+    @pytest.fixture\n+    def clear_version_info(self):", "body_text": "I think this would be better suited to a context manager than a pytest fixture, given that it does cleanup after running some code.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/705", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/114038176", "created_at": "2017-04-28T23:51:53Z", "author_association": "MEMBER", "body": "I think this would be better suited to a context manager than a pytest fixture, given that it does cleanup after running some code.", "updated_at": "2017-05-03T22:19:48Z", "html_url": "https://github.com/mozilla/normandy/pull/705#discussion_r114038176", "pull_request_review_id": 35481464, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/114038176"}, "html": {"href": "https://github.com/mozilla/normandy/pull/705#discussion_r114038176"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/705"}}, "commit_id": "2ae9e40dd3909d3d08ad1b4f8f54d1949120d370", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-server/normandy/health/tests/test_api.py", "body_html": "<p>I think this would be better suited to a context manager than a pytest fixture, given that it does cleanup after running some code.</p>", "original_commit_id": "3a9124503ca431b2c446dc952447245e33e886c4", "id": 114038176}