{"body": "Can I please have some more detailed steps to reproduce? I went to the Shield console locally and filled out the form to create a recipe called \"ethan is testing\" with the filter expression `\"invalid-string`, but submitting this gets me a 400 with the error `{\"extra_filter_expression\":[\"Could not parse expression: \\\"invalid-string\"]}` (which is shown nicely in the form). It seems like this is handled explicitly by the `RecipeSerializer` (see e.g. https://github.com/mozilla/normandy/blob/4a57612c72eecd58ee7add38e28a769afafffcfb/recipe-server/normandy/recipes/api/v2/serializers.py#L144-L161). Are you using some other mechanism to POST the recipe?", "body_text": "Can I please have some more detailed steps to reproduce? I went to the Shield console locally and filled out the form to create a recipe called \"ethan is testing\" with the filter expression \"invalid-string, but submitting this gets me a 400 with the error {\"extra_filter_expression\":[\"Could not parse expression: \\\"invalid-string\"]} (which is shown nicely in the form). It seems like this is handled explicitly by the RecipeSerializer (see e.g. \n  \n    \n      normandy/recipe-server/normandy/recipes/api/v2/serializers.py\n    \n    \n        Lines 144 to 161\n      in\n      4a57612\n    \n    \n    \n    \n\n        \n          \n           def validate_extra_filter_expression(self, value): \n        \n\n        \n          \n               jexl = JEXL() \n        \n\n        \n          \n            \n        \n\n        \n          \n               # Add mock transforms for validation. See \n        \n\n        \n          \n               # http://normandy.readthedocs.io/en/latest/user/filter_expressions.html#transforms \n        \n\n        \n          \n               # for a list of what transforms we expect to be available. \n        \n\n        \n          \n               jexl.add_transform('date', lambda x: x) \n        \n\n        \n          \n               jexl.add_transform('stableSample', lambda x: x) \n        \n\n        \n          \n               jexl.add_transform('bucketSample', lambda x: x) \n        \n\n        \n          \n               jexl.add_transform('preferenceValue', lambda x: x) \n        \n\n        \n          \n               jexl.add_transform('preferenceIsUserSet', lambda x: x) \n        \n\n        \n          \n               jexl.add_transform('preferenceExists', lambda x: x) \n        \n\n        \n          \n            \n        \n\n        \n          \n               errors = list(jexl.validate(value)) \n        \n\n        \n          \n               if errors: \n        \n\n        \n          \n                   raise serializers.ValidationError(errors) \n        \n\n        \n          \n            \n        \n\n        \n          \n               return value \n        \n    \n  \n\n). Are you using some other mechanism to POST the recipe?", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/368085343", "created_at": "2018-02-23T17:46:51Z", "author_association": "CONTRIBUTOR", "html_url": "https://github.com/mozilla/normandy/issues/1059#issuecomment-368085343", "updated_at": "2018-02-23T17:46:51Z", "user": {"following_url": "https://api.github.com/users/glasserc/following{/other_user}", "events_url": "https://api.github.com/users/glasserc/events{/privacy}", "organizations_url": "https://api.github.com/users/glasserc/orgs", "url": "https://api.github.com/users/glasserc", "gists_url": "https://api.github.com/users/glasserc/gists{/gist_id}", "html_url": "https://github.com/glasserc", "subscriptions_url": "https://api.github.com/users/glasserc/subscriptions", "avatar_url": "https://avatars0.githubusercontent.com/u/17006?v=4", "repos_url": "https://api.github.com/users/glasserc/repos", "received_events_url": "https://api.github.com/users/glasserc/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/glasserc/starred{/owner}{/repo}", "site_admin": false, "login": "glasserc", "type": "User", "id": 17006, "followers_url": "https://api.github.com/users/glasserc/followers"}, "body_html": "<p>Can I please have some more detailed steps to reproduce? I went to the Shield console locally and filled out the form to create a recipe called \"ethan is testing\" with the filter expression <code>\"invalid-string</code>, but submitting this gets me a 400 with the error <code>{\"extra_filter_expression\":[\"Could not parse expression: \\\"invalid-string\"]}</code> (which is shown nicely in the form). It seems like this is handled explicitly by the <code>RecipeSerializer</code> (see e.g. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mozilla/normandy/blob/4a57612c72eecd58ee7add38e28a769afafffcfb/recipe-server/normandy/recipes/api/v2/serializers.py#L144-L161\">normandy/recipe-server/normandy/recipes/api/v2/serializers.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 144 to 161\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mozilla/normandy/commit/4a57612c72eecd58ee7add38e28a769afafffcfb\">4a57612</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L144\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"144\"></td>\n          <td id=\"LC144\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">validate_extra_filter_expression</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">value</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L145\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"145\"></td>\n          <td id=\"LC145\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl <span class=\"pl-k\">=</span> JEXL() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L146\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"146\"></td>\n          <td id=\"LC146\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L147\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"147\"></td>\n          <td id=\"LC147\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Add mock transforms for validation. See</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L148\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"148\"></td>\n          <td id=\"LC148\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> http://normandy.readthedocs.io/en/latest/user/filter_expressions.html#transforms</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L149\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"149\"></td>\n          <td id=\"LC149\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> for a list of what transforms we expect to be available.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L150\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"150\"></td>\n          <td id=\"LC150\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>date<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L151\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"151\"></td>\n          <td id=\"LC151\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>stableSample<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L152\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"152\"></td>\n          <td id=\"LC152\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>bucketSample<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L153\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"153\"></td>\n          <td id=\"LC153\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>preferenceValue<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L154\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"154\"></td>\n          <td id=\"LC154\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>preferenceIsUserSet<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L155\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"155\"></td>\n          <td id=\"LC155\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     jexl.add_transform(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>preferenceExists<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L156\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"156\"></td>\n          <td id=\"LC156\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L157\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"157\"></td>\n          <td id=\"LC157\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     errors <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(jexl.validate(value)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L158\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"158\"></td>\n          <td id=\"LC158\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> errors: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L159\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"159\"></td>\n          <td id=\"LC159\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">raise</span> serializers.ValidationError(errors) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L160\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"160\"></td>\n          <td id=\"LC160\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L161\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"161\"></td>\n          <td id=\"LC161\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> value </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n). Are you using some other mechanism to POST the recipe?</p>", "id": 368085343, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/1059"}