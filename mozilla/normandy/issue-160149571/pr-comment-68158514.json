{"original_position": 130, "diff_hunk": "@@ -44,27 +44,89 @@ class RecipeList extends React.Component {\n     dispatch(ControlActions.setSelectedRecipe(null));\n   }\n \n+  viewRecipe(recipe) {\n+    const { dispatch } = this.props;\n+    dispatch(ControlActions.setSelectedRecipe(recipe.id));\n+    dispatch(push(`/control/recipe/${recipe.id}/`));\n+  }\n+\n+  updateSearch(event) {\n+    this.setState({\n+      searchText: event.target.value,\n+      searchQuery: `${event.target.value}:${this.state.filterStatus}`\n+    });\n+  }\n+\n+  updateFilter(filterStatus) {\n+    let searchQuery = this.state.searchText;\n+    if (filterStatus !== 'All') {\n+      searchQuery = `${this.state.searchText}:${filterStatus}`;\n+    }\n+\n+    this.setState({\n+      searchQuery,\n+      filterStatus\n+    })\n+  }\n+\n+  parseFilter(contents, filter) {\n+    let enabledStatusMatches = true;\n+\n+    if (this.state.filterStatus !== 'All') {\n+      enabledStatusMatches = (contents.split(':')[1] === this.state.filterStatus);\n+    }\n+\n+    return enabledStatusMatches && contents.toLowerCase().indexOf(this.state.searchText.toLowerCase()) > -1;\n+  }\n+\n+  formatFilterValue(recipe, property) {\n+    let status = (recipe.enabled === true ? 'Enabled' : 'Disabled');\n+    return `${recipe[property]}:${status}`;\n+  }\n+\n   render() {\n+    const { dispatch, recipes } = this.props;\n+\n     return (\n-      <div className=\"fluid-8\">\n-        <table id=\"recipe-list\">\n-          <thead>\n-            <tr>\n-              <td>Name</td>\n-              <td>Action</td>\n-              <td>Enabled</td>\n-              <td>Approved</td>\n-              <td>Last Updated</td>\n-            </tr>\n-          </thead>\n-          <tbody>\n-            {\n-              this.props.recipes.map(recipe =>\n-                <RecipeDataRow recipe={recipe} dispatch={this.props.dispatch} key={recipe.id} />\n+      <div>\n+        <div id=\"secondary-header\" className=\"fluid-8\">", "body_text": "This whole bar feels like it should be another component.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/161", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/68158514", "created_at": "2016-06-23T00:19:45Z", "author_association": "MEMBER", "body": "This whole bar feels like it should be another component.\n", "updated_at": "2016-06-23T15:57:54Z", "html_url": "https://github.com/mozilla/normandy/pull/161#discussion_r68158514", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/68158514"}, "html": {"href": "https://github.com/mozilla/normandy/pull/161#discussion_r68158514"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/161"}}, "commit_id": "d6c22f0bf632bd498439ba5ec372c3ae92ed92e9", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/control/static/control/js/components/RecipeList.jsx", "body_html": "<p>This whole bar feels like it should be another component.</p>", "original_commit_id": "2d5d9fb25b4512bfc0941934ce89d08c65b4f3b8", "id": 68158514}