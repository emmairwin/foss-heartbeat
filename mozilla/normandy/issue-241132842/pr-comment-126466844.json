{"original_position": 93, "diff_hunk": "@@ -0,0 +1,139 @@\n+import { Pagination, Table } from 'antd';\n+import autobind from 'autobind-decorator';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+import { bindActionCreators } from 'redux';\n+import { push as pushAction, Link } from 'redux-little-router';\n+\n+import LoadingOverlay from 'control_new/components/common/LoadingOverlay';\n+import QueryExtensions from 'control_new/components/data/QueryExtensions';\n+import ListingActionBar from 'control_new/components/extensions/ListingActionBar';\n+import DataList from 'control_new/components/tables/DataList';\n+import {\n+  getExtensionListingColumns,\n+  getExtensionListingCount,\n+  getExtensionListing,\n+} from 'control_new/state/extensions/selectors';\n+import * as routerSelectors from 'control_new/state/router/selectors';\n+\n+\n+@connect(\n+  state => ({\n+    columns: getExtensionListingColumns(state),\n+    count: getExtensionListingCount(state),\n+    extensions: getExtensionListing(state),\n+    getCurrentURL: queryParams => routerSelectors.getCurrentURL(state, queryParams),\n+    ordering: routerSelectors.getQueryParam(state, 'ordering', '-last_updated'),\n+    pageNumber: routerSelectors.getQueryParamAsInt(state, 'page', 1),\n+  }),\n+  dispatch => (\n+    bindActionCreators({\n+      push: pushAction,\n+    }, dispatch)\n+  ),\n+)\n+@autobind\n+export default class Listing extends React.Component {\n+  static propTypes = {\n+    columns: PropTypes.object,\n+    count: PropTypes.number,\n+    extensions: PropTypes.object.isRequired,\n+    getCurrentURL: PropTypes.func.isRequired,\n+    ordering: PropTypes.string,\n+    pageNumber: PropTypes.number,\n+    push: PropTypes.func.isRequired,\n+  };\n+\n+  static defaultProps = {\n+    columns: null,\n+    count: null,\n+    ordering: null,\n+    pageNumber: null,\n+    searchText: null,\n+    status: null,\n+  }\n+\n+  static columnRenderers = {\n+    name() {\n+      return (\n+        <Table.Column\n+          title=\"Name\"\n+          dataIndex=\"name\"\n+          key=\"name\"\n+          render={Listing.renderLinkedText}\n+        />\n+      );\n+    },\n+\n+    xpi() {\n+      return (\n+        <Table.Column\n+          title=\"XPI URL\"\n+          dataIndex=\"xpi\"\n+          key=\"xpi\"\n+          render={Listing.renderLinkedText}\n+        />\n+      );\n+    },\n+  }\n+\n+  static renderLinkedText(text, record) {\n+    return <Link href={`/extensions/${record.id}`}>{text}</Link>;\n+  }\n+\n+  getFilters() {\n+    const { ordering } = this.props;\n+\n+    const filters = {\n+      ordering,\n+    };\n+\n+    Object.keys(filters).forEach(key => {\n+      if ([undefined, null].includes(filters[key])) {", "body_text": "This seems strange - would a simple if (!filters[key]) { ... } work? Would we ever expect the value of filters[key] to be falsy, like0?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/867", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126466844", "created_at": "2017-07-10T16:07:31Z", "author_association": "CONTRIBUTOR", "body": "This seems strange - would a simple `if (!filters[key]) { ... }` work? Would we ever expect the value of `filters[key]` to be falsy, like`0`?", "updated_at": "2017-07-11T07:35:58Z", "html_url": "https://github.com/mozilla/normandy/pull/867#discussion_r126466844", "pull_request_review_id": 48950158, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126466844"}, "html": {"href": "https://github.com/mozilla/normandy/pull/867#discussion_r126466844"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/867"}}, "commit_id": "febf49d58f5fb86589b5d1f8102a5291d4f8778b", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": 94, "path": "recipe-server/client/control_new/components/extensions/Listing.js", "body_html": "<p>This seems strange - would a simple <code>if (!filters[key]) { ... }</code> work? Would we ever expect the value of <code>filters[key]</code> to be falsy, like<code>0</code>?</p>", "original_commit_id": "445e025c6e06de2d2759081658f8d0e38965e4d3", "id": 126466844}