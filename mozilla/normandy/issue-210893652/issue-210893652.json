{"body_text": "There's an issue in the front end code where the term recipe is used ambiguously. When a revision is selected, recipe objects totally inherit the revision, and from there it's tough to discern whether the user is looking at the most recent draft, if there's an approval request open, etc.\nThis patch:\n\nAdds a revisions object to the Recipes redux store.\n\nThe list (entries on master) is the list of the most current recipe data, whereas the revisions is a collection of arrays keyed on recipe id.\n\n\nAdds recipe/:id/revision/:revisionId route\n\nex:\nconst latestRecipeId = state.recipes.list[0].id;\nconst someRevisionId = 'abc123';\n\nconst selectedRevision = state.recipes.revisions[latestRecipeId][someRevisionId];\n\nThis is a concise example, but you get the idea.\nCurrently, there are 3 tests that are failing with this. I'm poking around to determine what the issue is but for now this is ready for feedback!", "labels": [], "number": 562, "assignee": {"following_url": "https://api.github.com/users/chartjes/following{/other_user}", "events_url": "https://api.github.com/users/chartjes/events{/privacy}", "organizations_url": "https://api.github.com/users/chartjes/orgs", "url": "https://api.github.com/users/chartjes", "gists_url": "https://api.github.com/users/chartjes/gists{/gist_id}", "html_url": "https://github.com/chartjes", "subscriptions_url": "https://api.github.com/users/chartjes/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/28321?v=4", "repos_url": "https://api.github.com/users/chartjes/repos", "received_events_url": "https://api.github.com/users/chartjes/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/chartjes/starred{/owner}{/repo}", "site_admin": false, "login": "chartjes", "type": "User", "id": 28321, "followers_url": "https://api.github.com/users/chartjes/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-03-01T09:08:57Z", "body_html": "<p>There's an issue in the front end code where the term <code>recipe</code> is used ambiguously. When a revision is selected, <code>recipe</code> objects totally inherit the revision, and from there it's tough to discern whether the user is looking at the most recent draft, if there's an approval request open, etc.</p>\n<p>This patch:</p>\n<ul>\n<li>Adds a <code>revisions</code> object to the Recipes redux store.\n<ul>\n<li>The <code>list</code> (<code>entries</code> on master) is the list of the most current recipe data, whereas the <code>revisions</code> is a collection of arrays keyed on recipe id.</li>\n</ul>\n</li>\n<li>Adds <code>recipe/:id/revision/:revisionId</code> route</li>\n</ul>\n<p>ex:</p>\n<pre><code>const latestRecipeId = state.recipes.list[0].id;\nconst someRevisionId = 'abc123';\n\nconst selectedRevision = state.recipes.revisions[latestRecipeId][someRevisionId];\n</code></pre>\n<p>This is a concise example, but you get the idea.</p>\n<p>Currently, there are <strong>3</strong> tests that are failing with this. I'm poking around to determine what the issue is but for now this is ready for feedback!</p>", "id": 210893652, "title": "Add `revision` property to Recipes store", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/562", "diff_url": "https://github.com/mozilla/normandy/pull/562.diff", "html_url": "https://github.com/mozilla/normandy/pull/562", "patch_url": "https://github.com/mozilla/normandy/pull/562.patch"}, "comments": 0, "state": "closed", "body": "There's an issue in the front end code where the term `recipe` is used ambiguously. When a revision is selected, `recipe` objects totally inherit the revision, and from there it's tough to discern whether the user is looking at the most recent draft, if there's an approval request open, etc.\r\n\r\nThis patch:\r\n  - Adds a `revisions` object to the Recipes redux store.\r\n    - The `list` (`entries` on master) is the list of the most current recipe data, whereas the `revisions` is a collection of arrays keyed on recipe id.\r\n  - Adds `recipe/:id/revision/:revisionId` route\r\n\r\nex:\r\n ```\r\nconst latestRecipeId = state.recipes.list[0].id;\r\nconst someRevisionId = 'abc123';\r\n\r\nconst selectedRevision = state.recipes.revisions[latestRecipeId][someRevisionId];\r\n```\r\n\r\nThis is a concise example, but you get the idea.\r\n\r\nCurrently, there are **3** tests that are failing with this. I'm poking around to determine what the issue is but for now this is ready for feedback!", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/562/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/562/labels{/name}", "author_association": "CONTRIBUTOR", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/562/comments", "html_url": "https://github.com/mozilla/normandy/pull/562", "updated_at": "2017-09-11T15:37:22Z", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/562", "created_at": "2017-02-28T20:24:35Z", "assignees": [{"following_url": "https://api.github.com/users/chartjes/following{/other_user}", "events_url": "https://api.github.com/users/chartjes/events{/privacy}", "organizations_url": "https://api.github.com/users/chartjes/orgs", "url": "https://api.github.com/users/chartjes", "gists_url": "https://api.github.com/users/chartjes/gists{/gist_id}", "html_url": "https://github.com/chartjes", "subscriptions_url": "https://api.github.com/users/chartjes/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/28321?v=4", "repos_url": "https://api.github.com/users/chartjes/repos", "received_events_url": "https://api.github.com/users/chartjes/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/chartjes/starred{/owner}{/repo}", "site_admin": false, "login": "chartjes", "type": "User", "id": 28321, "followers_url": "https://api.github.com/users/chartjes/followers"}, {"following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "url": "https://api.github.com/users/rehandalal", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "html_url": "https://github.com/rehandalal", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "repos_url": "https://api.github.com/users/rehandalal/repos", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "site_admin": false, "login": "rehandalal", "type": "User", "id": 987136, "followers_url": "https://api.github.com/users/rehandalal/followers"}]}