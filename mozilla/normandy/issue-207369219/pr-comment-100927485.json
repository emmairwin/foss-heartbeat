{"original_position": 31, "diff_hunk": "@@ -0,0 +1,52 @@\n+import pytest\n+\n+from normandy.base.templatetags.normandy_webpack_loader import render_bundle\n+\n+\n+class TestRenderBundle(object):\n+    @pytest.fixture\n+    def js_file(self, tmpdir):\n+        js_file = tmpdir.join('file.js')\n+        js_file.write('console.log(\"test\");')\n+        return js_file\n+\n+    @pytest.fixture\n+    def css_file(self, tmpdir):\n+        css_file = tmpdir.join('file.css')\n+        css_file.write('html { padding: 10px; }')\n+        return css_file\n+\n+    @pytest.fixture\n+    def mock_get_files(self, mocker, js_file, css_file):\n+        get_files = mocker.patch('normandy.base.templatetags.normandy_webpack_loader.get_files')\n+        get_files.return_value = [\n+            {'path': js_file.strpath, 'name': 'file.js', 'url': 'file.js'},\n+            {'path': css_file.strpath, 'name': 'file.css', 'url': 'file.css'},\n+        ]\n+        return get_files\n+\n+    @pytest.fixture\n+    def mock_sri_hash(self, mocker):\n+        sri_hash = mocker.patch('normandy.base.templatetags.normandy_webpack_loader.sri_hash')\n+        sri_hash.return_value = 'mock-hash'", "body_text": "I'd rather see this unmocked, or at least use a return value that depends on the inputs so that the tests can assert that the right hash goes with the right file. Maybe something as simple as\ndef mock_sri_hash(contents):\n    return 'hash({})'.format(contents)", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/511", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/100927485", "created_at": "2017-02-13T23:40:05Z", "author_association": "MEMBER", "body": "I'd rather see this unmocked, or at least use a return value that depends on the inputs so that the tests can assert that the right hash goes with the right file. Maybe something as simple as\r\n\r\n```python\r\ndef mock_sri_hash(contents):\r\n    return 'hash({})'.format(contents)\r\n```", "updated_at": "2017-03-01T04:25:09Z", "html_url": "https://github.com/mozilla/normandy/pull/511#discussion_r100927485", "pull_request_review_id": 21644488, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/100927485"}, "html": {"href": "https://github.com/mozilla/normandy/pull/511#discussion_r100927485"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/511"}}, "commit_id": "c5c692270b79fec4d334f8154b237826011b9307", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/normandy/base/tests/test_templatetags.py", "body_html": "<p>I'd rather see this unmocked, or at least use a return value that depends on the inputs so that the tests can assert that the right hash goes with the right file. Maybe something as simple as</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">mock_sri_hash</span>(<span class=\"pl-smi\">contents</span>):\n    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>hash(<span class=\"pl-c1\">{}</span>)<span class=\"pl-pds\">'</span></span>.format(contents)</pre></div>", "original_commit_id": "af6cb1eb663c174f8cfac0fcf6761f1d8014d21b", "id": 100927485}