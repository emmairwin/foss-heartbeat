{"original_position": 60, "diff_hunk": "@@ -174,6 +177,55 @@ def test_create_recipe_show_heartbeat(selenium):\n     assert len(recipe_list_page.recipe_rows) == 0\n \n \n+def test_revision_page_navbar(selenium):\n+    \"\"\"Test the navbar buttons on a recipe revision page.\"\"\"\n+    # Load control interface, expect login redirect.\n+    selenium.get('http://normandy:8000/control/')\n+    assert '/control/login/' in selenium.current_url\n+    LoginPage(selenium).login()\n+\n+    # Check for empty recipe listing\n+    recipe_list_page = RecipeListPage(selenium)\n+    recipe_list_page.wait_for_element('recipe_list')\n+    assert len(recipe_list_page.recipe_rows) == 0\n+\n+    # Load new recipe page\n+    recipe_list_page.new_recipe_button.click()\n+    form_page = ShowHeartbeatFormPage(selenium)\n+    form_page.wait_for_element('form')\n+\n+    # Fill out form\n+    form_page.name = 'Show-Heartbeat-Test'\n+    form_page.extra_filter_expression = 'true'\n+    form_page.action.select_by_value('show-heartbeat')\n+    form_page.wait_for_element('survey_id')\n+    form_page.survey_id = 'test-survey'\n+    form_page.message = 'Test Message'\n+    form_page.thanks_message = 'Thanks!'\n+    form_page.form.submit()\n+\n+    # Wait until we navigate away from the new recipe page\n+    wait_for(selenium, lambda driver: '/control/recipe/new/' not in driver.current_url)\n+\n+    # Grab the 'base' URL with the recipe id\n+    recipe_url = selenium.current_url\n+\n+    # Make an edit and save it to createa  new revision\n+    form_page.survey_id = 'test-survey-revision'\n+    form_page.form.submit()\n+\n+    # Wait for the page to change to the revision URL\n+    wait_for(selenium, lambda driver: recipe_url not in driver.current_url)\n+\n+    # Click the clone button and ensure it went to the right place\n+    form_page.wait_for_element('clone_button')\n+    form_page.clone_button.click()\n+\n+    clone_url = recipe_url + 'clone/'\n+\n+    assert clone_url in selenium.current_url", "body_text": "Can you do an exact comparison here, instead of using in? That is, assert clone_url == selenium.current_url", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/665", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109978143", "created_at": "2017-04-05T17:29:22Z", "author_association": "MEMBER", "body": "Can you do an exact comparison here, instead of using `in`? That is, `assert clone_url == selenium.current_url`", "updated_at": "2017-04-06T15:43:53Z", "html_url": "https://github.com/mozilla/normandy/pull/665#discussion_r109978143", "pull_request_review_id": 31113735, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109978143"}, "html": {"href": "https://github.com/mozilla/normandy/pull/665#discussion_r109978143"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/665"}}, "commit_id": "c039c77315e62703e87cb84bc8acb368c765bf8f", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "functional_tests/tests/test_basic.py", "body_html": "<p>Can you do an exact comparison here, instead of using <code>in</code>? That is, <code>assert clone_url == selenium.current_url</code></p>", "original_commit_id": "510ec4d336d2993f2b1dbafaa1bb523694ff1059", "id": 109978143}