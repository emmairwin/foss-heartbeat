{"original_position": 56, "diff_hunk": "@@ -415,6 +416,71 @@ def test_it_serves_revisions(self, api_client):\n         assert res.status_code == 200\n         assert res.data['id'] == recipe.latest_revision.id\n \n+    def test_request_approval(self, api_client):\n+        recipe = RecipeFactory()\n+        res = api_client.post(\n+            '/api/v1/recipe_revision/{}/request_approval/'.format(recipe.latest_revision.id))\n+        assert res.status_code == 200\n+        assert res.data['id'] == recipe.latest_revision.approval_request.id\n+\n+    def test_cannot_open_second_approval_request(self, api_client):\n+        recipe = RecipeFactory()\n+        ApprovalRequestFactory(revision=recipe.latest_revision)\n+        res = api_client.post(\n+            '/api/v1/recipe_revision/{}/request_approval/'.format(recipe.latest_revision.id))\n+        assert res.status_code == 400\n+\n+\n+@pytest.mark.django_db\n+class TestApprovalRequestAPI(object):\n+    def test_it_works(self, api_client):\n+        res = api_client.get('/api/v1/approval_request/')\n+        assert res.status_code == 200\n+        assert res.data == []\n+\n+    def test_approve(self, api_client):\n+        r = RecipeFactory()\n+        a = ApprovalRequestFactory(revision=r.latest_revision)\n+        res = api_client.post('/api/v1/approval_request/{}/approve/'.format(a.id))\n+        assert res.status_code == 200\n+\n+        r = Recipe.objects.get(pk=r.pk)\n+        assert r.is_approved\n+\n+    def test_approve_already_approved(self, api_client):\n+        r = RecipeFactory()\n+        a = ApprovalRequestFactory(revision=r.latest_revision)\n+        a.approve(UserFactory())\n+\n+        res = api_client.post('/api/v1/approval_request/{}/approve/'.format(a.id))\n+        assert res.status_code == 400", "body_text": "It is probably a good idea to assert the text of the error that was returned here.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/438", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99721640", "created_at": "2017-02-07T00:43:22Z", "author_association": "MEMBER", "body": "It is probably a good idea to assert the text of the error that was returned here.", "updated_at": "2017-02-09T19:28:14Z", "html_url": "https://github.com/mozilla/normandy/pull/438#discussion_r99721640", "pull_request_review_id": 20399436, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99721640"}, "html": {"href": "https://github.com/mozilla/normandy/pull/438#discussion_r99721640"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/438"}}, "commit_id": "31dae648d4956b060cb23d86493a78aa031c5019", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": 56, "path": "recipe-server/normandy/recipes/tests/test_api.py", "body_html": "<p>It is probably a good idea to assert the text of the error that was returned here.</p>", "original_commit_id": "fed81feb5bcfc68060eeea56270dae3049f0e3cf", "id": 99721640}