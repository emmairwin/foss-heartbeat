{"original_position": 74, "diff_hunk": "@@ -0,0 +1,126 @@\n+/* eslint-disable react/no-did-mount-set-state */\n+import { Button, Popover, Icon } from 'antd';\n+import autobind from 'autobind-decorator';\n+import React from 'react';\n+import PropTypes from 'prop-types';\n+\n+import ShieldIdenticon from 'control_new/components/common/ShieldIdenticon';\n+\n+@autobind\n+export default class IdenticonField extends React.PureComponent {\n+  static propTypes = {\n+    disabled: PropTypes.bool,\n+    onChange: PropTypes.func.isRequired,\n+    value: PropTypes.any,\n+  };\n+\n+  static defaultProps = {\n+    disabled: false,\n+    value: null,\n+  };\n+\n+  static generateSeed() {\n+    return `v1:${Math.random().toString(36).substr(2)}`;\n+  }\n+\n+  state = {\n+    history: [],\n+    index: -1,\n+  };\n+\n+  componentDidMount() {\n+    const { value } = this.props;\n+\n+    if (value) {\n+      this.setState({\n+        index: 0,\n+        history: [value],\n+      });\n+\n+      // Fire an onChange to prevent `initialValue` changing when creating a\n+      // new recipe.\n+      this.props.onChange(value);\n+    }\n+  }\n+\n+  componentWillReceiveProps({ value }) {\n+    if (this.state.index === -1 && value) {\n+      this.setState({\n+        index: 0,\n+        history: [value],\n+      });\n+    }\n+  }\n+\n+  handleChange(direction) {\n+    let next;\n+    const {\n+      index,\n+      history,\n+    } = this.state;\n+    const newIndex = index + direction;\n+\n+\n+    if (newIndex < 0) {\n+      return;\n+    }\n+\n+    next = history[newIndex];\n+\n+    let newHistory = [...history];\n+    if (!next) {\n+      next = IdenticonField.generateSeed();\n+      if (newHistory.indexOf(next) === -1) {\n+        newHistory = [...history, next];", "body_text": "newHistory is already a cloned object, because of let newHistory = [...history]. No point in doing i t again here.\nAlternatively, would it make sense to use Immutable here?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1038", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/139774860", "created_at": "2017-09-19T18:18:34Z", "author_association": "MEMBER", "body": "`newHistory` is already a cloned object, because of `let newHistory = [...history]`. No point in doing i t again here.\r\n\r\nAlternatively, would it make sense to use Immutable here?", "updated_at": "2017-09-25T20:10:33Z", "html_url": "https://github.com/mozilla/normandy/pull/1038#discussion_r139774860", "pull_request_review_id": 63737273, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/139774860"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1038#discussion_r139774860"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1038"}}, "commit_id": "58f13fafca6ae9b8bb32a1610d33a3d79aba7dfe", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control_new/components/forms/IdenticonField.js", "body_html": "<p><code>newHistory</code> is already a cloned object, because of <code>let newHistory = [...history]</code>. No point in doing i t again here.</p>\n<p>Alternatively, would it make sense to use Immutable here?</p>", "original_commit_id": "ea6931f212723045859f9e75c7bc64063319a60f", "id": 139774860}