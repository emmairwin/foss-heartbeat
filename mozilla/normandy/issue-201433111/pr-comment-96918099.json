{"original_position": 114, "diff_hunk": "@@ -82,112 +56,300 @@ describe('ShowHeartbeatAction', () => {\n     }));\n   });\n \n-  it('should not bother to annotate an empty post-answer URL', async () => {\n-    const recipe = recipeFactory({\n-      arguments: {\n-        postAnswerUrl: '',\n-      },\n-    });\n-    const action = new ShowHeartbeatAction(normandy, recipe);\n+  describe('Repeat Options', () => {\n+    describe('`once`', () => {\n+      afterEach(() => {\n+        normandy.showHeartbeat.calls.reset();\n+        delete normandy.mock.storage.data.lastShown;\n+      });\n \n-    await action.execute();\n-    const postAnswerUrl = normandy.showHeartbeat.calls.argsFor(0)[0].postAnswerUrl;\n-    expect(postAnswerUrl).toEqual('');\n-  });\n+      it('should NOT show if another heartbeat has ran already', async() => {\n+        const firstAction = new ShowHeartbeatAction(normandy, recipeFactory());\n+        await firstAction.execute();\n \n-  it('should annotate the post-answer URL with extra query args', async () => {\n-    const url = 'https://example.com';\n-    const recipe = recipeFactory({\n-      arguments: {\n-        postAnswerUrl: url,\n-      },\n+        // first time should run fine\n+        expect(normandy.showHeartbeat).toHaveBeenCalled();\n+\n+        // clear the history of calls from the testing\n+        normandy.showHeartbeat.calls.reset();\n+\n+        const secondAction = new ShowHeartbeatAction(normandy, recipeFactory());\n+        await secondAction.execute();\n+        // second time should NOT run\n+        expect(normandy.showHeartbeat).not.toHaveBeenCalled();\n+      });\n+\n+      it('should set the last-shown date', async () => {\n+        const action = new ShowHeartbeatAction(normandy, recipeFactory());\n+\n+        spyOn(Date, 'now').and.returnValue(10);\n+\n+        expect(normandy.mock.storage.data.lastShown).toBeUndefined();\n+        await action.execute();\n+        expect(normandy.mock.storage.data.lastShown).toEqual('10');\n+      });\n+\n+      it('should show if it has not been shown already', async() => {\n+        const onceRecipe = recipeFactory();\n+\n+        const action = new ShowHeartbeatAction(normandy, onceRecipe);\n+        await action.execute();\n+\n+        expect(normandy.showHeartbeat).toHaveBeenCalled();\n+      });\n+\n+      it('should NOT show if it has been shown already', async() => {\n+        const onceRecipe = recipeFactory();\n+\n+        const action = new ShowHeartbeatAction(normandy, onceRecipe);\n+\n+        // set the lastShown value in storage,\n+        // so heartbeat thinks it's run already before\n+        normandy.mock.storage.data.lastShown = '1337';", "body_text": "I think this is testing something different than the description says. It is sort of subtle distiction, but I think it matters. The description says \"if it has  been shown already\", but it is testing \"if there is a lastShown value\" (that's probably far in the past). I think either is fine, but the test and the description should line up.\nThis is similar to the ghost recipe testing: the test here is actually testing \"once we are in this state, what is the behavior?\", where a more robust test would be \"after we have taken these actions, what is the behavior?\".", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/429", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96918099", "created_at": "2017-01-19T17:56:37Z", "author_association": "MEMBER", "body": "I think this is testing something different than the description says. It is sort of subtle distiction, but I think it matters. The description says \"if it has  been shown already\", but it is testing \"if there is a lastShown value\" (that's probably far in the past). I think either is fine, but the test and the description should line up.\r\n\r\nThis is similar to the ghost recipe testing: the test here is actually testing \"once we are in this state, what is the behavior?\", where a more robust test would be \"after we have taken these actions, what is the behavior?\".", "updated_at": "2017-01-25T17:16:54Z", "html_url": "https://github.com/mozilla/normandy/pull/429#discussion_r96918099", "pull_request_review_id": 17512272, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96918099"}, "html": {"href": "https://github.com/mozilla/normandy/pull/429#discussion_r96918099"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/429"}}, "commit_id": "d5274b2a2f7acd69f4786a61d91518dd6c82ab41", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/actions/tests/test_show-heartbeat.js", "body_html": "<p>I think this is testing something different than the description says. It is sort of subtle distiction, but I think it matters. The description says \"if it has  been shown already\", but it is testing \"if there is a lastShown value\" (that's probably far in the past). I think either is fine, but the test and the description should line up.</p>\n<p>This is similar to the ghost recipe testing: the test here is actually testing \"once we are in this state, what is the behavior?\", where a more robust test would be \"after we have taken these actions, what is the behavior?\".</p>", "original_commit_id": "fd8be9d878551e484d9a2439b725c9bb42c436ce", "id": 96918099}