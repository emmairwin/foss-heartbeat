{"original_position": 14, "diff_hunk": "@@ -50,34 +50,43 @@ buildControlField.propTypes = {\n   children: pt.node,\n };\n \n+export const CheckboxGroup = ({ name, onChange, options = [], value }) => {\n+  /**\n+   * Checkbox change event handler. Appends or removes the selected checkbox's\n+   * value to the existing `value` prop, and reports the change up to redux-form.\n+   *\n+   * @param  {Event} onChange event object\n+   */\n+  const handleChange = ({ event: target }) => {\n+    if (target.checked) {\n+      // Use Set to remove any dupes from the new value array\n+      const newValue = new Set(value.concat([target.value]));", "body_text": "This specific bit has been replaced with _.uniq, which uses arrays, but if we were to use Sets, I think that'd be worth opening a separate PR for. I'm not sure how fetch handles using Set as a query param, but we'd probably have to do some sort of array-ifing when interacting with the API. I will look into it.", "in_reply_to_id": 107209856, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/595", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111792409", "created_at": "2017-04-17T18:34:05Z", "author_association": "CONTRIBUTOR", "body": "This specific bit has been replaced with `_.uniq`, which uses arrays, but if we _were_ to use Sets, I think that'd be worth opening a separate PR for. I'm not sure how `fetch` handles using Set as a query param, but we'd probably have to do some sort of array-ifing when interacting with the API. I will look into it.", "updated_at": "2017-04-17T18:39:15Z", "html_url": "https://github.com/mozilla/normandy/pull/595#discussion_r111792409", "pull_request_review_id": 33058528, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/111792409"}, "html": {"href": "https://github.com/mozilla/normandy/pull/595#discussion_r111792409"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/595"}}, "commit_id": "4fa35e564b9c52cef07a720371a94f5cd0e1de76", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control/components/Fields.js", "body_html": "<p>This specific bit has been replaced with <code>_.uniq</code>, which uses arrays, but if we <em>were</em> to use Sets, I think that'd be worth opening a separate PR for. I'm not sure how <code>fetch</code> handles using Set as a query param, but we'd probably have to do some sort of array-ifing when interacting with the API. I will look into it.</p>", "original_commit_id": "65730f9a28e51ced4f17c0fca9ce2303a7df050a", "id": 111792409}