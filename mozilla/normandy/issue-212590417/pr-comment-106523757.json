{"original_position": 115, "diff_hunk": "@@ -51,88 +44,65 @@ export default class MultiPicker extends React.Component {\n       value,\n     } = this.props;\n \n-    const selectedOptions = options.filter(option =>\n-      value.indexOf(option.value) === -1);\n-\n-    let displayedOptions = [].concat(selectedOptions)\n-      .map(option => option.value)\n-      .map(val =>\n-        (!val ? null : { ...this.convertValueToObj(val) }))\n-      .filter(x => x);\n-\n     const {\n       filterText,\n     } = this.state;\n \n-    if (filterText) {\n-      displayedOptions = displayedOptions.filter(option =>\n-        JSON.stringify(option).indexOf(filterText) > -1);\n-    }\n+    let selectedOptions = options.filter(option => value.indexOf(option.value) === -1);\n \n-    return displayedOptions;\n-  }\n-\n-  handleApplyOption(event) {\n-    event.persist();\n-\n-    if (!this.availableRef) {\n-      return;\n-    }\n-\n-    const {\n-      value,\n-      onChange,\n-    } = this.props;\n-\n-    let selectedFilters = MultiPicker.getActiveSelectOptions(this.availableRef);\n+    if (filterText) {\n+      const searchText = filterText.toLowerCase();\n \n-    if (!selectedFilters || selectedFilters.length === 0) {\n-      selectedFilters = this.getDisplayedOptions();\n-      selectedFilters = selectedFilters.map(option => option.value);\n+      selectedOptions = selectedOptions.filter(option => {\n+        const searchValues = JSON.stringify(Object.values(option)).toLowerCase();", "body_text": "The options only have two fields - label (displayed name) and value (the abbreviation), e.g. { label: 'Albania', value: 'AL'}, so I don't think it's necessary to manually pluck those values out.\nAs for the JSON business, you're correct that searching with quotes/commas would produce unintended search results. How do you feel about:\nselectedOptions = selectedOptions.filter(option => {\n  const searchValues = Object.values(option).join(' ').toLowerCase();\n  return searchValues.indexOf(searchText) > -1;\n});\n\nIt still looks over only the values, but becomes a concatenated string without any extraneous quotes/commas.", "in_reply_to_id": 106281237, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/595", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/106523757", "created_at": "2017-03-16T20:31:39Z", "author_association": "CONTRIBUTOR", "body": "The `option`s only have two fields - `label` (displayed name) and `value` (the abbreviation), e.g. `{ label: 'Albania', value: 'AL'}`, so I don't think it's necessary to manually pluck those values out.\r\n\r\nAs for the JSON business, you're correct that searching with quotes/commas would produce unintended search results. How do you feel about:\r\n```\r\nselectedOptions = selectedOptions.filter(option => {\r\n  const searchValues = Object.values(option).join(' ').toLowerCase();\r\n  return searchValues.indexOf(searchText) > -1;\r\n});\r\n```\r\nIt still looks over only the values, but becomes a concatenated string without any extraneous quotes/commas.", "updated_at": "2017-04-17T18:39:15Z", "html_url": "https://github.com/mozilla/normandy/pull/595#discussion_r106523757", "pull_request_review_id": 27451190, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/106523757"}, "html": {"href": "https://github.com/mozilla/normandy/pull/595#discussion_r106523757"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/595"}}, "commit_id": "4fa35e564b9c52cef07a720371a94f5cd0e1de76", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control/components/MultiPicker.js", "body_html": "<p>The <code>option</code>s only have two fields - <code>label</code> (displayed name) and <code>value</code> (the abbreviation), e.g. <code>{ label: 'Albania', value: 'AL'}</code>, so I don't think it's necessary to manually pluck those values out.</p>\n<p>As for the JSON business, you're correct that searching with quotes/commas would produce unintended search results. How do you feel about:</p>\n<pre><code>selectedOptions = selectedOptions.filter(option =&gt; {\n  const searchValues = Object.values(option).join(' ').toLowerCase();\n  return searchValues.indexOf(searchText) &gt; -1;\n});\n</code></pre>\n<p>It still looks over only the values, but becomes a concatenated string without any extraneous quotes/commas.</p>", "original_commit_id": "d86998b4c6ba6efa58e580ac84660a14920ac820", "id": 106523757}