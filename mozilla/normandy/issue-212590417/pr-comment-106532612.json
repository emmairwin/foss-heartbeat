{"original_position": 176, "diff_hunk": "@@ -51,88 +44,65 @@ export default class MultiPicker extends React.Component {\n       value,\n     } = this.props;\n \n-    const selectedOptions = options.filter(option =>\n-      value.indexOf(option.value) === -1);\n-\n-    let displayedOptions = [].concat(selectedOptions)\n-      .map(option => option.value)\n-      .map(val =>\n-        (!val ? null : { ...this.convertValueToObj(val) }))\n-      .filter(x => x);\n-\n     const {\n       filterText,\n     } = this.state;\n \n-    if (filterText) {\n-      displayedOptions = displayedOptions.filter(option =>\n-        JSON.stringify(option).indexOf(filterText) > -1);\n-    }\n+    let selectedOptions = options.filter(option => value.indexOf(option.value) === -1);\n \n-    return displayedOptions;\n-  }\n-\n-  handleApplyOption(event) {\n-    event.persist();\n-\n-    if (!this.availableRef) {\n-      return;\n-    }\n-\n-    const {\n-      value,\n-      onChange,\n-    } = this.props;\n-\n-    let selectedFilters = MultiPicker.getActiveSelectOptions(this.availableRef);\n+    if (filterText) {\n+      const searchText = filterText.toLowerCase();\n \n-    if (!selectedFilters || selectedFilters.length === 0) {\n-      selectedFilters = this.getDisplayedOptions();\n-      selectedFilters = selectedFilters.map(option => option.value);\n+      selectedOptions = selectedOptions.filter(option => {\n+        const searchValues = JSON.stringify(Object.values(option)).toLowerCase();\n+        return searchValues.indexOf(searchText) > -1;\n+      });\n     }\n \n-    const newOptions = []\n-      .concat(value || [])\n-      .concat(selectedFilters);\n-\n-    // clear user input\n-    this.availableRef.value = null;\n-\n-    onChange(newOptions.join(','));\n+    return selectedOptions;\n   }\n \n-  handleRemoveOption(event) {\n-    event.persist();\n-    if (!this.selectedRef) {\n-      return;\n-    }\n-\n-    const {\n-      value,\n-      onChange,\n-    } = this.props;\n+  handleTextChange(event) {\n+    const { value } = event.target;\n \n-    const selectedFilters = MultiPicker.getActiveSelectOptions(this.selectedRef);\n-    let newOptions = []\n-      .concat(value || [])\n-      .filter(val => selectedFilters.indexOf(val) === -1);\n+    this.setState({\n+      filterText: value,\n+    });\n+  }\n \n-    if (!selectedFilters || selectedFilters.length === 0) {\n-      newOptions = [];\n-    }\n+  handleChangeOption(type) {\n+    return () => {\n+      const ref = type === 'apply' ? this.availableRef : this.selectedRef;\n+      if (!type || !ref) {\n+        return;\n+      }\n \n-    // clear the user selection\n-    this.selectedRef.value = null;\n+      const {\n+        value = [],\n+        onChange = () => {},\n+      } = this.props;\n+\n+      // Get a list of all selected values.\n+      let selection = [].concat(value);\n+      // Pick up list of selected options from the dom ref\n+      const refSelected = MultiPicker.getActiveSelectOptions(ref);\n+\n+      // Apply = take from the 'available' section and put in 'selected'\n+      if (type === 'apply') {", "body_text": "Sorry, can you elaborate on Deferring to another method on the class and subclassing to customize the behavior. ? I'm unsure how this function could be split up, as both operations (applying/removing) need to perform mostly the same operations, in the same order. Any clarity would be great, thank you!", "in_reply_to_id": 106296416, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/595", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/106532612", "created_at": "2017-03-16T21:11:56Z", "author_association": "CONTRIBUTOR", "body": "Sorry, can you elaborate on `Deferring to another method on the class and subclassing to customize the behavior.` ? I'm unsure how this function could be split up, as both operations (applying/removing) need to perform mostly the same operations, in the same order. Any clarity would be great, thank you!", "updated_at": "2017-04-17T18:39:15Z", "html_url": "https://github.com/mozilla/normandy/pull/595#discussion_r106532612", "pull_request_review_id": 27460710, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/106532612"}, "html": {"href": "https://github.com/mozilla/normandy/pull/595#discussion_r106532612"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/595"}}, "commit_id": "4fa35e564b9c52cef07a720371a94f5cd0e1de76", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control/components/MultiPicker.js", "body_html": "<p>Sorry, can you elaborate on <code>Deferring to another method on the class and subclassing to customize the behavior.</code> ? I'm unsure how this function could be split up, as both operations (applying/removing) need to perform mostly the same operations, in the same order. Any clarity would be great, thank you!</p>", "original_commit_id": "d86998b4c6ba6efa58e580ac84660a14920ac820", "id": 106532612}