{"original_position": 80, "diff_hunk": "@@ -373,6 +390,45 @@ def save(self, *args, **kwargs):\n         self.implementation_hash = self.compute_implementation_hash()\n         super().save(update_fields=['implementation_hash'])\n \n+    def validate_arguments(self, arguments, old_arguments=None):\n+        \"\"\"\n+        Test if `arguments` follows all action-specific rules.\n+\n+        If there is a previous version of the arguments, they should\n+        be passed as `old_arguments`. Some validation rules depend on\n+        the history of the arguments.\n+\n+        Raises `ValidationError` if any rules are violated.\n+        \"\"\"\n+        if self.name == 'preference-experiment':\n+            # Feature branch slugs should be unique within an experiment.\n+            branch_slugs = set()\n+            branch_values = set()\n+            for branch in arguments['branches']:\n+                if branch['slug'] in branch_slugs:\n+                    raise ValidationError(self.errors['duplicate_branch_slug']\n+                                          .format(slug=branch['slug']))\n+                if branch['value'] in branch_values:\n+                    raise ValidationError(self.errors['duplicate_branch_value']\n+                                          .format(value=branch['value']))\n+                branch_slugs.add(branch['slug'])\n+                branch_values.add(branch['value'])\n+\n+            # Experiment slugs should be unique.\n+            experiment_recipes = Recipe.objects.filter(latest_revision__action=self)\n+            experiment_slugs = set()\n+            if old_arguments is None:\n+                # This is a newly created revision, so its slug should not be in the DB\n+                experiment_slugs.add(arguments['slug'])\n+            for recipe in experiment_recipes:\n+                if recipe.arguments['slug'] in experiment_slugs:\n+                    raise ValidationError(self.errors['duplicate_experiment_slug']\n+                                          .format(slug=arguments['slug']))\n+\n+            # Once published, branches of a feature experiment cannot be modified.\n+            if old_arguments is not None and arguments['branches'] != old_arguments['branches']:", "body_text": "Turns out that \"published\" isn't a concept we have until #610 is merged. I'm going to completely take out this check, and file an issue to add it back in once we have peer-review landed.", "in_reply_to_id": 108801095, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/651", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108809450", "created_at": "2017-03-29T23:13:01Z", "author_association": "MEMBER", "body": "Turns out that \"published\" isn't a concept we have until #610 is merged. I'm going to completely take out this check, and file an issue to add it back in once we have peer-review landed.", "updated_at": "2017-04-05T19:18:07Z", "html_url": "https://github.com/mozilla/normandy/pull/651#discussion_r108809450", "pull_request_review_id": 29867090, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108809450"}, "html": {"href": "https://github.com/mozilla/normandy/pull/651#discussion_r108809450"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/651"}}, "commit_id": "4ed398312e1e920bb331944c0d17a5a6bfe0f7cb", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/normandy/recipes/models.py", "body_html": "<p>Turns out that \"published\" isn't a concept we have until <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"213877797\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/mozilla/normandy/issues/610\" href=\"https://github.com/mozilla/normandy/issues/610\">#610</a> is merged. I'm going to completely take out this check, and file an issue to add it back in once we have peer-review landed.</p>", "original_commit_id": "a9c9fbcb7c0875ec57eca6b12981384bf996a8cd", "id": 108809450}