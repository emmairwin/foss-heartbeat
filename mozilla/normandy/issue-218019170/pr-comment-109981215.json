{"original_position": 52, "diff_hunk": "@@ -44,6 +45,50 @@ def test_recipes_used_by_empty(self):\n         RecipeFactory.create_batch(2, action=action, enabled=False)\n         assert list(action.recipes_used_by) == []\n \n+    def test_validate_arguments_it_works(self):\n+        action = ActionFactory(name='nothing special')\n+        # does not raise an exception\n+        action.validate_arguments({})\n+\n+    def test_validate_arguments_preference_exeriments_unique_branch_slugs(self):\n+        action = ActionFactory(name='preference-experiment')\n+        arguments = {\n+            'slug': 'test',\n+            'branches': [\n+                {'slug': 'unique', 'value': 'a'},\n+                {'slug': 'duplicate', 'value': 'b'},\n+                {'slug': 'duplicate', 'value': 'c'}\n+            ]\n+        }\n+        with pytest.raises(serializers.ValidationError) as exc_info:\n+            action.validate_arguments(arguments)\n+        error = action.errors['duplicate_branch_slug']\n+        assert exc_info.value.detail == {'arguments': {'branches': {2: {'slug': error}}}}\n+\n+    def test_validate_arguments_preference_exeriments_unique_branch_values(self):\n+        action = ActionFactory(name='preference-experiment')\n+        arguments = {\n+            'slug': 'test',\n+            'branches': [\n+                {'slug': 'a', 'value': 'unique'},\n+                {'slug': 'b', 'value': 'duplicate'},\n+                {'slug': 'c', 'value': 'duplicate'}\n+            ]\n+        }\n+        with pytest.raises(serializers.ValidationError) as exc_info:\n+            action.validate_arguments(arguments)\n+        error = action.errors['duplicate_branch_value']\n+        assert exc_info.value.detail == {'arguments': {'branches': {2: {'value': error}}}}\n+\n+    def test_validate_arguments_preference_experiments_unique_experiment_slug(self):\n+        action = ActionFactory(name='preference-experiment')\n+        arguments = {'slug': 'duplicate', 'branches': []}\n+        RecipeFactory(action=action, arguments=arguments)\n+        with pytest.raises(serializers.ValidationError) as exc_info:\n+            action.validate_arguments(arguments)", "body_text": "This test passes, but it's incorrect. We only create one recipe, so its slug has nothing to conflict. But, because we don't pass old_arguments, it treats the experiment as brand new, and compares itself to its own slug, which conflicts, and passes the test.\nWe'll probably want to have two tests, one for the newly-created case, and one for the existing-recipe case.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/651", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109981215", "created_at": "2017-04-05T17:42:02Z", "author_association": "MEMBER", "body": "This test passes, but it's incorrect. We only create one recipe, so its slug has nothing to conflict. But, because we don't pass `old_arguments`, it treats the experiment as brand new, and compares itself to its own slug, which conflicts, and passes the test.\r\n\r\nWe'll probably want to have two tests, one for the newly-created case, and one for the existing-recipe case.", "updated_at": "2017-04-05T19:18:07Z", "html_url": "https://github.com/mozilla/normandy/pull/651#discussion_r109981215", "pull_request_review_id": 31118558, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/109981215"}, "html": {"href": "https://github.com/mozilla/normandy/pull/651#discussion_r109981215"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/651"}}, "commit_id": "4ed398312e1e920bb331944c0d17a5a6bfe0f7cb", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-server/normandy/recipes/tests/test_models.py", "body_html": "<p>This test passes, but it's incorrect. We only create one recipe, so its slug has nothing to conflict. But, because we don't pass <code>old_arguments</code>, it treats the experiment as brand new, and compares itself to its own slug, which conflicts, and passes the test.</p>\n<p>We'll probably want to have two tests, one for the newly-created case, and one for the existing-recipe case.</p>", "original_commit_id": "3156262a8a71d5325f513b187bfe89c032f2490d", "id": 109981215}