{"original_position": 32, "diff_hunk": "@@ -41,3 +43,23 @@ this.FilterExpressions = {\n     return jexl.eval(onelineExpr, context);\n   },\n };\n+\n+/**\n+ * Return an array of the given object's own keys (specifically, its enumerable\n+ * properties).\n+ * @param {Object} obj\n+ * @return {Array[String]}\n+ */\n+function keys(obj) {\n+  return Object.keys(obj);\n+}\n+\n+/**\n+ * Find all the values that are present in both lists.\n+ * @param {Array} listA\n+ * @param {Array} listB\n+ * @return {Array}\n+ */\n+function operatorIntersect(listA, listB) {\n+  return listA.filter(item => listB.includes(item));", "body_text": "Yep, this is a funny thing. It is set to the object that the function is called on, not the object that it is defined on.. So from filter's perspective, it's getting a standalone function and calling it directly; it doesn't know about list2, and so this isn't set unless we bind the function.", "in_reply_to_id": 122844145, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/816", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/123073773", "created_at": "2017-06-20T19:34:11Z", "author_association": "MEMBER", "body": "Yep, `this` is a funny thing. [It is set to the object that the function is called on, _not_ the object that it is defined on.](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method). So from `filter`'s perspective, it's getting a standalone function and calling it directly; it doesn't know about `list2`, and so `this` isn't set unless we bind the function.", "updated_at": "2017-06-23T01:00:42Z", "html_url": "https://github.com/mozilla/normandy/pull/816#discussion_r123073773", "pull_request_review_id": 45243878, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/123073773"}, "html": {"href": "https://github.com/mozilla/normandy/pull/816#discussion_r123073773"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/816"}}, "commit_id": "5d54fbc44c8e8297376646e528ea528e9fc8b3e3", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/lib/FilterExpressions.jsm", "body_html": "<p>Yep, <code>this</code> is a funny thing. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method\" rel=\"nofollow\">It is set to the object that the function is called on, <em>not</em> the object that it is defined on.</a>. So from <code>filter</code>'s perspective, it's getting a standalone function and calling it directly; it doesn't know about <code>list2</code>, and so <code>this</code> isn't set unless we bind the function.</p>", "original_commit_id": "ff84025e704cf3ccc2dd09c21a119a528bc4a791", "id": 123073773}