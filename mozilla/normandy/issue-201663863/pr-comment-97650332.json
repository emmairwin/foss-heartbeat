{"original_position": 158, "diff_hunk": "@@ -207,18 +211,53 @@ describe('controlApp reducer', () => {\n       ...initialState,\n       recipes: {\n         ...initialState.recipes,\n-        list: [{\n-          id: 1,\n-          name: 'Lorem Ipsum',\n+        list: {\n+          1: {\n+            id: 1,\n+            name: 'Lorem Ipsum',\n+            enabled: true,\n+          },\n+          2: {\n+            id: 2,\n+            name: 'Dolor set amet',\n+            enabled: true,\n+          },\n+        },\n+      },\n+    });\n+  });\n+\n+  describe('Recipe Creation and Updating', () => {\n+    it('only has one recipe in the `list` after creating and updating a new recipe', async () => {", "body_text": "This test looks good, and is probably a valuable thing to have, but I don't think it actually tests the ghost recipe problem. I copied this test and added it to the master branch without any of the other changes. After modifying the call to expect to be the below the test passed. (I changed it to expect the old, array based format, instead of the objects).\nexpect(store.recipes.list).toEqual([\n  {\n    id: 3,\n    name: 'Updated recipe name',\n    enabled: true,\n  },\n]);\n\nSince this test didn't fail before this patch, I think we'll have to go with the more complex UI test if we want to verify this.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/432", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/97650332", "created_at": "2017-01-24T21:06:35Z", "author_association": "MEMBER", "body": "This test looks good, and is probably a valuable thing to have, but I don't think it actually tests the ghost recipe problem. I copied this test and added it to the master branch without any of the other changes. After modifying the call to expect to be the below the test passed. (I changed it to expect the old, array based format, instead of the objects).\r\n\r\n```\r\nexpect(store.recipes.list).toEqual([\r\n  {\r\n    id: 3,\r\n    name: 'Updated recipe name',\r\n    enabled: true,\r\n  },\r\n]);\r\n```\r\n\r\nSince this test didn't fail before this patch, I think we'll have to go with the more complex UI test if we want to verify this.", "updated_at": "2017-01-28T20:07:02Z", "html_url": "https://github.com/mozilla/normandy/pull/432#discussion_r97650332", "pull_request_review_id": 18238828, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/97650332"}, "html": {"href": "https://github.com/mozilla/normandy/pull/432#discussion_r97650332"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/432"}}, "commit_id": "84f8452c9cc3bbbef5dff19941e0e5c668ae2471", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control/tests/reducers/test_controlAppReducer.js", "body_html": "<p>This test looks good, and is probably a valuable thing to have, but I don't think it actually tests the ghost recipe problem. I copied this test and added it to the master branch without any of the other changes. After modifying the call to expect to be the below the test passed. (I changed it to expect the old, array based format, instead of the objects).</p>\n<pre><code>expect(store.recipes.list).toEqual([\n  {\n    id: 3,\n    name: 'Updated recipe name',\n    enabled: true,\n  },\n]);\n</code></pre>\n<p>Since this test didn't fail before this patch, I think we'll have to go with the more complex UI test if we want to verify this.</p>", "original_commit_id": "7911a76b50adfd7db761114a5813ae592711920a", "id": 97650332}