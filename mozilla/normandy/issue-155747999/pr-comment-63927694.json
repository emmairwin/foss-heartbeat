{"original_position": 16, "diff_hunk": "@@ -0,0 +1,58 @@\n+import React from 'react'\n+import { reduxForm } from 'redux-form'\n+import { _ } from 'underscore'\n+import HeartbeatForm from './action_forms/HeartbeatForm.jsx'\n+import ConsoleLogForm from './action_forms/ConsoleLogForm.jsx'\n+\n+class ActionForm extends React.Component {\n+  constructor(props) {\n+    super(props)\n+  }\n+\n+  shouldComponentUpdate(nextProps, nextState) {\n+    const currentProps = _.pick(this.props, 'initialValues', 'values', 'fields', 'selectedAction');\n+    const incomingProps = _.pick(nextProps, 'initialValues', 'values', 'fields', 'selectedAction');\n+\n+    return (!_.isEqual(currentProps, incomingProps) || !_.isEqual(this.state, nextState));", "body_text": "Good question. I can take out initialValues and selectedAction, and replace them with arguments_schema. I still need values because the input values are set to values[inputName], and we need a re-render in order to see the changes we make to each field. (If you take values out, you can type in an input field and it will look as if nothing is happening.)\nWithout this, re-rendering occurs an INSANE amount of times in redux-forms. It fires after literally anything you could possibly do with your mouse or keyboard (onBlur, for example) because there are so many things changing in the form state at any given time.  It just seemed excessive and unnecessary. Also, any time the recipeForm re-rendered, the actionForm would go along for a ride as well. It was definitely laggy while I had devtools opened, but that could've been devtools-specific. I can test it out and see how it works if I remove these lifecycle methods.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/147", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/63927694", "created_at": "2016-05-19T18:11:29Z", "author_association": "CONTRIBUTOR", "body": "Good question. I can take out `initialValues` and `selectedAction`, and replace them with `arguments_schema`. I still need `values` because the input values are set to `values[inputName]`, and we need a re-render in order to see the changes we make to each field. (If you take `values` out, you can type in an input field and it will look as if nothing is happening.)\n\nWithout this, re-rendering occurs an INSANE amount of times in redux-forms. It fires after literally anything you could possibly do with your mouse or keyboard (onBlur, for example) because there are so many things changing in the form state at any given time.  It just seemed excessive and unnecessary. Also, any time the recipeForm re-rendered, the actionForm would go along for a ride as well. It was definitely laggy while I had devtools opened, but that could've been devtools-specific. I can test it out and see how it works if I remove these lifecycle methods.\n", "updated_at": "2016-06-11T20:31:01Z", "html_url": "https://github.com/mozilla/normandy/pull/147#discussion_r63927694", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/63927694"}, "html": {"href": "https://github.com/mozilla/normandy/pull/147#discussion_r63927694"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/147"}}, "commit_id": "e9e64618bd413173d122d6fc56dced3ae4d47462", "user": {"following_url": "https://api.github.com/users/brittanystoroz/following{/other_user}", "events_url": "https://api.github.com/users/brittanystoroz/events{/privacy}", "organizations_url": "https://api.github.com/users/brittanystoroz/orgs", "url": "https://api.github.com/users/brittanystoroz", "gists_url": "https://api.github.com/users/brittanystoroz/gists{/gist_id}", "html_url": "https://github.com/brittanystoroz", "subscriptions_url": "https://api.github.com/users/brittanystoroz/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/856935?v=4", "repos_url": "https://api.github.com/users/brittanystoroz/repos", "received_events_url": "https://api.github.com/users/brittanystoroz/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/brittanystoroz/starred{/owner}{/repo}", "site_admin": false, "login": "brittanystoroz", "type": "User", "id": 856935, "followers_url": "https://api.github.com/users/brittanystoroz/followers"}, "position": null, "path": "normandy/control/static/control/js/components/ActionForm.jsx", "body_html": "<p>Good question. I can take out <code>initialValues</code> and <code>selectedAction</code>, and replace them with <code>arguments_schema</code>. I still need <code>values</code> because the input values are set to <code>values[inputName]</code>, and we need a re-render in order to see the changes we make to each field. (If you take <code>values</code> out, you can type in an input field and it will look as if nothing is happening.)</p>\n<p>Without this, re-rendering occurs an INSANE amount of times in redux-forms. It fires after literally anything you could possibly do with your mouse or keyboard (onBlur, for example) because there are so many things changing in the form state at any given time.  It just seemed excessive and unnecessary. Also, any time the recipeForm re-rendered, the actionForm would go along for a ride as well. It was definitely laggy while I had devtools opened, but that could've been devtools-specific. I can test it out and see how it works if I remove these lifecycle methods.</p>", "original_commit_id": "cd3ec6f8db5081cb3be2c4f890fb775368079c40", "id": 63927694}