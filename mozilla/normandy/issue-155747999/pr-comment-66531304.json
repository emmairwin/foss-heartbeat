{"original_position": 64, "diff_hunk": "@@ -1,34 +1,88 @@\n import React from 'react'\n import { connect } from 'react-redux'\n import { Link } from 'react-router'\n+import { destroy, reduxForm, getValues } from 'redux-form'\n+import { _ } from 'underscore'\n+\n+import apiFetch from '../utils/apiFetch.js';\n+import { reduxFormFields } from '../utils/formHelpers.js';\n+\n import ControlActions from '../actions/ControlActions.js'\n-import { reduxForm } from 'redux-form'\n import composeRecipeContainer from './RecipeContainer.jsx'\n+import ActionForm from './ActionForm.jsx'\n \n-\n-class RecipeForm extends React.Component {\n+export class RecipeForm extends React.Component {\n   constructor(props) {\n     super(props);\n     this.submitForm = this.submitForm.bind(this);\n+    this.getAvailableActions = this.getAvailableActions.bind(this);\n+    this.changeAction = this.changeAction.bind(this);\n+\n+    this.state = {\n+      availableActions: [],\n+      selectedAction: null,\n+    };\n   }\n \n-  submitForm(values) {\n+  getAvailableActions(recipeId) {\n+    apiFetch('/api/v1/action/')\n+    .then(availableActions => {\n+      let selectedActionName = (this.props.recipe ? this.props.recipe.action_name : null);\n+\n+      for (let action of availableActions) {\n+        action.fields = reduxFormFields[action.name];\n+\n+        if (selectedActionName === action.name) {\n+          this.setState({\n+            selectedAction: action\n+          });\n+        }\n+      };\n+\n+      this.setState({\n+        availableActions\n+      });\n+    });\n+  }\n+\n+  changeAction(event) {\n+    const { dispatch, fields } = this.props;\n+    let selectedActionName = event.currentTarget.value;\n+\n+    dispatch(destroy('action'));\n+    fields.action_name.onChange(event);\n+    this.setState({\n+      selectedAction: this.state.availableActions.find(action => action.name === selectedActionName)\n+    });\n+  }\n+\n+  submitForm() {\n+    let recipeFormValues = getValues(this.props.formState.recipe);", "body_text": "Lotta this.props in this method, maybe time for some destructuring?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/147", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/66531304", "created_at": "2016-06-09T22:11:53Z", "author_association": "MEMBER", "body": "Lotta `this.props` in this method, maybe time for some destructuring?\n", "updated_at": "2016-06-11T20:31:01Z", "html_url": "https://github.com/mozilla/normandy/pull/147#discussion_r66531304", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/66531304"}, "html": {"href": "https://github.com/mozilla/normandy/pull/147#discussion_r66531304"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/147"}}, "commit_id": "e9e64618bd413173d122d6fc56dced3ae4d47462", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/control/static/control/js/components/RecipeForm.jsx", "body_html": "<p>Lotta <code>this.props</code> in this method, maybe time for some destructuring?</p>", "original_commit_id": "8cd36f25ba356f42e4c2dad73005083099ddc9d4", "id": 66531304}