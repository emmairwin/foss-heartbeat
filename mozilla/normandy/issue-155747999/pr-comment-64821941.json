{"original_position": 61, "diff_hunk": "@@ -0,0 +1,65 @@\n+import $RefParser from 'json-schema-ref-parser';\n+import { _ } from 'underscore';\n+\n+/* Redux forms with complex/nested data structures require\n+ * a specialized fields array to handle objects and arrays.\n+ * Eg: ['surveyId', 'surveys[].title', 'defaults.thankYouMessage']\n+ */\n+function processProperties(orderedPropNames, propsObj) {\n+  let reduxFormFields = [];\n+  let props = {};\n+\n+  orderedPropNames.forEach(key => {\n+    switch (propsObj[key].type) {\n+      case \"object\":\n+        props = propsObj[key].properties;\n+\n+        let objectFields = processProperties(orderPropNames(props), props)\n+          .map(objectField => `${key}.${objectField}`);\n+\n+        reduxFormFields = reduxFormFields.concat(objectFields);\n+        break;\n+\n+      case \"array\":\n+        (propsObj[key].items.allOf).forEach(item => {\n+          props = { ...item.properties, ...props };\n+        });\n+\n+        let arrayFields = processProperties(orderPropNames(props), props)\n+          .map(arrayField => `${key}[].${arrayField}`);\n+\n+        reduxFormFields = reduxFormFields.concat(arrayFields);\n+        break;\n+\n+      default:\n+        reduxFormFields = reduxFormFields.concat([key]);\n+    }\n+  });\n+\n+  return reduxFormFields;\n+};\n+\n+function orderPropNames(propsObj) {\n+  return _.sortBy(Object.keys(propsObj), key => {\n+    return propsObj[key].propertyOrder;\n+  });\n+}\n+\n+export function parseJsonSchema(jsonSchema) {\n+  return $RefParser.dereference(jsonSchema);\n+}\n+\n+export function generateFieldsFromSchema(jsonSchema) {\n+  let props = jsonSchema.properties;\n+  return processProperties(orderPropNames(props), props);\n+}\n+\n+export function formatLabel(labelName) {\n+  return labelName.replace( /([A-Z])/g, \" $1\" );\n+}\n+\n+export {", "body_text": "Aren't these already exported?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/147", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/64821941", "created_at": "2016-05-26T21:13:37Z", "author_association": "MEMBER", "body": "Aren't these already exported?\n", "updated_at": "2016-06-11T20:31:01Z", "html_url": "https://github.com/mozilla/normandy/pull/147#discussion_r64821941", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/64821941"}, "html": {"href": "https://github.com/mozilla/normandy/pull/147#discussion_r64821941"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/147"}}, "commit_id": "e9e64618bd413173d122d6fc56dced3ae4d47462", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/control/static/control/js/utils/formHelpers.js", "body_html": "<p>Aren't these already exported?</p>", "original_commit_id": "511d4cf0fde72a76d19fe4e28dedb46916938aca", "id": 64821941}