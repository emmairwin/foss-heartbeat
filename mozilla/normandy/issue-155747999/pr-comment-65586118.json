{"original_position": 45, "diff_hunk": "@@ -1,34 +1,90 @@\n import React from 'react'\n import { connect } from 'react-redux'\n import { Link } from 'react-router'\n+import { destroy, reduxForm, getValues } from 'redux-form'\n+import { _ } from 'underscore'\n+\n+import apiFetch from '../utils/apiFetch.js';\n+import { reduxFormFields } from '../utils/formHelpers.js';\n+\n import ControlActions from '../actions/ControlActions.js'\n-import { reduxForm } from 'redux-form'\n import composeRecipeContainer from './RecipeContainer.jsx'\n+import ActionForm from './ActionForm.jsx'\n \n-\n-class RecipeForm extends React.Component {\n+export class RecipeForm extends React.Component {\n   constructor(props) {\n     super(props);\n     this.submitForm = this.submitForm.bind(this);\n+    this.getAvailableActions = this.getAvailableActions.bind(this);\n+    this.changeAction = this.changeAction.bind(this);\n+\n+    this.state = {\n+      availableActions: [],\n+      selectedAction: null,\n+    };\n+  }\n+\n+  getAvailableActions(recipeId) {\n+    apiFetch('/api/v1/action/')\n+    .then(availableActions => {\n+      let selectedActionName = (this.props.recipe ? this.props.recipe.action_name : null);\n+\n+      availableActions.map(action => {\n+        action.fields = reduxFormFields[action.name];\n+\n+        if (selectedActionName === action.name) {\n+          this.setState({\n+            selectedAction: action\n+          });\n+        }\n+\n+        return action;\n+      });", "body_text": "Array.map is generally used for making a new list that has be transformed, not for modifying a list in place. In fact, this is sort of throwing away a lot of things, since it is making an entirely new list and then not savings it. This would probably be better as availableActions.forEach, which doesn't build the new list, or as a for (let action in availableActions) { ... }.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/147", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/65586118", "created_at": "2016-06-02T17:48:10Z", "author_association": "MEMBER", "body": "`Array.map` is generally used for making a new list that has be transformed, not for modifying a list in place. In fact, this is sort of throwing away a lot of things, since it is making an entirely new list and then not savings it. This would probably be better as `availableActions.forEach`, which doesn't build the new list, or as a `for (let action in availableActions) { ... }`.\n", "updated_at": "2016-06-11T20:31:01Z", "html_url": "https://github.com/mozilla/normandy/pull/147#discussion_r65586118", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/65586118"}, "html": {"href": "https://github.com/mozilla/normandy/pull/147#discussion_r65586118"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/147"}}, "commit_id": "e9e64618bd413173d122d6fc56dced3ae4d47462", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "normandy/control/static/control/js/components/RecipeForm.jsx", "body_html": "<p><code>Array.map</code> is generally used for making a new list that has be transformed, not for modifying a list in place. In fact, this is sort of throwing away a lot of things, since it is making an entirely new list and then not savings it. This would probably be better as <code>availableActions.forEach</code>, which doesn't build the new list, or as a <code>for (let action in availableActions) { ... }</code>.</p>", "original_commit_id": "21e896aaf3c18e876c510647c53dd43d54e70de6", "id": 65586118}