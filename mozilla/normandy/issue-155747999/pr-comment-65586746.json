{"original_position": 94, "diff_hunk": "@@ -1,34 +1,90 @@\n import React from 'react'\n import { connect } from 'react-redux'\n import { Link } from 'react-router'\n+import { destroy, reduxForm, getValues } from 'redux-form'\n+import { _ } from 'underscore'\n+\n+import apiFetch from '../utils/apiFetch.js';\n+import { reduxFormFields } from '../utils/formHelpers.js';\n+\n import ControlActions from '../actions/ControlActions.js'\n-import { reduxForm } from 'redux-form'\n import composeRecipeContainer from './RecipeContainer.jsx'\n+import ActionForm from './ActionForm.jsx'\n \n-\n-class RecipeForm extends React.Component {\n+export class RecipeForm extends React.Component {\n   constructor(props) {\n     super(props);\n     this.submitForm = this.submitForm.bind(this);\n+    this.getAvailableActions = this.getAvailableActions.bind(this);\n+    this.changeAction = this.changeAction.bind(this);\n+\n+    this.state = {\n+      availableActions: [],\n+      selectedAction: null,\n+    };\n+  }\n+\n+  getAvailableActions(recipeId) {\n+    apiFetch('/api/v1/action/')\n+    .then(availableActions => {\n+      let selectedActionName = (this.props.recipe ? this.props.recipe.action_name : null);\n+\n+      availableActions.map(action => {\n+        action.fields = reduxFormFields[action.name];\n+\n+        if (selectedActionName === action.name) {\n+          this.setState({\n+            selectedAction: action\n+          });\n+        }\n+\n+        return action;\n+      });\n+\n+      this.setState({\n+        availableActions\n+      });\n+    });\n   }\n \n-  submitForm(values) {\n+  changeAction(event) {\n+    const { dispatch, fields } = this.props;\n+    let selectedActionName = event.currentTarget.value;\n+\n+    dispatch(destroy('action'));\n+    fields.action_name.onChange(event);\n+    this.setState({\n+      selectedAction: this.state.availableActions.find(action => action.name === selectedActionName)\n+    });\n+  }\n+\n+  submitForm() {\n+    let recipeFormValues = getValues(this.props.formState.recipe);\n+    let actionFormValues = getValues(this.props.formState.action);\n+    let combinedFormValues = { ...recipeFormValues, arguments: actionFormValues };\n     if (this.props.recipeId) {\n-      this.props.dispatch(ControlActions.makeApiRequest('updateRecipe', { recipe: values, recipeId: this.props.recipeId }));\n+      this.props.dispatch(ControlActions.makeApiRequest('updateRecipe', {\n+        recipe: combinedFormValues,\n+        recipeId: this.props.recipeId\n+      }));\n     } else {\n-      this.props.dispatch(ControlActions.makeApiRequest('addRecipe', values));\n+      this.props.dispatch(ControlActions.makeApiRequest('addRecipe', combinedFormValues));\n     }\n   }\n \n-  render() {\n-    const { fields: { name, filter_expression }, recipeId, handleSubmit, viewingRevision } = this.props;\n+  componentDidMount() {\n+    this.getAvailableActions();\n+  }\n \n+  render() {\n+    const { fields: { name, filter_expression, enabled, action_name }, recipe, recipeId, handleSubmit, viewingRevision } = this.props;\n+    const { availableActions, selectedAction } = this.state;\n     return (\n       <form onSubmit={handleSubmit(this.submitForm)} className=\"crud-form\">\n-        { viewingRevision ?\n-          <p className=\"notification info\">\n+        { viewingRevision &&", "body_text": "That's a neat trick.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/147", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/65586746", "created_at": "2016-06-02T17:51:48Z", "author_association": "MEMBER", "body": "That's a neat trick.\n", "updated_at": "2016-06-11T20:31:01Z", "html_url": "https://github.com/mozilla/normandy/pull/147#discussion_r65586746", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/65586746"}, "html": {"href": "https://github.com/mozilla/normandy/pull/147#discussion_r65586746"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/147"}}, "commit_id": "e9e64618bd413173d122d6fc56dced3ae4d47462", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "normandy/control/static/control/js/components/RecipeForm.jsx", "body_html": "<p>That's a neat trick.</p>", "original_commit_id": "21e896aaf3c18e876c510647c53dd43d54e70de6", "id": 65586746}