{"original_position": 122, "diff_hunk": "@@ -103,14 +100,46 @@ function runRecipe(recipe) {\n }\n \n \n+/**\n+ * Generate a context object for JEXL filter expressions.\n+ * @return {object}\n+ */\n+function filterContext() {\n+    return {\n+        normandy: classifyClient(),\n+        telemetry: {},\n+        events: {},\n+    }\n+}\n+\n+\n+/**\n+ * Match a recipe against a context using its filter expression.\n+ * @param  {Recipe} recipe  Recipe fetched from the server.\n+ * @param  {object} context Context returned by filterContext.\n+ * @promise Resolves with a list containing the recipe and a boolean\n+ *     signifying if the filter passed or failed.\n+ */\n+function matches(recipe, context) {\n+    return jexl.eval(recipe.filter_expression, context)\n+    .then(value => [recipe, !!value]);", "body_text": "If we're going with \"empty matches everything\", you'll need some handling of that here.\nAlso, Jexl doesn't do multiline expression, and we have the habit of pressing Enter while writing filters. This should join the filter_expression into one line.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/114", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/61598760", "created_at": "2016-04-29T15:46:20Z", "author_association": "MEMBER", "body": "If we're going with \"empty matches everything\", you'll need some handling of that here.\n\nAlso, Jexl doesn't do multiline expression, and we have the habit of pressing Enter while writing filters. This should join the `filter_expression` into one line.\n", "updated_at": "2016-05-04T17:21:54Z", "html_url": "https://github.com/mozilla/normandy/pull/114#discussion_r61598760", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/61598760"}, "html": {"href": "https://github.com/mozilla/normandy/pull/114#discussion_r61598760"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/114"}}, "commit_id": "01ca8558645737571380fc84217a433a6e646977", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "normandy/selfrepair/static/js/self_repair_runner.js", "body_html": "<p>If we're going with \"empty matches everything\", you'll need some handling of that here.</p>\n<p>Also, Jexl doesn't do multiline expression, and we have the habit of pressing Enter while writing filters. This should join the <code>filter_expression</code> into one line.</p>", "original_commit_id": "0f8db50877f8711a3349007a2759c712e6eb9e02", "id": 61598760}