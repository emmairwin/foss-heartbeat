{"original_position": 27, "diff_hunk": "@@ -0,0 +1,64 @@\n+\"use strict\";\n+// Cu is defined in xpc_head.js\n+\n+Cu.import(\"resource://gre/modules/Task.jsm\", this);\n+Cu.import(\"resource://shield-recipe-client/lib/Sampling.jsm\", this);\n+\n+add_task(function* testStableSample () {\n+  // Absolute samples\n+  equal(yield Sampling.stableSample(\"test\", 1), true, \"stableSample returns true for 100% sample\");\n+  equal(yield Sampling.stableSample(\"test\", 0), false, \"stableSample returns false for 0% sample\");\n+\n+  // Known samples. The numbers are nonces to make the tests pass\n+  equal(yield Sampling.stableSample(\"test-0\", 0.5), true, \"stableSample returns true for known matching sample\");\n+  equal(yield Sampling.stableSample(\"test-1\", 0.5), false, \"stableSample returns false for known non-matching sample\");\n+});\n+\n+add_task(function* testBucketSample () {\n+  // Absolute samples\n+  equal(yield Sampling.bucketSample(\"test\", 0, 10, 10), true, \"bucketSample returns true for 100% sample\");\n+  equal(yield Sampling.bucketSample(\"test\", 0, 0, 10), false, \"bucketSample returns false for 0% sample\");\n+\n+  // Known samples. The numbers are nonces to make the tests pass\n+  equal(yield Sampling.bucketSample(\"test-0\", 0, 5, 10), true, \"bucketSample returns true for known matching sample\");\n+  equal(yield Sampling.bucketSample(\"test-1\", 0, 5, 10), false, \"bucketSample returns false for known non-matching sample\");\n+});\n+\n+add_test(function testFractionToKey() {", "body_text": "I expected the linter to take offense to a generator function without a yield statement, but I guess that isn't the case.", "in_reply_to_id": 96886078, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/425", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96908782", "created_at": "2017-01-19T17:10:49Z", "author_association": "MEMBER", "body": "I expected the linter to take offense to a generator function without a `yield` statement, but I guess that isn't the case.", "updated_at": "2017-01-19T22:59:14Z", "html_url": "https://github.com/mozilla/normandy/pull/425#discussion_r96908782", "pull_request_review_id": 17507059, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96908782"}, "html": {"href": "https://github.com/mozilla/normandy/pull/425#discussion_r96908782"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/425"}}, "commit_id": "ff4e97b6526c8411c5acc8a9e86ade6ce40ae721", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-client-addon/test/test_Sampling.js", "body_html": "<p>I expected the linter to take offense to a generator function without a <code>yield</code> statement, but I guess that isn't the case.</p>", "original_commit_id": "1786a435ffaf0e919d8c5f928371a3c53e5e2fb2", "id": 96908782}