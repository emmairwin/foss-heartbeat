{"body_text": "So I did a LOT MORE WORK ON THIS.\nWhat does this do?\n\nIn the Lexer catches OCTOTHORPE comments using a REGEX, and DROPS those tokens.  Thus the parser never has to see them, and never has to do anything.\nIf we can write a regex for C-comments, we could do the same thing.  PS, those comments are much harder to regex, and I gave up with trying to get the right level of slash escaping to work :) , but it's easy to extend.\nPARSING the C-Comments is a LOT MORE CONFUSING for me.  I tried writing some grammar above, but I got totally lost in states.js.\nPS, I don't know how you are handling multi-line.  I wrote a test for that in the jexl, and it fell-apart.", "labels": [], "number": 869, "assignee": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-07-13T16:43:57Z", "body_html": "<p>So I did a LOT MORE WORK ON THIS.</p>\n<p>What does this do?</p>\n<ol>\n<li>In the <code>Lexer</code> catches OCTOTHORPE comments using a REGEX, and DROPS those tokens.  Thus the parser never has to see them, and never has to do anything.</li>\n<li>If we can write a regex for C-comments, we could do the same thing.  PS, those comments are much harder to regex, and I gave up with trying to get the right level of slash escaping to work :) , but it's easy to extend.</li>\n<li>PARSING the C-Comments is a LOT MORE CONFUSING for me.  I tried writing some grammar above, but I got totally lost in <code>states.js</code>.</li>\n<li>PS, I don't know how you are handling multi-line.  I wrote a test for that in the jexl, and it fell-apart.</li>\n</ol>", "id": 241312175, "title": "Fix #861 octothrope comments", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/869", "diff_url": "https://github.com/mozilla/normandy/pull/869.diff", "html_url": "https://github.com/mozilla/normandy/pull/869", "patch_url": "https://github.com/mozilla/normandy/pull/869.patch"}, "comments": 11, "state": "closed", "body": "So I did a LOT MORE WORK ON THIS.\r\n\r\nWhat does this do?\r\n\r\n1.  In the `Lexer` catches OCTOTHORPE comments using a REGEX, and DROPS those tokens.  Thus the parser never has to see them, and never has to do anything.\r\n2.  If we can write a regex for C-comments, we could do the same thing.  PS, those comments are much harder to regex, and I gave up with trying to get the right level of slash escaping to work :) , but it's easy to extend.\r\n3.  PARSING the C-Comments is a LOT MORE CONFUSING for me.  I tried writing some grammar above, but I got totally lost in `states.js`.\r\n4.  PS, I don't know how you are handling multi-line.  I wrote a test for that in the jexl, and it fell-apart. ", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/869/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/869/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/869/comments", "html_url": "https://github.com/mozilla/normandy/pull/869", "updated_at": "2017-07-13T16:43:57Z", "user": {"following_url": "https://api.github.com/users/gregglind/following{/other_user}", "events_url": "https://api.github.com/users/gregglind/events{/privacy}", "organizations_url": "https://api.github.com/users/gregglind/orgs", "url": "https://api.github.com/users/gregglind", "gists_url": "https://api.github.com/users/gregglind/gists{/gist_id}", "html_url": "https://github.com/gregglind", "subscriptions_url": "https://api.github.com/users/gregglind/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/163983?v=4", "repos_url": "https://api.github.com/users/gregglind/repos", "received_events_url": "https://api.github.com/users/gregglind/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gregglind/starred{/owner}{/repo}", "site_admin": false, "login": "gregglind", "type": "User", "id": 163983, "followers_url": "https://api.github.com/users/gregglind/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/869", "created_at": "2017-07-07T16:16:20Z", "assignees": [{"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}]}