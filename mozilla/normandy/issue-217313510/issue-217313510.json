{"body_text": "We should handle invalid hostnames more gracefully than this. I also don't see how this particular header isn't valid.\nhttps://sentry.prod.mozaws.net/operations/normandy-prod/issues/388269/\nDisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.\n  File \"django/core/handlers/exception.py\", line 98, in get_exception_response\n    response = callback(request, **dict(param_dict, exception=exception))\n  File \"django/utils/decorators.py\", line 145, in _wrapped_view\n    result = middleware.process_view(request, view_func, args, kwargs)\n  File \"django/middleware/csrf.py\", line 233, in process_view\n    good_referer = request.get_host()\n  File \"django/http/request.py\", line 113, in get_host\n    raise DisallowedHost(msg)\n\nDisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.", "labels": [{"url": "https://api.github.com/repos/mozilla/normandy/labels/P5", "color": "ffa32c", "default": false, "id": 821572175, "name": "P5"}, {"url": "https://api.github.com/repos/mozilla/normandy/labels/bug", "color": "b60205", "default": true, "id": 482996638, "name": "bug"}, {"url": "https://api.github.com/repos/mozilla/normandy/labels/traceback", "color": "5319e7", "default": false, "id": 844334767, "name": "traceback"}], "number": 637, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": null, "body_html": "<p>We should handle invalid hostnames more gracefully than this. I also don't see how this particular header isn't valid.</p>\n<p><a href=\"https://sentry.prod.mozaws.net/operations/normandy-prod/issues/388269/\" rel=\"nofollow\">https://sentry.prod.mozaws.net/operations/normandy-prod/issues/388269/</a></p>\n<pre><code>DisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.\n  File \"django/core/handlers/exception.py\", line 98, in get_exception_response\n    response = callback(request, **dict(param_dict, exception=exception))\n  File \"django/utils/decorators.py\", line 145, in _wrapped_view\n    result = middleware.process_view(request, view_func, args, kwargs)\n  File \"django/middleware/csrf.py\", line 233, in process_view\n    good_referer = request.get_host()\n  File \"django/http/request.py\", line 113, in get_host\n    raise DisallowedHost(msg)\n\nDisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.\n</code></pre>", "id": 217313510, "title": "DisallowedHost: Invalid HTTP_HOST header:  The domain name provided is not valid according to RFC 1034/1035", "comments": 0, "state": "open", "body": "We should handle invalid hostnames more gracefully than this. I also don't see how this particular header isn't valid.\n\nhttps://sentry.prod.mozaws.net/operations/normandy-prod/issues/388269/\n\n```\nDisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.\n  File \"django/core/handlers/exception.py\", line 98, in get_exception_response\n    response = callback(request, **dict(param_dict, exception=exception))\n  File \"django/utils/decorators.py\", line 145, in _wrapped_view\n    result = middleware.process_view(request, view_func, args, kwargs)\n  File \"django/middleware/csrf.py\", line 233, in process_view\n    good_referer = request.get_host()\n  File \"django/http/request.py\", line 113, in get_host\n    raise DisallowedHost(msg)\n\nDisallowedHost: Invalid HTTP_HOST header: 'sabretooth_f1.clsa-elcv.ca'. The domain name provided is not valid according to RFC 1034/1035.\n```", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/637/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/637/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/637/comments", "html_url": "https://github.com/mozilla/normandy/issues/637", "updated_at": "2018-02-21T21:45:50Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/637", "created_at": "2017-03-27T17:10:33Z", "assignees": []}