{"body_text": "https://bugzilla.mozilla.org/show_bug.cgi?id=1321409\nI've hunted down the origin of the ERROR RUNNING RECIPE: TYPEERROR: N IS UNDEFINED message, but there still exists a deeper issue.\nThe initial fix is to correct how the param destructuring/default assignment works in LocalStorage#constructor -\n  constructor(prefix, opts) {\n    // build an options object, even if\n    // no options have been passed in\n    const options = { ...opts };\n\n    this.prefix = prefix;\n    this.skipDurability = options.skipDurability || false;\n  }\n\nThe specific error is that _ref is undefined, which is from babel's way of handling destructuring.\nBasically, someFn({ woo }) is converted down into someFn(_ref){ const woo = _ref.woo; .... - which means if no object is passed into the function, an error is thrown (since _ref doesnt exist to extract woo from)\nBUT with that fixed, I'm now running into a deeper issue which seems to dive into non-JS code:\n\nThe source map points to the .catch's console.log, and the only place where normandy.saveHeartbeatFlow exists is stubbed out in some tests. Not really sure where to go from here - @mythmon any thoughts?", "labels": [{"url": "https://api.github.com/repos/mozilla/normandy/labels/bug", "color": "b60205", "default": true, "id": 482996638, "name": "bug"}], "number": 375, "assignee": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2016-12-01T16:55:24Z", "body_html": "<p><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1321409\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1321409</a></p>\n<p>I've hunted down the origin of the <code>ERROR RUNNING RECIPE: TYPEERROR: N IS UNDEFINED</code> message, but there still exists a deeper issue.</p>\n<p>The initial fix is to correct how the param destructuring/default assignment works in <code>LocalStorage#constructor</code> -</p>\n<pre><code>  constructor(prefix, opts) {\n    // build an options object, even if\n    // no options have been passed in\n    const options = { ...opts };\n\n    this.prefix = prefix;\n    this.skipDurability = options.skipDurability || false;\n  }\n</code></pre>\n<p>The specific error is that <code>_ref</code> is undefined, which is from babel's way of handling destructuring.<br>\nBasically, <code>someFn({ woo })</code> is converted down into <code>someFn(_ref){ const woo = _ref.woo; ....</code> - which means if no object is passed into the function, an error is thrown (since <code>_ref</code> doesnt exist to extract <code>woo</code> from)</p>\n<p>BUT with that fixed, I'm now running into a deeper issue which seems to dive into non-JS code:</p>\n<p><a target=\"_blank\" href=\"https://cloud.githubusercontent.com/assets/2767162/20800075/6a7ccde6-b7a1-11e6-8753-2c1aba3540ef.png\"><img src=\"https://cloud.githubusercontent.com/assets/2767162/20800075/6a7ccde6-b7a1-11e6-8753-2c1aba3540ef.png\" alt=\"screen shot 2016-12-01 at 8 40 30 am\" style=\"max-width:100%;\"></a></p>\n<p>The source map points to the <code>.catch</code>'s console.log, and the <em>only</em> place where <code>normandy.saveHeartbeatFlow</code> exists is stubbed out in some tests. Not really sure where to go from here - <a class=\"user-mention\" href=\"https://github.com/mythmon\">@mythmon</a> any thoughts?</p>", "id": 192880767, "title": "v26 tests failing", "comments": 4, "state": "closed", "body": "https://bugzilla.mozilla.org/show_bug.cgi?id=1321409\r\n\r\nI've hunted down the origin of the `ERROR RUNNING RECIPE: TYPEERROR: N IS UNDEFINED` message, but there still exists a deeper issue.\r\n\r\nThe initial fix is to correct how the param destructuring/default assignment works in `LocalStorage#constructor` - \r\n\r\n```\r\n  constructor(prefix, opts) {\r\n    // build an options object, even if\r\n    // no options have been passed in\r\n    const options = { ...opts };\r\n\r\n    this.prefix = prefix;\r\n    this.skipDurability = options.skipDurability || false;\r\n  }\r\n```\r\n\r\nThe specific error is that `_ref` is undefined, which is from babel's way of handling destructuring.\r\nBasically, `someFn({ woo })` is converted down into `someFn(_ref){ const woo = _ref.woo; ....` - which means if no object is passed into the function, an error is thrown (since `_ref` doesnt exist to extract `woo` from)\r\n\r\nBUT with that fixed, I'm now running into a deeper issue which seems to dive into non-JS code:\r\n\r\n![screen shot 2016-12-01 at 8 40 30 am](https://cloud.githubusercontent.com/assets/2767162/20800075/6a7ccde6-b7a1-11e6-8753-2c1aba3540ef.png)\r\n\r\nThe source map points to the `.catch`'s console.log, and the _only_ place where `normandy.saveHeartbeatFlow` exists is stubbed out in some tests. Not really sure where to go from here - @mythmon any thoughts?", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/375/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/375/labels{/name}", "author_association": "CONTRIBUTOR", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/375/comments", "html_url": "https://github.com/mozilla/normandy/issues/375", "updated_at": "2017-01-23T21:38:13Z", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/375", "created_at": "2016-12-01T15:40:09Z", "assignees": [{"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}]}