{"body": "I checked, and there's only one way I can think of to do this without updating the system add-on: We'd have to add a new \"marker\" recipe that stores data in a known storage namespace, and then update the heartbeat recipe to accept an argument with the name of the marker and have it check that before executing the heartbeat.\r\n\r\nI don't think that's a reasonable design unless this is an emergency. \r\n\r\nMy suggestion for a design here is to add markers to the telemetry environment that SHIELD can set manually, similar to the experiment markers, but that are persistent. Then we add an action that can set these markers. If they're in Telemetry, then they're filterable by recipes, including Heartbeat. This would also let us, via telemetry, measure the impact of a filter expression by sending out a marker recipe and measuring the number of unique clients who match in telemetry. \r\n\r\n@georgf At first glance, what do you think of that idea? Is maintaining persistent environment markers (maybe with an expiry time?) a non-starter?", "body_text": "I checked, and there's only one way I can think of to do this without updating the system add-on: We'd have to add a new \"marker\" recipe that stores data in a known storage namespace, and then update the heartbeat recipe to accept an argument with the name of the marker and have it check that before executing the heartbeat.\nI don't think that's a reasonable design unless this is an emergency.\nMy suggestion for a design here is to add markers to the telemetry environment that SHIELD can set manually, similar to the experiment markers, but that are persistent. Then we add an action that can set these markers. If they're in Telemetry, then they're filterable by recipes, including Heartbeat. This would also let us, via telemetry, measure the impact of a filter expression by sending out a marker recipe and measuring the number of unique clients who match in telemetry.\n@georgf At first glance, what do you think of that idea? Is maintaining persistent environment markers (maybe with an expiry time?) a non-starter?", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/304147220", "created_at": "2017-05-25T23:01:53Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/784#issuecomment-304147220", "updated_at": "2017-05-25T23:01:53Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<p>I checked, and there's only one way I can think of to do this without updating the system add-on: We'd have to add a new \"marker\" recipe that stores data in a known storage namespace, and then update the heartbeat recipe to accept an argument with the name of the marker and have it check that before executing the heartbeat.</p>\n<p>I don't think that's a reasonable design unless this is an emergency.</p>\n<p>My suggestion for a design here is to add markers to the telemetry environment that SHIELD can set manually, similar to the experiment markers, but that are persistent. Then we add an action that can set these markers. If they're in Telemetry, then they're filterable by recipes, including Heartbeat. This would also let us, via telemetry, measure the impact of a filter expression by sending out a marker recipe and measuring the number of unique clients who match in telemetry.</p>\n<p><a class=\"user-mention\" href=\"https://github.com/georgf\">@georgf</a> At first glance, what do you think of that idea? Is maintaining persistent environment markers (maybe with an expiry time?) a non-starter?</p>", "id": 304147220, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/784"}