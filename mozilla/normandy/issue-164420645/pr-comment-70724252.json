{"original_position": 56, "diff_hunk": "@@ -46,3 +54,68 @@ def deterministic_sample(rate, inputs):\n     assert len(input_hash) == 64\n \n     return input_hash < sample_point\n+\n+\n+class Autographer:\n+    \"\"\"\n+    Interacts with an Autograph service.\n+\n+    If Autograph signing is not configured using `settings.AUTOGRAPH`,\n+    raises `ImproperlyConfigured`. If the Autograph server can't be reached\n+    or returns an HTTP error, an error will be thrown by `requests`.\n+    \"\"\"\n+\n+    def __init__(self):\n+        self.check_config()\n+        self._session = None\n+\n+    @property\n+    def session(self):\n+        if self._session is None:\n+            self._session = requests.Session()\n+            self._session.auth = HawkAuth(\n+                id=str(settings.AUTOGRAPH_HAWK_ID),\n+                key=str(settings.AUTOGRAPH_HAWK_SECRET_KEY))\n+        return self._session\n+\n+    def check_config(self):\n+        required_keys = ['URL', 'HAWK_ID', 'HAWK_SECRET_KEY']\n+        for key in required_keys:\n+            if getattr(settings, 'AUTOGRAPH_' + key) is None:\n+                msg = 'set settings.AUTOGRAPH_{} to use action signatures'.format(key)\n+                raise ImproperlyConfigured(msg)\n+\n+    def sign_data(self, content_list):\n+        \"\"\"\n+        Fetches Signatures objects from Autograph for each item in `content_list`.\n+\n+        The items in `content_list` must be bytes objects.\n+        \"\"\"\n+        ts = timezone.now()\n+        url = '{}sign/data'.format(settings.AUTOGRAPH_URL)", "body_text": "We've talked about this before. urljoin makes the situation worse, not better.\n>>> from urllib.parse import urljoin\n>>> urljoin('https://example.com/api/1/', 'sign/data')\n'https://example.com/api/1/sign/data' # good...\n>>> urljoin('https://example.com/api/1/', '/sign/data')\n'https://example.com/sign/data' # bad, only kept hostname\n>>> urljoin('https://example.com/api/1', 'sign/data')\n'https://example.com/api/sign/data' # bad, stripped off \"1\"\n>>> urljoin('https://example.com/api/1', '/sign/data')\n'https://example.com/sign/data' # bad, only kept hostname\nWe should probably write a helper util that does this.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/190", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/70724252", "created_at": "2016-07-13T23:06:53Z", "author_association": "MEMBER", "body": "We've talked about this before. `urljoin` makes the situation worse, not better.\n\n``` python\n>>> from urllib.parse import urljoin\n>>> urljoin('https://example.com/api/1/', 'sign/data')\n'https://example.com/api/1/sign/data' # good...\n>>> urljoin('https://example.com/api/1/', '/sign/data')\n'https://example.com/sign/data' # bad, only kept hostname\n>>> urljoin('https://example.com/api/1', 'sign/data')\n'https://example.com/api/sign/data' # bad, stripped off \"1\"\n>>> urljoin('https://example.com/api/1', '/sign/data')\n'https://example.com/sign/data' # bad, only kept hostname\n```\n\nWe should probably write a helper util that does this.\n", "updated_at": "2016-07-14T23:48:16Z", "html_url": "https://github.com/mozilla/normandy/pull/190#discussion_r70724252", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/70724252"}, "html": {"href": "https://github.com/mozilla/normandy/pull/190#discussion_r70724252"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/190"}}, "commit_id": "7b115db15fb506011fb8d4c4a92d2d312f08e2c4", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": 55, "path": "normandy/recipes/utils.py", "body_html": "<p>We've talked about this before. <code>urljoin</code> makes the situation worse, not better.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">from</span> urllib.parse <span class=\"pl-k\">import</span> urljoin\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> urljoin(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/1/<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sign/data<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/1/sign/data<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> good...</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> urljoin(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/1/<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/sign/data<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/sign/data<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> bad, only kept hostname</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> urljoin(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sign/data<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/sign/data<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> bad, stripped off \"1\"</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> urljoin(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/api/1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/sign/data<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://example.com/sign/data<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> bad, only kept hostname</span></pre></div>\n<p>We should probably write a helper util that does this.</p>", "original_commit_id": "a7fd81ca423d44a363b1f1384a70de63044491f2", "id": 70724252}