{"body": "In writing this patch, I was originally going to do what would make sense and simply change [the default pref](https://github.com/mozilla/normandy/blob/master/recipe-client-addon/lib/ShieldRecipeClient.jsm#L35). In doing so, I noticed that the [way we set default prefs](https://github.com/mozilla/normandy/blob/master/recipe-client-addon/lib/ShieldRecipeClient.jsm#L96-L104) is actually quite bad and doesn't allow us to update the pref later. So if it were to be fixed that way, any user that has already installed this add-on would not receive the update.\r\n\r\nThis is obviously not good, and I have a plan to fix it<sup>1</sup>. In the meantime however, we opted to make the code more robust to this sort of common variance in URLs.\r\n\r\nAs for query strings: I'm ok guaranteeing that the API base URL will not validly contain query strings. The server wouldn't even know what to do with that. If it *does* contain query strings (which the server doesn't expect or  understand), the client will happily add a `/` to the end and get 301ed to the correct with-slash url. It should work even in the case of users fiddling with preferences.\r\n\r\n---\r\n\r\n1. The plan to fix our preference system is two fold. First, update the code to set the default prefs for the add-on on the default branch, while still safely supporting older users. Second, use a Normandy preference rollout to move all the users with the bad value to have the good value. This is something we are actively developing now. Having a use case at hand for our team will make it easier to validate the feature after we've developed it. After all that, we can fix the code to expect the prefs to work correctly.", "body_text": "In writing this patch, I was originally going to do what would make sense and simply change the default pref. In doing so, I noticed that the way we set default prefs is actually quite bad and doesn't allow us to update the pref later. So if it were to be fixed that way, any user that has already installed this add-on would not receive the update.\nThis is obviously not good, and I have a plan to fix it1. In the meantime however, we opted to make the code more robust to this sort of common variance in URLs.\nAs for query strings: I'm ok guaranteeing that the API base URL will not validly contain query strings. The server wouldn't even know what to do with that. If it does contain query strings (which the server doesn't expect or  understand), the client will happily add a / to the end and get 301ed to the correct with-slash url. It should work even in the case of users fiddling with preferences.\n\n\nThe plan to fix our preference system is two fold. First, update the code to set the default prefs for the add-on on the default branch, while still safely supporting older users. Second, use a Normandy preference rollout to move all the users with the bad value to have the good value. This is something we are actively developing now. Having a use case at hand for our team will make it easier to validate the feature after we've developed it. After all that, we can fix the code to expect the prefs to work correctly.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/298443586", "created_at": "2017-05-01T21:56:36Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/723#issuecomment-298443586", "updated_at": "2017-05-01T21:56:36Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<p>In writing this patch, I was originally going to do what would make sense and simply change <a href=\"https://github.com/mozilla/normandy/blob/master/recipe-client-addon/lib/ShieldRecipeClient.jsm#L35\">the default pref</a>. In doing so, I noticed that the <a href=\"https://github.com/mozilla/normandy/blob/master/recipe-client-addon/lib/ShieldRecipeClient.jsm#L96-L104\">way we set default prefs</a> is actually quite bad and doesn't allow us to update the pref later. So if it were to be fixed that way, any user that has already installed this add-on would not receive the update.</p>\n<p>This is obviously not good, and I have a plan to fix it<sup>1</sup>. In the meantime however, we opted to make the code more robust to this sort of common variance in URLs.</p>\n<p>As for query strings: I'm ok guaranteeing that the API base URL will not validly contain query strings. The server wouldn't even know what to do with that. If it <em>does</em> contain query strings (which the server doesn't expect or  understand), the client will happily add a <code>/</code> to the end and get 301ed to the correct with-slash url. It should work even in the case of users fiddling with preferences.</p>\n<hr>\n<ol>\n<li>The plan to fix our preference system is two fold. First, update the code to set the default prefs for the add-on on the default branch, while still safely supporting older users. Second, use a Normandy preference rollout to move all the users with the bad value to have the good value. This is something we are actively developing now. Having a use case at hand for our team will make it easier to validate the feature after we've developed it. After all that, we can fix the code to expect the prefs to work correctly.</li>\n</ol>", "id": 298443586, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/723"}