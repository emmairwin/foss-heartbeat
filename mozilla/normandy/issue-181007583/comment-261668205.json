{"body": "This is really nice, and I agree with the publishing flows that you described.\n\nCan you expand on the \"Recipe Listing\" page?  What revision state info do we publish to the list?  Right now it looks like \"Test Log\" is shown twice with different statuses, but that's not enough for me to understand the logic.\n\n# \n\nI think I'd want a list that shows order of important revision states for a given recipe.  Perhaps \"Status\" should show the order of the most recent of each status type with the following constraints:\n- \"Draft\" only appears if it's the most recent status, or else we leave it out since it's likely abandoned\n- \"Review\" can only occur more recently than \"Published\", or else we leave it out since it's likely abandoned\n\nThis makes our potential Statuses the following list:\n- \"Draft\" - a draft initialized, there is no published version or review version\n- \"Draft\" < \"Published\" - a draft initialized after the last publish\n- \"Draft\" < \"Review\" - a draft initialized after the last review, there is no published version\n- \"Draft\" < \"Review\" < \"Published\" - a draft initialized after the last review which occurred after the last publish\n- \"Review\" - a review initialized, there is no published version\n- \"Review\" < \"Published\" - a review initialized after the last publish\n- \"Published\" - a publish initialization was the most recent action\n\nFeel free to disregard, maybe you have a better mental model for how you want to arrange multi-state recipes.\n\n# \n\nMinor suggestion: I prefer single word states, \"Review\" > \"In Review\"\n", "body_text": "This is really nice, and I agree with the publishing flows that you described.\nCan you expand on the \"Recipe Listing\" page?  What revision state info do we publish to the list?  Right now it looks like \"Test Log\" is shown twice with different statuses, but that's not enough for me to understand the logic.\n\nI think I'd want a list that shows order of important revision states for a given recipe.  Perhaps \"Status\" should show the order of the most recent of each status type with the following constraints:\n\n\"Draft\" only appears if it's the most recent status, or else we leave it out since it's likely abandoned\n\"Review\" can only occur more recently than \"Published\", or else we leave it out since it's likely abandoned\n\nThis makes our potential Statuses the following list:\n\n\"Draft\" - a draft initialized, there is no published version or review version\n\"Draft\" < \"Published\" - a draft initialized after the last publish\n\"Draft\" < \"Review\" - a draft initialized after the last review, there is no published version\n\"Draft\" < \"Review\" < \"Published\" - a draft initialized after the last review which occurred after the last publish\n\"Review\" - a review initialized, there is no published version\n\"Review\" < \"Published\" - a review initialized after the last publish\n\"Published\" - a publish initialization was the most recent action\n\nFeel free to disregard, maybe you have a better mental model for how you want to arrange multi-state recipes.\n\nMinor suggestion: I prefer single word states, \"Review\" > \"In Review\"", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/261668205", "created_at": "2016-11-18T23:23:26Z", "author_association": "NONE", "html_url": "https://github.com/mozilla/normandy/issues/287#issuecomment-261668205", "updated_at": "2016-11-18T23:25:23Z", "user": {"following_url": "https://api.github.com/users/rayborn/following{/other_user}", "events_url": "https://api.github.com/users/rayborn/events{/privacy}", "organizations_url": "https://api.github.com/users/rayborn/orgs", "url": "https://api.github.com/users/rayborn", "gists_url": "https://api.github.com/users/rayborn/gists{/gist_id}", "html_url": "https://github.com/rayborn", "subscriptions_url": "https://api.github.com/users/rayborn/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/6495848?v=4", "repos_url": "https://api.github.com/users/rayborn/repos", "received_events_url": "https://api.github.com/users/rayborn/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rayborn/starred{/owner}{/repo}", "site_admin": false, "login": "rayborn", "type": "User", "id": 6495848, "followers_url": "https://api.github.com/users/rayborn/followers"}, "body_html": "<p>This is really nice, and I agree with the publishing flows that you described.</p>\n<p>Can you expand on the \"Recipe Listing\" page?  What revision state info do we publish to the list?  Right now it looks like \"Test Log\" is shown twice with different statuses, but that's not enough for me to understand the logic.</p>\n<h1></h1>\n<p>I think I'd want a list that shows order of important revision states for a given recipe.  Perhaps \"Status\" should show the order of the most recent of each status type with the following constraints:</p>\n<ul>\n<li>\"Draft\" only appears if it's the most recent status, or else we leave it out since it's likely abandoned</li>\n<li>\"Review\" can only occur more recently than \"Published\", or else we leave it out since it's likely abandoned</li>\n</ul>\n<p>This makes our potential Statuses the following list:</p>\n<ul>\n<li>\"Draft\" - a draft initialized, there is no published version or review version</li>\n<li>\"Draft\" &lt; \"Published\" - a draft initialized after the last publish</li>\n<li>\"Draft\" &lt; \"Review\" - a draft initialized after the last review, there is no published version</li>\n<li>\"Draft\" &lt; \"Review\" &lt; \"Published\" - a draft initialized after the last review which occurred after the last publish</li>\n<li>\"Review\" - a review initialized, there is no published version</li>\n<li>\"Review\" &lt; \"Published\" - a review initialized after the last publish</li>\n<li>\"Published\" - a publish initialization was the most recent action</li>\n</ul>\n<p>Feel free to disregard, maybe you have a better mental model for how you want to arrange multi-state recipes.</p>\n<h1></h1>\n<p>Minor suggestion: I prefer single word states, \"Review\" &gt; \"In Review\"</p>", "id": 261668205, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/287"}