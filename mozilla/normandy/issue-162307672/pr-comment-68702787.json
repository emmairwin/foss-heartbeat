{"original_position": 61, "diff_hunk": "@@ -30,32 +30,64 @@ class RecipeHistory extends React.Component {\n     const { revisionLog } = this.state;\n     const { recipeId, recipe, dispatch } = this.props;\n     return (\n-      <div className=\"fluid-8\">\n+      <div className=\"fluid-8 recipe-history\">\n         <h3>Viewing revision log for: <b>{recipe ? recipe.name : ''}</b></h3>\n         <ul>\n-            {\n-              this.state.revisionLog.map((revision, index) =>\n-                <li key={revision.date_created} onClick={(e) => {\n-                  let revisionInfo = {};\n-                  if (index !== 0) {\n-                    revisionInfo = {\n-                      query: { revisionId: `${revision.id}` },\n-                      state: { selectedRevision: revision.recipe }\n-                    }\n-                  }\n-                  dispatch(push({\n-                    pathname: `/control/recipe/${recipeId}/`,\n-                    ...revisionInfo\n-                  }))\n-                }}><p className=\"revision-number\">#{revision.recipe.revision_id} </p>\n-                  <p><span className=\"label\">Created On:</span>{ moment(revision.date_created).format('MMM Do YYYY - h:mmA') }</p>\n-                </li>\n-              )\n-            }\n+            {this.state.revisionLog.map((revision, index) =>\n+              <HistoryItem\n+                key={revision.id}\n+                revision={revision}\n+                recipe={recipe}\n+                dispatch={dispatch}\n+              />\n+            )}\n         </ul>\n       </div>\n     )\n   }\n }\n \n+class HistoryItem extends React.Component {\n+  render() {\n+    const { revision, recipe } = this.props;\n+    const isCurrent = revision.recipe.revision_id === recipe.revision_id;", "body_text": "I added some PropTypes to this but it didn't really track down the issue. But it was good to add. I have some open questions about proptypes I'll be asking later.\nBuuuuuuuuut I suspect I know the problem. @rehandalal , have you updated your Python requirements lately? If you haven't, you probably don't have the latest reversion, which changed the property that the version instance is stored in for revisions from revision.object_version to revision._object_version.\nI'm willing to bet that the serializer silently fails when it can't find the source for a property, and thus the recipe field from the RecipeVersionSerializer is empty.\nWhich sucks. It shouldn't be silently failing to serialize that. If that's the case it's a bug.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/179", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/68702787", "created_at": "2016-06-28T06:21:09Z", "author_association": "MEMBER", "body": "I added some PropTypes to this but it didn't really track down the issue. But it was good to add. I have some open questions about proptypes I'll be asking later.\n\nBuuuuuuuuut I suspect I know the problem. @rehandalal , have you updated your Python requirements lately? If you haven't, you probably don't have the latest reversion, which changed the property that the version instance is stored in for revisions from `revision.object_version` to `revision._object_version`.\n\nI'm willing to bet that the serializer silently fails when it can't find the source for a property, and thus the recipe field from the `RecipeVersionSerializer` is empty.\n\nWhich sucks. It shouldn't be silently failing to serialize that. If that's the case it's a bug.\n", "updated_at": "2016-06-28T06:21:09Z", "html_url": "https://github.com/mozilla/normandy/pull/179#discussion_r68702787", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/68702787"}, "html": {"href": "https://github.com/mozilla/normandy/pull/179#discussion_r68702787"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/179"}}, "commit_id": "71546cb13a9b22185d9f9692f55316e0ee517d53", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/control/static/control/js/components/RecipeHistory.jsx", "body_html": "<p>I added some PropTypes to this but it didn't really track down the issue. But it was good to add. I have some open questions about proptypes I'll be asking later.</p>\n<p>Buuuuuuuuut I suspect I know the problem. <a class=\"user-mention\" href=\"https://github.com/rehandalal\">@rehandalal</a> , have you updated your Python requirements lately? If you haven't, you probably don't have the latest reversion, which changed the property that the version instance is stored in for revisions from <code>revision.object_version</code> to <code>revision._object_version</code>.</p>\n<p>I'm willing to bet that the serializer silently fails when it can't find the source for a property, and thus the recipe field from the <code>RecipeVersionSerializer</code> is empty.</p>\n<p>Which sucks. It shouldn't be silently failing to serialize that. If that's the case it's a bug.</p>", "original_commit_id": "1d3df7b5c55bbc204a38204aa39072817a019cd3", "id": 68702787}