{"original_position": 21, "diff_hunk": "@@ -0,0 +1,105 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\"use strict\";\n+\n+const {utils: Cu, interfaces: Ci, manager: Cm, results: Cr} = Components;\n+Cm.QueryInterface(Ci.nsIComponentRegistrar);\n+\n+Cu.import(\"resource://gre/modules/Services.jsm\");\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+\n+this.EXPORTED_SYMBOLS = [\"AboutStudiesProtocol\"];\n+\n+/**\n+ * Component definition for the about:studies protocol handler.\n+ * Registers a component with the browser that establishes an `about:studies`\n+ * protocol handler. Navigating to `about:studies` displays the\n+ * `AboutStudies.xml` file.\n+ */\n+function StudiesProtocolHandler() {}\n+StudiesProtocolHandler.prototype = {", "body_text": "I wanted to keep the uri, classID, etc tied to the ProtocolHandler class, so I just defined everything in one go. Using es6 classes we have to do something like:\nclass Whatever { ... }\nWhatever.prototype = { thing: 'woo' }\n\nAlternatively, we could define the uri etc in the class constructor, however I suspect the Cm.registerFactory call looks up the handler info from the prototype. I will investigate and see what we can do.", "in_reply_to_id": 121004910, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/801", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/121471735", "created_at": "2017-06-12T17:13:34Z", "author_association": "CONTRIBUTOR", "body": "I wanted to keep the `uri`, `classID`, etc tied to the ProtocolHandler class, so I just defined everything in one go. Using es6 classes we have to do something like:\r\n```\r\nclass Whatever { ... }\r\nWhatever.prototype = { thing: 'woo' }\r\n```\r\n\r\nAlternatively, we could define the `uri` etc in the class constructor, however I suspect the `Cm.registerFactory` call looks up the handler info from the prototype. I will investigate and see what we can do.", "updated_at": "2017-06-13T20:40:24Z", "html_url": "https://github.com/mozilla/normandy/pull/801#discussion_r121471735", "pull_request_review_id": 43502928, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/121471735"}, "html": {"href": "https://github.com/mozilla/normandy/pull/801#discussion_r121471735"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/801"}}, "commit_id": "7da24d0c71e0f963a6abb0cf65931453775f0801", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-client-addon/lib/AboutStudiesProtocol.jsm", "body_html": "<p>I wanted to keep the <code>uri</code>, <code>classID</code>, etc tied to the ProtocolHandler class, so I just defined everything in one go. Using es6 classes we have to do something like:</p>\n<pre><code>class Whatever { ... }\nWhatever.prototype = { thing: 'woo' }\n</code></pre>\n<p>Alternatively, we could define the <code>uri</code> etc in the class constructor, however I suspect the <code>Cm.registerFactory</code> call looks up the handler info from the prototype. I will investigate and see what we can do.</p>", "original_commit_id": "bc167ffe8d5ebe7fd383d7ed8b8f48853c9a8fd9", "id": 121471735}