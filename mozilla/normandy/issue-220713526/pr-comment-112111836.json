{"original_position": 83, "diff_hunk": "@@ -165,6 +172,24 @@ add_task(withMockExperiments(withMockPreferences(async function (experiments, mo\n   startObserver.restore();\n })));\n \n+// start should detect if a new preference value type matches the previous value type\n+add_task(withMockPreferences(async function (mockPreferences) {\n+  mockPreferences.set(\"fake.type_preference\", \"oldvalue\");\n+\n+  await Assert.rejects(\n+    PreferenceExperiments.start({\n+      name: \"test\",\n+      branch: \"branch\",\n+      preferenceName: \"fake.type_preference\",\n+      preferenceBranchType: \"invalid\",", "body_text": "You'll want to use a valid preference branch type (user, in this case), or else start will throw for an invalid branch type, not due to an invalid preference type.\nIt looks like Assert.throws takes an expected argument that we can use to assert that error message matches the cause for the exception that we expect. If you follow the code it looks like we can pass a regex object in to match against a portion of the error message. Someday we should refactor the rest of the throws tests to use this too, it looks useful!", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/673", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112111836", "created_at": "2017-04-19T04:04:18Z", "author_association": "MEMBER", "body": "You'll want to use a valid preference branch type (`user`, in this case), or else `start` will throw for an invalid branch type, not due to an invalid preference type.\r\n\r\nIt looks like [`Assert.throws` takes an `expected` argument](https://dxr.mozilla.org/mozilla-central/source/testing/modules/Assert.jsm#381) that we can use to assert that error message matches the cause for the exception that we expect. If you follow the code it looks like we can pass a regex object in to match against a portion of the error message. Someday we should refactor the rest of the throws tests to use this too, it looks useful!", "updated_at": "2017-04-20T14:39:26Z", "html_url": "https://github.com/mozilla/normandy/pull/673#discussion_r112111836", "pull_request_review_id": 33399415, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112111836"}, "html": {"href": "https://github.com/mozilla/normandy/pull/673#discussion_r112111836"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/673"}}, "commit_id": "0481af5b14c3a214840bcb56387fdf293f7386a8", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<p>You'll want to use a valid preference branch type (<code>user</code>, in this case), or else <code>start</code> will throw for an invalid branch type, not due to an invalid preference type.</p>\n<p>It looks like <a href=\"https://dxr.mozilla.org/mozilla-central/source/testing/modules/Assert.jsm#381\" rel=\"nofollow\"><code>Assert.throws</code> takes an <code>expected</code> argument</a> that we can use to assert that error message matches the cause for the exception that we expect. If you follow the code it looks like we can pass a regex object in to match against a portion of the error message. Someday we should refactor the rest of the throws tests to use this too, it looks useful!</p>", "original_commit_id": "d74e71bc7c86d392e193d79a3cc819bb7d2427c6", "id": 112111836}