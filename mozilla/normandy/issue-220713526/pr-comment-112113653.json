{"original_position": 79, "diff_hunk": "@@ -165,6 +172,24 @@ add_task(withMockExperiments(withMockPreferences(async function (experiments, mo\n   startObserver.restore();\n })));\n \n+// start should detect if a new preference value type matches the previous value type\n+add_task(withMockPreferences(async function (mockPreferences) {\n+  mockPreferences.set(\"fake.type_preference\", \"oldvalue\");\n+\n+  await Assert.rejects(\n+    PreferenceExperiments.start({", "body_text": "We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).\n\nThat's probably a test for a different PR, in the SandboxManager tests. I'd rather test that once for wrapAsync instead of testing every use of wrapAsync. Although there is the unfilled gap of an integration test for preference-experiment recipes.\n\nMore generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is...\n\nThe entrypoint is in the action code in recipe-server that gets run in the sandbox: https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-server/client/actions/preference-experiment/index.js#L40\nFeature branches are... well, they are a solution to a real problem. It's still up for debate if they're a good solution. :P\n\nIn any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments.\n\nWe have existing tests that ActionSandboxManager throws when the sandbox code throws. We're missing a test that RecipeRunner, which calls that method, handles the error appropriately and doesn't halt execution of other actions. I think that's separate from this PR though, and shouldn't block it.", "in_reply_to_id": 112022028, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/673", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112113653", "created_at": "2017-04-19T04:26:26Z", "author_association": "MEMBER", "body": "> We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).\r\n\r\nThat's probably a test for a different PR, in the SandboxManager tests. I'd rather test that once for wrapAsync instead of testing every use of wrapAsync. Although there is the unfilled gap of an integration test for preference-experiment recipes.\r\n\r\n> More generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is...\r\n\r\nThe entrypoint is in the action code in `recipe-server` that gets run in the sandbox: https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-server/client/actions/preference-experiment/index.js#L40\r\n\r\nFeature branches are... well, they are _a_ solution to a real problem. It's still up for debate if they're a _good_ solution. :P\r\n\r\n> In any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments.\r\n\r\nWe have existing tests that [ActionSandboxManager throws when the sandbox code throws](https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-client-addon/test/unit/test_ActionSandboxManager.js#L70). We're missing a test that `RecipeRunner`, which calls that method, handles the error appropriately and doesn't halt execution of other actions. I think that's separate from this PR though, and shouldn't block it.", "updated_at": "2017-04-20T14:39:26Z", "html_url": "https://github.com/mozilla/normandy/pull/673#discussion_r112113653", "pull_request_review_id": 33399415, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112113653"}, "html": {"href": "https://github.com/mozilla/normandy/pull/673#discussion_r112113653"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/673"}}, "commit_id": "0481af5b14c3a214840bcb56387fdf293f7386a8", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<blockquote>\n<p>We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).</p>\n</blockquote>\n<p>That's probably a test for a different PR, in the SandboxManager tests. I'd rather test that once for wrapAsync instead of testing every use of wrapAsync. Although there is the unfilled gap of an integration test for preference-experiment recipes.</p>\n<blockquote>\n<p>More generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is...</p>\n</blockquote>\n<p>The entrypoint is in the action code in <code>recipe-server</code> that gets run in the sandbox: <a href=\"https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-server/client/actions/preference-experiment/index.js#L40\">https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-server/client/actions/preference-experiment/index.js#L40</a></p>\n<p>Feature branches are... well, they are <em>a</em> solution to a real problem. It's still up for debate if they're a <em>good</em> solution. :P</p>\n<blockquote>\n<p>In any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments.</p>\n</blockquote>\n<p>We have existing tests that <a href=\"https://github.com/andymikulski/normandy/blob/d74e71bc7c86d392e193d79a3cc819bb7d2427c6/recipe-client-addon/test/unit/test_ActionSandboxManager.js#L70\">ActionSandboxManager throws when the sandbox code throws</a>. We're missing a test that <code>RecipeRunner</code>, which calls that method, handles the error appropriately and doesn't halt execution of other actions. I think that's separate from this PR though, and shouldn't block it.</p>", "original_commit_id": "d74e71bc7c86d392e193d79a3cc819bb7d2427c6", "id": 112113653}