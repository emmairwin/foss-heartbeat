{"original_position": 79, "diff_hunk": "@@ -165,6 +172,24 @@ add_task(withMockExperiments(withMockPreferences(async function (experiments, mo\n   startObserver.restore();\n })));\n \n+// start should detect if a new preference value type matches the previous value type\n+add_task(withMockPreferences(async function (mockPreferences) {\n+  mockPreferences.set(\"fake.type_preference\", \"oldvalue\");\n+\n+  await Assert.rejects(\n+    PreferenceExperiments.start({", "body_text": "We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).\nMore generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is...\nIn any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments. Especially because, for preferences that don't live in modules/libpref/init/all.js and friends (ie appear in about:config on a default profile), it's possible for users to define those prefs with an unexpected type, and we wouldn't want users doing that to be breaking their browsers and/or all our code.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/673", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112022028", "created_at": "2017-04-18T17:57:54Z", "author_association": "CONTRIBUTOR", "body": "We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).\r\n\r\nMore generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is... \r\n\r\nIn any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments. Especially because, for preferences that don't live in modules/libpref/init/all.js and friends (ie appear in about:config on a default profile), it's possible for users to define those prefs with an unexpected type, and we wouldn't want users doing that to be breaking their browsers and/or all our code.", "updated_at": "2017-04-20T14:39:26Z", "html_url": "https://github.com/mozilla/normandy/pull/673#discussion_r112022028", "pull_request_review_id": 33302771, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/112022028"}, "html": {"href": "https://github.com/mozilla/normandy/pull/673#discussion_r112022028"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/673"}}, "commit_id": "0481af5b14c3a214840bcb56387fdf293f7386a8", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/unit/test_PreferenceExperiments.js", "body_html": "<p>We should also have a test that the forwarded (wrapAsync) stuff on the NormandyDriver throws, too (so we don't accidentally swallow exceptions there).</p>\n<p>More generally, we should make sure that the start() callers do the right thing with these exceptions. I tried to find them but github search is awful and this all seems to still live on a branch, maybe / sort of? So I couldn't figure out where the entrypoint is...</p>\n<p>In any case, we should make sure that if starting one of these experiments fails, it doesn't break running any/all experiments. Especially because, for preferences that don't live in modules/libpref/init/all.js and friends (ie appear in about:config on a default profile), it's possible for users to define those prefs with an unexpected type, and we wouldn't want users doing that to be breaking their browsers and/or all our code.</p>", "original_commit_id": "d74e71bc7c86d392e193d79a3cc819bb7d2427c6", "id": 112022028}