{"body": "Getting closer! I've refactored the TaskCluster tasks so that linting happens in it's own task, and fetching gecko-dev (and updating the in-tree shield-recipe-client with the changes in our repo) also happens in its own task. I thought this increase build times by a ton, but apparently not, as lints seem to be done within minutes of submitting a PR.\r\n\r\nInterestingly, I found a bug in `build.sh` that got moved over to `fetch.sh` during my refactor: the path passed to `update-mozilla-central.sh` is incorrect and doesn't exist. It writes our updated add-on files to a directory outside of `gecko-dev-master`, where the build happens. I _think_ this means that our test runs have, for at least a while, not been testing our changes in Github. This is also why the existing linting was passing.\r\n\r\nNow, the tests are failing. Any import to a `resource://shield-recipe-client` path is failing. I'm still not entirely sure why.\r\n\r\nOne thing that is wrong, but that I'm not sure would cause this issue, is that the `install.rdf.in` in teh built Firefox is missing a version number. This is because `git describe --dirty`, which is used to generate the version number in `update-mozilla-central.sh`, fails with the error (I tested with a one-off loaner):\r\n\r\n```\r\nroot@7292caabb71c:~/normandy/recipe-client-addon# git -C \"$(pwd)\" describe --dirty                               \r\nfatal: No names found, cannot describe anything.\r\n```\r\n\r\nThere's only one remote, named `origin`:\r\n\r\n```\r\nroot@7292caabb71c:~/normandy# git remote show origin\r\n* remote origin\r\n  Fetch URL: https://github.com/Osmose/normandy.git\r\n  Push  URL: https://github.com/Osmose/normandy.git\r\n  HEAD branch: master\r\n  Remote branches:\r\n    action-refactor                       tracked\r\n    fix-tc-builds                         tracked\r\n    improve-tc                            tracked\r\n    linting                               tracked\r\n    master                                tracked\r\n    preference-experiment-disabled-fields tracked\r\n    storage-refactor                      tracked\r\n    wrapasync-this                        tracked\r\n  Local branch configured for 'git pull':\r\n    master merges with remote master\r\n  Local ref configured for 'git push':\r\n    master pushes to master (up to date)\r\n```\r\n\r\nOh look, it's my fork! Which doesn't have any tags. Which is not surprising. I'm going to try falling back to the commit hash if the version isn't available, which should work for automation since we don't use these builds for anything except testing.", "body_text": "Getting closer! I've refactored the TaskCluster tasks so that linting happens in it's own task, and fetching gecko-dev (and updating the in-tree shield-recipe-client with the changes in our repo) also happens in its own task. I thought this increase build times by a ton, but apparently not, as lints seem to be done within minutes of submitting a PR.\nInterestingly, I found a bug in build.sh that got moved over to fetch.sh during my refactor: the path passed to update-mozilla-central.sh is incorrect and doesn't exist. It writes our updated add-on files to a directory outside of gecko-dev-master, where the build happens. I think this means that our test runs have, for at least a while, not been testing our changes in Github. This is also why the existing linting was passing.\nNow, the tests are failing. Any import to a resource://shield-recipe-client path is failing. I'm still not entirely sure why.\nOne thing that is wrong, but that I'm not sure would cause this issue, is that the install.rdf.in in teh built Firefox is missing a version number. This is because git describe --dirty, which is used to generate the version number in update-mozilla-central.sh, fails with the error (I tested with a one-off loaner):\nroot@7292caabb71c:~/normandy/recipe-client-addon# git -C \"$(pwd)\" describe --dirty                               \nfatal: No names found, cannot describe anything.\n\nThere's only one remote, named origin:\nroot@7292caabb71c:~/normandy# git remote show origin\n* remote origin\n  Fetch URL: https://github.com/Osmose/normandy.git\n  Push  URL: https://github.com/Osmose/normandy.git\n  HEAD branch: master\n  Remote branches:\n    action-refactor                       tracked\n    fix-tc-builds                         tracked\n    improve-tc                            tracked\n    linting                               tracked\n    master                                tracked\n    preference-experiment-disabled-fields tracked\n    storage-refactor                      tracked\n    wrapasync-this                        tracked\n  Local branch configured for 'git pull':\n    master merges with remote master\n  Local ref configured for 'git push':\n    master pushes to master (up to date)\n\nOh look, it's my fork! Which doesn't have any tags. Which is not surprising. I'm going to try falling back to the commit hash if the version isn't available, which should work for automation since we don't use these builds for anything except testing.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/294278008", "created_at": "2017-04-15T07:37:32Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/pull/693#issuecomment-294278008", "updated_at": "2017-04-15T07:37:32Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<p>Getting closer! I've refactored the TaskCluster tasks so that linting happens in it's own task, and fetching gecko-dev (and updating the in-tree shield-recipe-client with the changes in our repo) also happens in its own task. I thought this increase build times by a ton, but apparently not, as lints seem to be done within minutes of submitting a PR.</p>\n<p>Interestingly, I found a bug in <code>build.sh</code> that got moved over to <code>fetch.sh</code> during my refactor: the path passed to <code>update-mozilla-central.sh</code> is incorrect and doesn't exist. It writes our updated add-on files to a directory outside of <code>gecko-dev-master</code>, where the build happens. I <em>think</em> this means that our test runs have, for at least a while, not been testing our changes in Github. This is also why the existing linting was passing.</p>\n<p>Now, the tests are failing. Any import to a <code>resource://shield-recipe-client</code> path is failing. I'm still not entirely sure why.</p>\n<p>One thing that is wrong, but that I'm not sure would cause this issue, is that the <code>install.rdf.in</code> in teh built Firefox is missing a version number. This is because <code>git describe --dirty</code>, which is used to generate the version number in <code>update-mozilla-central.sh</code>, fails with the error (I tested with a one-off loaner):</p>\n<pre><code>root@7292caabb71c:~/normandy/recipe-client-addon# git -C \"$(pwd)\" describe --dirty                               \nfatal: No names found, cannot describe anything.\n</code></pre>\n<p>There's only one remote, named <code>origin</code>:</p>\n<pre><code>root@7292caabb71c:~/normandy# git remote show origin\n* remote origin\n  Fetch URL: https://github.com/Osmose/normandy.git\n  Push  URL: https://github.com/Osmose/normandy.git\n  HEAD branch: master\n  Remote branches:\n    action-refactor                       tracked\n    fix-tc-builds                         tracked\n    improve-tc                            tracked\n    linting                               tracked\n    master                                tracked\n    preference-experiment-disabled-fields tracked\n    storage-refactor                      tracked\n    wrapasync-this                        tracked\n  Local branch configured for 'git pull':\n    master merges with remote master\n  Local ref configured for 'git push':\n    master pushes to master (up to date)\n</code></pre>\n<p>Oh look, it's my fork! Which doesn't have any tags. Which is not surprising. I'm going to try falling back to the commit hash if the version isn't available, which should work for automation since we don't use these builds for anything except testing.</p>", "id": 294278008, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/693"}