{"original_position": 16, "diff_hunk": "@@ -0,0 +1,57 @@\n+from django.core.urlresolvers import reverse as django_reverse\n+from django.conf import settings\n+\n+from rest_framework.relations import HyperlinkedRelatedField\n+from rest_framework.reverse import preserve_builtin_query_params\n+\n+\n+class CDNHyperlinkedRelatedField(HyperlinkedRelatedField):\n+\n+    def __init__(self, **kwargs):\n+        # super is going to override self.reverse, so stash it and restore it\n+        reverse = self.reverse\n+        super().__init__(**kwargs)\n+        self.reverse = reverse\n+\n+    def reverse(self, viewname, args=None, kwargs=None, request=None, format=None, **extra):", "body_text": "Overriding reverse is weird; the code says it's only a property on the class for testing purposes.\nI think it's more natural to override get_url. You can even avoid code duplication completely by setting the request argument to None if CDN_URL is filled before calling the supermethod; request is only ever used for building absolute URLs. If you don't include it, you'll get a non-absolute URL that you can then prepend the CDN url to.\nThat might be a bit unclear. I think it'd look like:\ndef get_url():  # pretend there are args here\n    if settings.CDN_URL is not None:\n        request = None\n        url = super().get_url(args_with_modified_request)\n        # Append the CDN url and you're done!\n    else\n        return super().get_url()", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/77", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/56604119", "created_at": "2016-03-18T01:45:38Z", "author_association": "MEMBER", "body": "Overriding reverse is weird; [the code says](https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/relations.py#L254) it's only a property on the class for testing purposes.\n\nI think it's more natural to override `get_url`. You can even avoid code duplication completely by setting the `request` argument to `None` if `CDN_URL` is filled before calling the supermethod; `request` is only ever used for building absolute URLs. If you don't include it, you'll get a non-absolute URL that you can then prepend the CDN url to.\n\nThat might be a bit unclear. I think it'd look like:\n\n``` python\ndef get_url():  # pretend there are args here\n    if settings.CDN_URL is not None:\n        request = None\n        url = super().get_url(args_with_modified_request)\n        # Append the CDN url and you're done!\n    else\n        return super().get_url()\n```\n", "updated_at": "2016-03-24T22:53:05Z", "html_url": "https://github.com/mozilla/normandy/pull/77#discussion_r56604119", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/56604119"}, "html": {"href": "https://github.com/mozilla/normandy/pull/77#discussion_r56604119"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/77"}}, "commit_id": "3c9221aef4b5d9bad48aca31e1dd5f0b1a218a9b", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/base/api/relations.py", "body_html": "<p>Overriding reverse is weird; <a href=\"https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/relations.py#L254\">the code says</a> it's only a property on the class for testing purposes.</p>\n<p>I think it's more natural to override <code>get_url</code>. You can even avoid code duplication completely by setting the <code>request</code> argument to <code>None</code> if <code>CDN_URL</code> is filled before calling the supermethod; <code>request</code> is only ever used for building absolute URLs. If you don't include it, you'll get a non-absolute URL that you can then prepend the CDN url to.</p>\n<p>That might be a bit unclear. I think it'd look like:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">get_url</span>():  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pretend there are args here</span>\n    <span class=\"pl-k\">if</span> settings.<span class=\"pl-c1\">CDN_URL</span> <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>:\n        request <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n        url <span class=\"pl-k\">=</span> <span class=\"pl-c1\">super</span>().get_url(args_with_modified_request)\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> Append the CDN url and you're done!</span>\n    <span class=\"pl-k\">else</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">super</span>().get_url()</pre></div>", "original_commit_id": "bc627438859a531da3db30840eacb5ee42f4309a", "id": 56604119}