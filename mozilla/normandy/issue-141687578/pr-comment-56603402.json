{"original_position": 40, "diff_hunk": "@@ -0,0 +1,57 @@\n+from django.core.urlresolvers import reverse as django_reverse\n+from django.conf import settings\n+\n+from rest_framework.relations import HyperlinkedRelatedField\n+from rest_framework.reverse import preserve_builtin_query_params\n+\n+\n+class CDNHyperlinkedRelatedField(HyperlinkedRelatedField):\n+\n+    def __init__(self, **kwargs):\n+        # super is going to override self.reverse, so stash it and restore it\n+        reverse = self.reverse\n+        super().__init__(**kwargs)\n+        self.reverse = reverse\n+\n+    def reverse(self, viewname, args=None, kwargs=None, request=None, format=None, **extra):\n+        \"\"\"\n+        Specialization of DRF's reverse that uses settings.CDN_URL.\n+\n+        Does not support DRF API versioning. TODO: Can it?\n+        \"\"\"\n+        scheme = getattr(request, 'versioning_scheme', None)\n+        if scheme is not None:\n+            raise NotImplemented(\"CDN reverse doesn't support versioning\")\n+\n+        if format is not None:\n+            kwargs = kwargs or {}\n+            kwargs['format'] = format\n+\n+        url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)\n+        if settings.CDN_URL is None:\n+            url = request.build_absolute_uri(url)\n+        else:\n+            assert url[0] == '/'\n+            url = settings.CDN_URL + url[1:]\n+\n+        return preserve_builtin_query_params(url, request)\n+\n+\n+class CDNHyperlinkedIdentityField(CDNHyperlinkedRelatedField):", "body_text": "Instead of re-implementing this entire class, could you write your change as a mixin and apply it to classes that inherit from the original related and identity fields.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/77", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/56603402", "created_at": "2016-03-18T01:33:26Z", "author_association": "MEMBER", "body": "Instead of re-implementing this entire class, could you write your change as a mixin and apply it to classes that inherit from the original related and identity fields.\n", "updated_at": "2016-03-24T22:53:05Z", "html_url": "https://github.com/mozilla/normandy/pull/77#discussion_r56603402", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/56603402"}, "html": {"href": "https://github.com/mozilla/normandy/pull/77#discussion_r56603402"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/77"}}, "commit_id": "3c9221aef4b5d9bad48aca31e1dd5f0b1a218a9b", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/base/api/relations.py", "body_html": "<p>Instead of re-implementing this entire class, could you write your change as a mixin and apply it to classes that inherit from the original related and identity fields.</p>", "original_commit_id": "bc627438859a531da3db30840eacb5ee42f4309a", "id": 56603402}