{"original_position": 52, "diff_hunk": "@@ -0,0 +1,77 @@\n+import autobind from 'autobind-decorator';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+\n+@autobind\n+export default class AbstractFormPage extends React.PureComponent {\n+  static propTypes = {\n+    recipeAction: PropTypes.func.isRequired,\n+  };\n+\n+  state = {\n+    formErrors: undefined,\n+  };\n+\n+  /* hook */ onBeforeSubmit() {\n+    this.setState({\n+      formErrors: undefined,\n+    });\n+  }\n+\n+  /* abstract */ onFailure() {\n+    throw new Error('AbstractFormPage#onFailure should be overridden.');\n+  }\n+\n+  /* abstract */ onSuccess() {\n+    throw new Error('AbstractFormPage#onSuccess should be overridden.');\n+  }\n+\n+  /* hook */ getFormProps() {\n+    return {};\n+  }\n+\n+  /* abstract */ getFormComponent() {\n+    throw new Error('AbstractFormPage#getFormComponent should be overridden.');\n+  }\n+\n+  /* abstract */ getTitle() {\n+    throw new Error('AbstractFormPage#getTitle should be overridden.');\n+  }\n+\n+  /* abstract */ async performAction() {\n+    throw new Error('AbstractFormPage#onSuccess should be overridden.');\n+  }\n+\n+  /**\n+   * Update the existing recipe and display a message.\n+   */\n+  async handleSubmit(formValues) {\n+    try {\n+      const actionValues = await this.performAction(formValues);\n+\n+      this.onSuccess(...actionValues);", "body_text": "I'd like to explore this a bit so I haven't touched it yet. The idea behind the spread operator was to keep functions written as doThing(someVal, otherVal) versus doThing(vals){ someVal = vals[0]; otherVal = vals[1]; }. I will test out some ideas and go from there.", "in_reply_to_id": 151263773, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1127", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/153319072", "created_at": "2017-11-27T20:51:31Z", "author_association": "CONTRIBUTOR", "body": "I'd like to explore this a bit so I haven't touched it yet. The idea behind the spread operator was to keep functions written as `doThing(someVal, otherVal)` versus `doThing(vals){ someVal = vals[0]; otherVal = vals[1]; }`. I will test out some ideas and go from there.", "updated_at": "2017-12-07T20:52:13Z", "html_url": "https://github.com/mozilla/normandy/pull/1127#discussion_r153319072", "pull_request_review_id": 79307406, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/153319072"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1127#discussion_r153319072"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1127"}}, "commit_id": "8a95f842fcc7f80a6021a3fcdd6b0d756a63c909", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control/components/recipes/AbstractFormPage.js", "body_html": "<p>I'd like to explore this a bit so I haven't touched it yet. The idea behind the spread operator was to keep functions written as <code>doThing(someVal, otherVal)</code> versus <code>doThing(vals){ someVal = vals[0]; otherVal = vals[1]; }</code>. I will test out some ideas and go from there.</p>", "original_commit_id": "3311f7aa333743c7c658b87bfdab64d13528b8c2", "id": 153319072}