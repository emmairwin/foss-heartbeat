{"original_position": 52, "diff_hunk": "@@ -0,0 +1,77 @@\n+import autobind from 'autobind-decorator';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+\n+@autobind\n+export default class AbstractFormPage extends React.PureComponent {\n+  static propTypes = {\n+    recipeAction: PropTypes.func.isRequired,\n+  };\n+\n+  state = {\n+    formErrors: undefined,\n+  };\n+\n+  /* hook */ onBeforeSubmit() {\n+    this.setState({\n+      formErrors: undefined,\n+    });\n+  }\n+\n+  /* abstract */ onFailure() {\n+    throw new Error('AbstractFormPage#onFailure should be overridden.');\n+  }\n+\n+  /* abstract */ onSuccess() {\n+    throw new Error('AbstractFormPage#onSuccess should be overridden.');\n+  }\n+\n+  /* hook */ getFormProps() {\n+    return {};\n+  }\n+\n+  /* abstract */ getFormComponent() {\n+    throw new Error('AbstractFormPage#getFormComponent should be overridden.');\n+  }\n+\n+  /* abstract */ getTitle() {\n+    throw new Error('AbstractFormPage#getTitle should be overridden.');\n+  }\n+\n+  /* abstract */ async performAction() {\n+    throw new Error('AbstractFormPage#onSuccess should be overridden.');\n+  }\n+\n+  /**\n+   * Update the existing recipe and display a message.\n+   */\n+  async handleSubmit(formValues) {\n+    try {\n+      const actionValues = await this.performAction(formValues);\n+\n+      this.onSuccess(...actionValues);", "body_text": "As an API design point, I'd pass this without the spread operator, which would allow subclasses to choose the type instead of forcing it to be an iterable. Subclasses can always destructure in their definition of handleSubmit if needed.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1127", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/151263773", "created_at": "2017-11-15T21:56:09Z", "author_association": "MEMBER", "body": "As an API design point, I'd pass this without the spread operator, which would allow subclasses to choose the type instead of forcing it to be an iterable. Subclasses can always destructure in their definition of `handleSubmit` if needed.", "updated_at": "2017-12-07T20:52:13Z", "html_url": "https://github.com/mozilla/normandy/pull/1127#discussion_r151263773", "pull_request_review_id": 76942391, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/151263773"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1127#discussion_r151263773"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1127"}}, "commit_id": "8a95f842fcc7f80a6021a3fcdd6b0d756a63c909", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control/components/recipes/AbstractFormPage.js", "body_html": "<p>As an API design point, I'd pass this without the spread operator, which would allow subclasses to choose the type instead of forcing it to be an iterable. Subclasses can always destructure in their definition of <code>handleSubmit</code> if needed.</p>", "original_commit_id": "3311f7aa333743c7c658b87bfdab64d13528b8c2", "id": 151263773}