{"original_position": 117, "diff_hunk": "@@ -145,20 +153,67 @@ this.NormandyApi = {\n \n   /**\n    * Fetch an array of available actions from the server.\n+   * @param filters\n+   * @param filters.enabled {boolean} If true, only returns enabled\n+   * recipes. Default true.\n    * @resolves {Array}\n    */\n-  async fetchActions() {\n-    const actionApiUrl = await this.getApiUrl(\"action-list\");\n-    const res = await this.get(actionApiUrl);\n-    return res.json();\n+  async fetchRecipes(filters = {enabled: true}) {\n+    return this.fetchSignedObjects(\"recipe\", filters);\n+  },\n+\n+  /**\n+   * Fetch an array of available actions from the server.\n+   * @resolves {Array}\n+   */\n+  async fetchActions(filters = {}) {\n+    return this.fetchSignedObjects(\"action\", filters);\n   },\n \n   async fetchImplementation(action) {\n-    const response = await fetch(action.implementation_url);\n-    if (response.ok) {\n-      return response.text();\n+    const implementationUrl = new URL(this.absolutify(action.implementation_url));\n+\n+    // fetch implementation\n+    const response = await fetch(implementationUrl);\n+    if (!response.ok) {\n+      throw new Error(\n+        `Failed to fetch action implementation for ${action.name}: ${response.status}`\n+      );\n+    }\n+    const responseText = await response.text();\n+\n+    // Try to verify integrity of the implementation text.  If the\n+    // integrity value doesn't match the content or uses an unknown\n+    // algorithm, fail.\n+\n+    // Get the last non-empty portion of the url path, and split it\n+    // into two to get the aglorithm and hash.\n+    const parts = implementationUrl.pathname.split(\"/\");\n+    const lastNonEmpty = parts.filter(p => p !== \"\").slice(-1)[0];\n+    const [algorithm, ...hashParts] = lastNonEmpty.split(\"-\");\n+    const expectedHash = hashParts.join(\"-\");", "body_text": "I wonder if there's really added value in storing the hash in the URL. It requires extra parsing, and we could just store the hash in the action JSON document, which, I think, would be much cleaner.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/934", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/131764049", "created_at": "2017-08-07T21:09:14Z", "author_association": "CONTRIBUTOR", "body": "I wonder if there's really added value in storing the hash in the URL. It requires extra parsing, and we could just store the hash in the action JSON document, which, I think, would be much cleaner.", "updated_at": "2017-08-09T17:29:37Z", "html_url": "https://github.com/mozilla/normandy/pull/934#discussion_r131764049", "pull_request_review_id": 54769937, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/131764049"}, "html": {"href": "https://github.com/mozilla/normandy/pull/934#discussion_r131764049"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/934"}}, "commit_id": "9b11c6f569d0e9e3d25e024a14c775e0184ba9b7", "user": {"following_url": "https://api.github.com/users/jvehent/following{/other_user}", "events_url": "https://api.github.com/users/jvehent/events{/privacy}", "organizations_url": "https://api.github.com/users/jvehent/orgs", "url": "https://api.github.com/users/jvehent", "gists_url": "https://api.github.com/users/jvehent/gists{/gist_id}", "html_url": "https://github.com/jvehent", "subscriptions_url": "https://api.github.com/users/jvehent/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/415617?v=4", "repos_url": "https://api.github.com/users/jvehent/repos", "received_events_url": "https://api.github.com/users/jvehent/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/jvehent/starred{/owner}{/repo}", "site_admin": false, "login": "jvehent", "type": "User", "id": 415617, "followers_url": "https://api.github.com/users/jvehent/followers"}, "position": 117, "path": "recipe-client-addon/lib/NormandyApi.jsm", "body_html": "<p>I wonder if there's really added value in storing the hash in the URL. It requires extra parsing, and we could just store the hash in the action JSON document, which, I think, would be much cleaner.</p>", "original_commit_id": "276fd5fbb89f000267cede859a3f01dbbaecd9dc", "id": 131764049}