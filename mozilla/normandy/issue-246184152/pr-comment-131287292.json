{"original_position": 129, "diff_hunk": "@@ -145,20 +149,65 @@ this.NormandyApi = {\n \n   /**\n    * Fetch an array of available actions from the server.\n+   * @param filters\n+   * @param filters.enabled {boolean} If true, only returns enabled\n+   * recipes. Default true.\n+   * @resolves {Array}\n+   */\n+  async fetchRecipes(filters = {enabled: true}) {\n+    return this.fetchSignedObjects('recipe', filters);\n+  },\n+\n+  /**\n+   * Fetch an array of available actions from the server.\n    * @resolves {Array}\n    */\n-  async fetchActions() {\n-    const actionApiUrl = await this.getApiUrl(\"action-list\");\n-    const res = await this.get(actionApiUrl);\n-    return res.json();\n+  async fetchActions(filters = {}) {\n+    return this.fetchSignedObjects('action', filters);\n   },\n \n   async fetchImplementation(action) {\n-    const response = await fetch(action.implementation_url);\n-    if (response.ok) {\n-      return response.text();\n+    const implementationUrl = this.absolutify(action.implementation_url);\n+\n+\n+    // fetch implementation\n+    const response = await fetch(implementationUrl);\n+    if (!response.ok) {\n+      throw new Error(\n+        `Failed to fetch action implementation for ${action.name}: ${response.status}`\n+      );\n+    }\n+    const responseText = await response.text();\n+\n+    // Try to verify integrity of the implementation text. If no\n+    // integrity value is found, skip. If the integrity value doesn't\n+    // match thte content or uses an unknown algorithm, fail.\n+    const integrityRe = new RegExp('/([a-z]+[0-9]+)-([a-zA-Z0-9+-]+)/$');\n+    const match = integrityRe.exec(implementationUrl);\n+    if (match) {\n+      const [, algorithm, expectedHash] = match;\n+      if (algorithm !== 'sha384') {\n+        throw new Error(\n+          `Failed to fetch action implemenation for ${action.name}: ` +\n+          `Unexpected integrity algorithm, expected \"sha384\", got ${algorithm}`\n+        );\n+      }\n+\n+      // verify integrity hash\n+      const hasher = Cc[\"@mozilla.org/security/hash;1\"].createInstance(Ci.nsICryptoHash);\n+      hasher.init(hasher.SHA384);\n+      const dataToHash = new TextEncoder().encode(responseText);\n+      hasher.update(dataToHash, dataToHash.length);\n+      const useBase64 = true;\n+      const hash = hasher.finish(useBase64).replace(/\\+/g, '-').replace(/\\//g, '_');\n+      if (hash !== expectedHash) {\n+        throw new Error(\n+          `Failed to fetch action implementation for ${action.name}: ` +\n+          `Integrity hash does not match content. Expected ${expectedHash} got ${hash}.`\n+        );\n+      }", "body_text": "Yes. I understand this. It is totally a thing I know how it works.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/934", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/131287292", "created_at": "2017-08-04T00:02:26Z", "author_association": "MEMBER", "body": "Yes. I understand this. It is totally a thing I know how it works.\r\n\r\n![](http://i.imgur.com/bNhbHRb.gif)\r\n", "updated_at": "2017-08-09T17:29:37Z", "html_url": "https://github.com/mozilla/normandy/pull/934#discussion_r131287292", "pull_request_review_id": 54244884, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/131287292"}, "html": {"href": "https://github.com/mozilla/normandy/pull/934#discussion_r131287292"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/934"}}, "commit_id": "9b11c6f569d0e9e3d25e024a14c775e0184ba9b7", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/lib/NormandyApi.jsm", "body_html": "<p>Yes. I understand this. It is totally a thing I know how it works.</p>\n<p><a target=\"_blank\" href=\"https://camo.githubusercontent.com/a5619c7698a6ff375e09b7bb6c97e33ff1f1f239/687474703a2f2f692e696d6775722e636f6d2f624e68624852622e676966\"><img src=\"https://camo.githubusercontent.com/a5619c7698a6ff375e09b7bb6c97e33ff1f1f239/687474703a2f2f692e696d6775722e636f6d2f624e68624852622e676966\" alt=\"\" data-canonical-src=\"http://i.imgur.com/bNhbHRb.gif\" style=\"max-width:100%;\"></a></p>", "original_commit_id": "1245bf4232ce3547293009ad896c8bcecbdd8b33", "id": 131287292}