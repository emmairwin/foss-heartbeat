{"original_position": 41, "diff_hunk": "@@ -184,6 +207,16 @@ this.withPrefEnv = function(inPrefs) {\n   };\n };\n \n+this.compose = function(...args) {", "body_text": "I don't think this is actually the traditional compose function. With the traditional function, compose(a => a + 1, a => a + 1) should be equivalent to a => a + 2, but yours would give an error, since it tries to call a => a + 1 with a function.\nI think one of the major differences is that you apply the functions eagerly, instead of creating a function that delays execution. The other is that you take a value (the first input) as your final argument. Compare this to redux's compose, which I think matches the traditional definition.\nThis is still a useful function, but it isn't compose, and I think it should be called something different. I'm only nitpicking about the name right now.\nPS: I realize this is actually just the code from inside compose_task. I probably should have caught it before, but oh well.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/942", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130993903", "created_at": "2017-08-02T20:54:48Z", "author_association": "MEMBER", "body": "I don't think this is actually the traditional `compose` function. With the traditional function, `compose(a => a + 1, a => a + 1)` should be equivalent to `a => a + 2`, but yours would give an error, since it tries to call `a => a + 1` with a function.\r\n\r\nI think one of the major differences is that you apply the functions eagerly, instead of creating a function that delays execution. The other is that you take a value (the first input) as your final argument. Compare this to [redux's `compose`](https://github.com/reactjs/redux/blob/b4fb08133c95094a4b293a9ab434d1d5dd657527/src/compose.js), which I think matches the traditional definition.\r\n\r\nThis is still a useful function, but it isn't `compose`, and I think it should be called something different. I'm only nitpicking about the name right now.\r\n\r\nPS: I realize this is actually just the code from inside `compose_task`. I probably should have caught it before, but oh well.", "updated_at": "2017-08-03T20:19:01Z", "html_url": "https://github.com/mozilla/normandy/pull/942#discussion_r130993903", "pull_request_review_id": 53918487, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130993903"}, "html": {"href": "https://github.com/mozilla/normandy/pull/942#discussion_r130993903"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/942"}}, "commit_id": "903d5c551c05f5682b0304557cfbe6bc94229f74", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-client-addon/test/browser/head.js", "body_html": "<p>I don't think this is actually the traditional <code>compose</code> function. With the traditional function, <code>compose(a =&gt; a + 1, a =&gt; a + 1)</code> should be equivalent to <code>a =&gt; a + 2</code>, but yours would give an error, since it tries to call <code>a =&gt; a + 1</code> with a function.</p>\n<p>I think one of the major differences is that you apply the functions eagerly, instead of creating a function that delays execution. The other is that you take a value (the first input) as your final argument. Compare this to <a href=\"https://github.com/reactjs/redux/blob/b4fb08133c95094a4b293a9ab434d1d5dd657527/src/compose.js\">redux's <code>compose</code></a>, which I think matches the traditional definition.</p>\n<p>This is still a useful function, but it isn't <code>compose</code>, and I think it should be called something different. I'm only nitpicking about the name right now.</p>\n<p>PS: I realize this is actually just the code from inside <code>compose_task</code>. I probably should have caught it before, but oh well.</p>", "original_commit_id": "a96365b5acd4771e201ec0c6e62a810a4a523f98", "id": 130993903}