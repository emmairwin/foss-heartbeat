{"original_position": 79, "diff_hunk": "@@ -282,3 +271,70 @@ compose_task(\n     });\n   }\n );\n+\n+compose_task(\n+  AddonStudies.withStudies([\n+    studyFactory({active: true, addonId: \"does.not.exist@example.com\", studyEndDate: null}),\n+    studyFactory({active: true, addonId: \"installed@example.com\"}),\n+    studyFactory({active: false, addonId: \"already.gone@example.com\", studyEndDate: new Date(2012, 1)}),\n+  ]),\n+  withInstalledWebExtension({id: \"installed@example.com\"}),\n+  async function testInit([activeStudy, activeInstalledStudy, inactiveStudy]) {\n+    await AddonStudies.init();\n+\n+    const newActiveStudy = await AddonStudies.get(activeStudy.recipeId);\n+    ok(!newActiveStudy.active, \"init marks studies as inactive if their add-on is not installed.\");\n+    ok(\n+      newActiveStudy.studyEndDate,\n+      \"init sets the study end date if a study's add-on is not installed.\"\n+    );\n+\n+    const newInactiveStudy = await AddonStudies.get(inactiveStudy.recipeId);\n+    is(\n+      newInactiveStudy.studyEndDate.getFullYear(),\n+      2012,\n+      \"init does not modify inactive studies.\"\n+    );\n+\n+    const newActiveInstalledStudy = await AddonStudies.get(activeInstalledStudy.recipeId);\n+    Assert.deepEqual(\n+      activeInstalledStudy,\n+      newActiveInstalledStudy,\n+      \"init does not modify studies whose add-on is still installed.\"\n+    );\n+  }\n+);\n+\n+compose_task(\n+  AddonStudies.withStudies([\n+    studyFactory({active: true, addonId: \"installed@example.com\", studyEndDate: null}),\n+  ]),\n+  withInstalledWebExtension({id: \"installed@example.com\"}),\n+  async function testInit([study], [id, addonFile]) {\n+    // Wait (or throw if we time out ) for the shield-study-ended event to", "body_text": "You can just use TestUtils.topicObserved instead of rolling your own. I don't think the timeout is a good idea because it will likely intermittently fail on debug build runs, but if you want to keep using it, use Promise.race() with a different resolution value and then use that value once the result of Promise.race resolves.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/942", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130251806", "created_at": "2017-07-30T20:26:16Z", "author_association": "CONTRIBUTOR", "body": "You can just use `TestUtils.topicObserved` instead of rolling your own. I don't think the timeout is a good idea because it will likely intermittently fail on debug build runs, but if you want to keep using it, use `Promise.race()` with a different resolution value and then use that value once the result of `Promise.race` resolves.", "updated_at": "2017-08-03T20:19:01Z", "html_url": "https://github.com/mozilla/normandy/pull/942#discussion_r130251806", "pull_request_review_id": 53105279, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130251806"}, "html": {"href": "https://github.com/mozilla/normandy/pull/942#discussion_r130251806"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/942"}}, "commit_id": "903d5c551c05f5682b0304557cfbe6bc94229f74", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/browser/browser_AddonStudies.js", "body_html": "<p>You can just use <code>TestUtils.topicObserved</code> instead of rolling your own. I don't think the timeout is a good idea because it will likely intermittently fail on debug build runs, but if you want to keep using it, use <code>Promise.race()</code> with a different resolution value and then use that value once the result of <code>Promise.race</code> resolves.</p>", "original_commit_id": "3b45b720cf14081c90c3effb147853d12a9b9795", "id": 130251806}