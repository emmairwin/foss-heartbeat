{"original_position": 109, "diff_hunk": "@@ -122,18 +163,52 @@ def update_signature(self):\n \n     @transaction.atomic\n     def update(self, force=False, **data):", "body_text": "This doesn't check all revisions, it only checks the latest_revision to make sure that it has changed.\n\nMaybe I'm missing something? The code fetches revisions that match the latest revision's ID, and then filters out revisions that don't have the same m2m relationships, then filters out revisions that have the same data. Then it says that it's clean if there exist any revisions that match all of that.\nNone of those filters check if the revisions you're searching for are actually the last revision though. You could do all that filtering and match a revision from months ago that had the same content, and it'd be considered clean even if the latest revision is actually different. If you already have a reference to the latest revision, why do you need to go through all that querying?", "in_reply_to_id": 96501272, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/423", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96926652", "created_at": "2017-01-19T18:38:21Z", "author_association": "MEMBER", "body": "> This doesn't check all revisions, it only checks the latest_revision to make sure that it has changed.\r\n\r\nMaybe I'm missing something? The code fetches revisions that match the latest revision's ID, and then filters out revisions that don't have the same m2m relationships, then filters out revisions that have the same data. Then it says that it's clean if there exist any revisions that match all of that.\r\n\r\nNone of those filters check if the revisions you're searching for are actually the last revision though. You could do all that filtering and match a revision from months ago that had the same content, and it'd be considered clean even if the latest revision is actually different. If you already have a reference to the latest revision, why do you need to go through all that querying?", "updated_at": "2017-01-19T20:27:47Z", "html_url": "https://github.com/mozilla/normandy/pull/423#discussion_r96926652", "pull_request_review_id": 17519110, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96926652"}, "html": {"href": "https://github.com/mozilla/normandy/pull/423#discussion_r96926652"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/423"}}, "commit_id": "6823a75d26306dce045e72699d83525c891829ae", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 118, "path": "normandy/recipes/models.py", "body_html": "<blockquote>\n<p>This doesn't check all revisions, it only checks the latest_revision to make sure that it has changed.</p>\n</blockquote>\n<p>Maybe I'm missing something? The code fetches revisions that match the latest revision's ID, and then filters out revisions that don't have the same m2m relationships, then filters out revisions that have the same data. Then it says that it's clean if there exist any revisions that match all of that.</p>\n<p>None of those filters check if the revisions you're searching for are actually the last revision though. You could do all that filtering and match a revision from months ago that had the same content, and it'd be considered clean even if the latest revision is actually different. If you already have a reference to the latest revision, why do you need to go through all that querying?</p>", "original_commit_id": "663466502550c34a9c86b512e23aa4db589c4d97", "id": 96926652}