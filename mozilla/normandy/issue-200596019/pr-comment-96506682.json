{"original_position": 211, "diff_hunk": "@@ -174,18 +249,55 @@ class RecipeRevision(models.Model):\n     name = models.CharField(max_length=255)\n     action = models.ForeignKey('Action', related_name='recipe_revisions')\n     arguments_json = models.TextField(default='{}', validators=[validate_json])\n-    filter_expression = models.TextField(blank=False)\n+    extra_filter_expression = models.TextField(blank=False)\n+    channels = models.ManyToManyField(Channel)\n+    countries = models.ManyToManyField(Country)\n+    locales = models.ManyToManyField(Locale)\n \n     @property\n     def data(self):\n         return {\n             'name': self.name,\n             'action': self.action,\n             'arguments_json': self.arguments_json,\n-            'filter_expression': self.filter_expression,\n+            'extra_filter_expression': self.extra_filter_expression,\n+            'channels': list(self.channels.all()),\n+            'countries': list(self.countries.all()),\n+            'locales': list(self.locales.all()),\n         }\n \n     @property\n+    def filter_expression(self):\n+        exp = ''\n+\n+        if self.locales.count():\n+            locales = ', '.join([\"'{}'\".format(l.code) for l in self.locales.all()])\n+            exp = 'normandy.locale in [{}]'.format(locales)\n+\n+        if self.countries.count():\n+            countries = ', '.join([\"'{}'\".format(c.code) for c in self.countries.all()])\n+\n+            if len(exp):\n+                exp += ' && '\n+\n+            exp += 'normandy.country in [{}]'.format(countries)\n+\n+        if self.channels.count():\n+            channels = ', '.join([\"'{}'\".format(c.slug) for c in self.channels.all()])\n+\n+            if len(exp):\n+                exp += ' && '\n+\n+            exp += 'normandy.channel in [{}]'.format(channels)\n+\n+        if self.extra_filter_expression:\n+            prefix = ' && (' if len(exp) else ''", "body_text": "I think you can just assume the statement will be wrapped in parenthesis even if it's the only thing in the expression, rather than trying to avoid them.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/423", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96506682", "created_at": "2017-01-17T20:46:45Z", "author_association": "MEMBER", "body": "I think you can just assume the statement will be wrapped in parenthesis even if it's the only thing in the expression, rather than trying to avoid them.", "updated_at": "2017-01-19T20:27:47Z", "html_url": "https://github.com/mozilla/normandy/pull/423#discussion_r96506682", "pull_request_review_id": 17064620, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/96506682"}, "html": {"href": "https://github.com/mozilla/normandy/pull/423#discussion_r96506682"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/423"}}, "commit_id": "6823a75d26306dce045e72699d83525c891829ae", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/recipes/models.py", "body_html": "<p>I think you can just assume the statement will be wrapped in parenthesis even if it's the only thing in the expression, rather than trying to avoid them.</p>", "original_commit_id": "663466502550c34a9c86b512e23aa4db589c4d97", "id": 96506682}