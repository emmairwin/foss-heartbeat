{"original_position": 79, "diff_hunk": "@@ -155,6 +144,101 @@ def disable(self, request, pk=None):\n         recipe.disable()\n         return Response(status=status.HTTP_204_NO_CONTENT)\n \n+    @detail_route(methods=['GET'])\n+    def approval_requests(self, request, pk=None):\n+        recipe = self.get_object()\n+        serializer = ApprovalRequestSerializer(recipe.approval_requests, many=True)\n+        return Response(serializer.data)\n+\n+\n+class ApprovalRequestViewSet(viewsets.ModelViewSet):\n+    queryset = ApprovalRequest.objects.all()\n+    serializer_class = ApprovalRequestSerializer\n+    filter_fields = ('active',)\n+    permission_classes = [\n+        permissions.DjangoModelPermissionsOrAnonReadOnly,\n+        AdminEnabledOrReadOnly,\n+    ]\n+\n+    @transaction.atomic()\n+    @reversion.create_revision()\n+    def create(self, request, *args, **kwargs):\n+        try:\n+            return super().create(request, *args, **kwargs)\n+        except IntegrityError:\n+            return Response(\n+                {'active': 'You can only have one open approval request for a recipe.'},\n+                status=status.HTTP_400_BAD_REQUEST)\n+\n+    @transaction.atomic()\n+    @reversion.create_revision()\n+    def update(self, request, *args, **kwargs):\n+        \"\"\"\n+        Intercept PUT requests and have them create instead of update", "body_text": "Yeah update and create are already added to the class by a mixin, so we can't override them with a new mixin. We could probably create a new class with these methods overridden and then extend that, but the update method varies slightly for each of these view sets and the create method is slightly different for ApprovalRequestViewSet so I'm not sure there's a good way to avoid the duplication.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/141", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62824779", "created_at": "2016-05-11T10:26:35Z", "author_association": "MEMBER", "body": "Yeah `update` and `create` are already added to the class by a mixin, so we can't override them with a new mixin. We could probably create a new class with these methods overridden and then extend that, but the `update` method varies slightly for each of these view sets and the `create` method is slightly different for `ApprovalRequestViewSet` so I'm not sure there's a good way to avoid the duplication.\n", "updated_at": "2016-05-18T23:24:11Z", "html_url": "https://github.com/mozilla/normandy/pull/141#discussion_r62824779", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62824779"}, "html": {"href": "https://github.com/mozilla/normandy/pull/141#discussion_r62824779"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/141"}}, "commit_id": "9976e74f22df740700d6c9a9d3a6ec3dff91e30e", "user": {"following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "url": "https://api.github.com/users/rehandalal", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "html_url": "https://github.com/rehandalal", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "repos_url": "https://api.github.com/users/rehandalal/repos", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "site_admin": false, "login": "rehandalal", "type": "User", "id": 987136, "followers_url": "https://api.github.com/users/rehandalal/followers"}, "position": null, "path": "normandy/recipes/api/views.py", "body_html": "<p>Yeah <code>update</code> and <code>create</code> are already added to the class by a mixin, so we can't override them with a new mixin. We could probably create a new class with these methods overridden and then extend that, but the <code>update</code> method varies slightly for each of these view sets and the <code>create</code> method is slightly different for <code>ApprovalRequestViewSet</code> so I'm not sure there's a good way to avoid the duplication.</p>", "original_commit_id": "40686b2773d6727ff3696ac297778297aafadad4", "id": 62824779}