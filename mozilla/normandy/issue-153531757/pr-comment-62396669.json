{"original_position": 82, "diff_hunk": "@@ -21,10 +24,137 @@ class Meta:\n         ]\n \n \n+class ApprovalSerializer(serializers.ModelSerializer):\n+    creator = UserSerializer(read_only=True)\n+    creator_id = serializers.IntegerField(source='creator.id', write_only=True)\n+\n+    class Meta:\n+        model = Approval\n+        fields = [\n+            'id',\n+            'created',\n+            'creator',\n+            'creator_id',\n+        ]\n+\n+    def validate_creator_id(self, attr):\n+        try:\n+            User.objects.get(id=attr)\n+        except User.DoesNotExist:\n+            raise serializers.ValidationError('User does not exist.')\n+        return attr\n+\n+    def create(self, validated_data):\n+        creator_id = validated_data.pop('creator')['id']\n+        creator = User.objects.get(id=creator_id)\n+        approval_request = Approval.objects.create(creator=creator, **validated_data)\n+        return approval_request\n+\n+    def update(self, instance, validated_data):\n+        instance.created = validated_data.get('created', instance.created)\n+\n+        if 'creator' in validated_data:\n+            creator_id = validated_data.pop('creator')['id']\n+            instance.action = User.objects.get(id=creator_id)\n+\n+        instance.save()\n+        return instance\n+\n+\n+class ApprovalRequestSerializer(serializers.ModelSerializer):\n+    creator = UserSerializer(read_only=True)\n+    creator_id = serializers.IntegerField(source='creator.id', write_only=True)\n+    approval = ApprovalSerializer(required=False)\n+\n+    class Meta:\n+        model = ApprovalRequest\n+        fields = [\n+            'id',\n+            'created',\n+            'creator',\n+            'creator_id',\n+            'active',\n+            'approval',\n+        ]\n+\n+    def validate_creator_id(self, attr):\n+        try:\n+            User.objects.get(id=attr)\n+        except User.DoesNotExist:\n+            raise serializers.ValidationError('User does not exist.')\n+        return attr\n+\n+    def create(self, validated_data):\n+        creator_id = validated_data.pop('creator')['id']\n+        validated_data['creator'] = User.objects.get(id=creator_id)\n+\n+        if 'approval' in validated_data:", "body_text": "Wouldn't an approval be created separately after an approval request? This might be unnecessary in that case.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/141", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62396669", "created_at": "2016-05-06T21:59:13Z", "author_association": "MEMBER", "body": "Wouldn't an approval be created separately after an approval request? This might be unnecessary in that case.\n", "updated_at": "2016-05-18T23:24:11Z", "html_url": "https://github.com/mozilla/normandy/pull/141#discussion_r62396669", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62396669"}, "html": {"href": "https://github.com/mozilla/normandy/pull/141#discussion_r62396669"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/141"}}, "commit_id": "9976e74f22df740700d6c9a9d3a6ec3dff91e30e", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "normandy/recipes/api/serializers.py", "body_html": "<p>Wouldn't an approval be created separately after an approval request? This might be unnecessary in that case.</p>", "original_commit_id": "1ae011146c37fb3dd6b2ebc12176a994f81dba4b", "id": 62396669}