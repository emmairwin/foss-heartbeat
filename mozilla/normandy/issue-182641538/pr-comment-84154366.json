{"original_position": 26, "diff_hunk": "@@ -11,7 +11,37 @@ describe('ShieldStudyAction', () => {\n \n   it('should log a message to the console', async () => {\n     const action = new ShieldStudyAction(normandy, { arguments: { studyName: 'lorem ipsum' } });\n+\n+    normandy.mock.storage.data.storageDurability = 2;\n+\n     await action.execute();\n     expect(normandy.showStudyConsentPage).toHaveBeenCalledWith({ studyName: 'lorem ipsum' });\n   });\n+\n+  it('should not run if it has already been shown', async () => {\n+    const action = new ShieldStudyAction(normandy, { arguments: { studyName: 'lorem ipsum' } });\n+\n+    normandy.mock.storage.data.storageDurability = 2;\n+    normandy.mock.storage.data.studyHasBeenShown = true;\n+\n+    await action.execute();\n+    expect(normandy.showStudyConsentPage).not.toHaveBeenCalled();\n+  });\n+\n+  it('should not run if storage durability is unconfirmed', async () => {\n+    const action = new ShieldStudyAction(normandy, { arguments: { studyName: 'lorem ipsum' } });\n+\n+    normandy.mock.storage.data.storageDurability = 1;\n+\n+    expect(await action.execute()).toThrowError('err');", "body_text": "The problem is that you are calling the function, instead of passing a function. The form is expect(someFunc).toThrow('err') (as opposed to expect(someFunc()).toThrow('err')). I'm not sure how to do this with async/await. You might have to do something gross like\naction.execute()\n.then(() => fail())\n.catch(err => pass());", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/291", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/84154366", "created_at": "2016-10-19T19:59:48Z", "author_association": "MEMBER", "body": "The problem is that you are calling the function, instead of passing a function. The form is `expect(someFunc).toThrow('err')` (as opposed to `expect(someFunc()).toThrow('err')`). I'm not sure how to do this with async/await. You might have to do something gross like\n\n``` js\naction.execute()\n.then(() => fail())\n.catch(err => pass());\n```\n", "updated_at": "2016-11-03T23:10:01Z", "html_url": "https://github.com/mozilla/normandy/pull/291#discussion_r84154366", "pull_request_review_id": 4947157, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/84154366"}, "html": {"href": "https://github.com/mozilla/normandy/pull/291#discussion_r84154366"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/291"}}, "commit_id": "f905b2547d3135fff8e4e9a69edcfae9c9892a91", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "client/actions/tests/test_shield-study.js", "body_html": "<p>The problem is that you are calling the function, instead of passing a function. The form is <code>expect(someFunc).toThrow('err')</code> (as opposed to <code>expect(someFunc()).toThrow('err')</code>). I'm not sure how to do this with async/await. You might have to do something gross like</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">action</span>.<span class=\"pl-en\">execute</span>()\n.<span class=\"pl-en\">then</span>(() <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">fail</span>())\n.<span class=\"pl-en\">catch</span>(<span class=\"pl-smi\">err</span> <span class=\"pl-k\">=&gt;</span> <span class=\"pl-en\">pass</span>());</pre></div>", "original_commit_id": "1c04fda867875e5e03787678ff27f009b930e3aa", "id": 84154366}