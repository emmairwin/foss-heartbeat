{"original_position": 17, "diff_hunk": "@@ -6,8 +6,34 @@ export default class ShieldStudyAction extends Action {\n     this.storage = normandy.createStorage(recipe.id);\n   }\n \n+  setHasBeenShown() {\n+    this.storage.setItem('studyHasBeenShown', true);\n+  }\n+\n+  async getHasBeenShown() {\n+    const hasBeenShown = await this.storage.getItem('studyHasBeenShown');\n+    return hasBeenShown;\n+  }\n+\n   async execute() {\n+    const storageIsDurable = await this.storage.isDurable();\n+\n+    if (!storageIsDurable && !this.normandy.testing) {\n+      throw new Error('Storage durability unconfirmed');", "body_text": "Good call. My only problem with that would be that I'm using this.getItem in the _setDurabilityStatus method. So if getItem returned null or rejected, we would never actually be able to increment the durability status value.\nAny thoughts on getting around that? I could add a check in getItem that wouldn't reject if we were getting the storageDurability key?", "in_reply_to_id": 84152789, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/291", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/84406317", "created_at": "2016-10-21T01:31:34Z", "author_association": "CONTRIBUTOR", "body": "Good call. My only problem with that would be that I'm using `this.getItem` in the `_setDurabilityStatus` method. So if `getItem` returned `null` or rejected, we would never actually be able to increment the durability status value.\n\nAny thoughts on getting around that? I could add a check in `getItem` that wouldn't reject if we were getting the `storageDurability` key? \n", "updated_at": "2016-11-03T23:10:01Z", "html_url": "https://github.com/mozilla/normandy/pull/291#discussion_r84406317", "pull_request_review_id": 5187534, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/84406317"}, "html": {"href": "https://github.com/mozilla/normandy/pull/291#discussion_r84406317"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/291"}}, "commit_id": "f905b2547d3135fff8e4e9a69edcfae9c9892a91", "user": {"following_url": "https://api.github.com/users/brittanystoroz/following{/other_user}", "events_url": "https://api.github.com/users/brittanystoroz/events{/privacy}", "organizations_url": "https://api.github.com/users/brittanystoroz/orgs", "url": "https://api.github.com/users/brittanystoroz", "gists_url": "https://api.github.com/users/brittanystoroz/gists{/gist_id}", "html_url": "https://github.com/brittanystoroz", "subscriptions_url": "https://api.github.com/users/brittanystoroz/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/856935?v=4", "repos_url": "https://api.github.com/users/brittanystoroz/repos", "received_events_url": "https://api.github.com/users/brittanystoroz/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/brittanystoroz/starred{/owner}{/repo}", "site_admin": false, "login": "brittanystoroz", "type": "User", "id": 856935, "followers_url": "https://api.github.com/users/brittanystoroz/followers"}, "position": null, "path": "client/actions/shield-study/index.js", "body_html": "<p>Good call. My only problem with that would be that I'm using <code>this.getItem</code> in the <code>_setDurabilityStatus</code> method. So if <code>getItem</code> returned <code>null</code> or rejected, we would never actually be able to increment the durability status value.</p>\n<p>Any thoughts on getting around that? I could add a check in <code>getItem</code> that wouldn't reject if we were getting the <code>storageDurability</code> key?</p>", "original_commit_id": "1c04fda867875e5e03787678ff27f009b930e3aa", "id": 84406317}