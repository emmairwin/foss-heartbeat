{"body_text": "We saw a KeyError on staging recently while validating the arguments for a preference experiment. The key was true?, which was the value of the slug of the recipe in question, which is weird; we don't use it as a key.\nAfter looking over the validation code, the only thing I noticed that might cause a KeyError was this:\n# Experiment slugs should be unique.\nexperiment_recipes = Recipe.objects.filter(latest_revision__action=self)\nexisting_slugs = set(r.arguments['slug'] for r in experiment_recipes)\nif old_arguments:\n    # It is ok if the slug did not change\n    existing_slugs.remove(old_arguments['slug'])\nSets throw a KeyError if the value you're trying to remove doesn't exist. I think (but cannot reproduce) that there's a race condition here; if the recipe changes during another update request, then the recipes fetched above may have different slugs than the slug passed in via old_arguments, leading to the KeyError.", "labels": [{"url": "https://api.github.com/repos/mozilla/normandy/labels/P5", "color": "ffa32c", "default": false, "id": 821572175, "name": "P5"}, {"url": "https://api.github.com/repos/mozilla/normandy/labels/bug", "color": "b60205", "default": true, "id": 482996638, "name": "bug"}], "number": 803, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": null, "body_html": "<p>We saw a <a href=\"https://sentry.prod.mozaws.net/operations/normandy-stage/issues/612026/\" rel=\"nofollow\">KeyError on staging</a> recently while validating the arguments for a preference experiment. The key was <code>true?</code>, which was the value of the slug of the recipe in question, which is weird; we don't use it as a key.</p>\n<p>After looking over the validation code, the only thing I noticed that might cause a KeyError was this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Experiment slugs should be unique.</span>\nexperiment_recipes <span class=\"pl-k\">=</span> Recipe.objects.filter(<span class=\"pl-v\">latest_revision__action</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>)\nexisting_slugs <span class=\"pl-k\">=</span> <span class=\"pl-c1\">set</span>(r.arguments[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>slug<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">for</span> r <span class=\"pl-k\">in</span> experiment_recipes)\n<span class=\"pl-k\">if</span> old_arguments:\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> It is ok if the slug did not change</span>\n    existing_slugs.remove(old_arguments[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>slug<span class=\"pl-pds\">'</span></span>])</pre></div>\n<p>Sets throw a KeyError if the value you're trying to remove doesn't exist. I <em>think</em> (but cannot reproduce) that there's a race condition here; if the recipe changes during another update request, then the recipes fetched above may have different slugs than the slug passed in via <code>old_arguments</code>, leading to the KeyError.</p>", "id": 234938299, "title": "Race condition when validating preference experiment slugs", "comments": 0, "state": "open", "body": "We saw a [KeyError on staging](https://sentry.prod.mozaws.net/operations/normandy-stage/issues/612026/) recently while validating the arguments for a preference experiment. The key was `true?`, which was the value of the slug of the recipe in question, which is weird; we don't use it as a key.\r\n\r\nAfter looking over the validation code, the only thing I noticed that might cause a KeyError was this:\r\n\r\n```python\r\n# Experiment slugs should be unique.\r\nexperiment_recipes = Recipe.objects.filter(latest_revision__action=self)\r\nexisting_slugs = set(r.arguments['slug'] for r in experiment_recipes)\r\nif old_arguments:\r\n    # It is ok if the slug did not change\r\n    existing_slugs.remove(old_arguments['slug'])\r\n```\r\n\r\nSets throw a KeyError if the value you're trying to remove doesn't exist. I _think_ (but cannot reproduce) that there's a race condition here; if the recipe changes during another update request, then the recipes fetched above may have different slugs than the slug passed in via `old_arguments`, leading to the KeyError.", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/803/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/803/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/803/comments", "html_url": "https://github.com/mozilla/normandy/issues/803", "updated_at": "2018-01-30T20:05:18Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/803", "created_at": "2017-06-09T21:02:57Z", "assignees": []}