{"body": "That's a pretty special error. Fortunately, it rings a bell. I'm pretty certain the problem is an AUFS filesystem bug courtesy of TaskCluster running Docker. (By default / in TaskCluster is an AUFS volume.) For performance reasons (bug 1291940) and consistency reasons, you'll want to do as little work on AUFS as possible and instead use \"cache\" volumes, which are just EXT4 filesystems bind mounted into the Docker container.\r\n\r\nThe TaskCluster code in mozilla-central already does optimal things. Namely it sets up caches and scopes (see helper functions in https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/taskgraph/transforms/job/common.py) and run-task (https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/docker/recipes/run-task) for ensuring proper permissions and using `hg robustcheckout` to get a checkout as consistently and efficiently as possible. Every piece of complexity has been added for a reason and is necessary to guard various failure scenarios. Countless hours were spent making all this as robust as possible. Ideally you would just reuse it all verbatim. But since you are outside of mozilla-central, you'll have to copy some code and methods. This means you'll almost certainly drift behind on best practices and encounter bugs that have already been fixed by Firefox CI. The robustness of your CI will suffer.\r\n\r\nI recommend changing the model of your CI to do version control magic to sync a Git[Hub] project into a sub-directory of mozilla-central then piggyback off Firefox's CI infrastructure. I am actively working on the VCS bits in bug 1357597.", "body_text": "That's a pretty special error. Fortunately, it rings a bell. I'm pretty certain the problem is an AUFS filesystem bug courtesy of TaskCluster running Docker. (By default / in TaskCluster is an AUFS volume.) For performance reasons (bug 1291940) and consistency reasons, you'll want to do as little work on AUFS as possible and instead use \"cache\" volumes, which are just EXT4 filesystems bind mounted into the Docker container.\nThe TaskCluster code in mozilla-central already does optimal things. Namely it sets up caches and scopes (see helper functions in https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/taskgraph/transforms/job/common.py) and run-task (https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/docker/recipes/run-task) for ensuring proper permissions and using hg robustcheckout to get a checkout as consistently and efficiently as possible. Every piece of complexity has been added for a reason and is necessary to guard various failure scenarios. Countless hours were spent making all this as robust as possible. Ideally you would just reuse it all verbatim. But since you are outside of mozilla-central, you'll have to copy some code and methods. This means you'll almost certainly drift behind on best practices and encounter bugs that have already been fixed by Firefox CI. The robustness of your CI will suffer.\nI recommend changing the model of your CI to do version control magic to sync a Git[Hub] project into a sub-directory of mozilla-central then piggyback off Firefox's CI infrastructure. I am actively working on the VCS bits in bug 1357597.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/303526887", "created_at": "2017-05-23T20:46:06Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/757#issuecomment-303526887", "updated_at": "2017-05-23T20:46:06Z", "user": {"following_url": "https://api.github.com/users/indygreg/following{/other_user}", "events_url": "https://api.github.com/users/indygreg/events{/privacy}", "organizations_url": "https://api.github.com/users/indygreg/orgs", "url": "https://api.github.com/users/indygreg", "gists_url": "https://api.github.com/users/indygreg/gists{/gist_id}", "html_url": "https://github.com/indygreg", "subscriptions_url": "https://api.github.com/users/indygreg/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/342993?v=4", "repos_url": "https://api.github.com/users/indygreg/repos", "received_events_url": "https://api.github.com/users/indygreg/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/indygreg/starred{/owner}{/repo}", "site_admin": false, "login": "indygreg", "type": "User", "id": 342993, "followers_url": "https://api.github.com/users/indygreg/followers"}, "body_html": "<p>That's a pretty special error. Fortunately, it rings a bell. I'm pretty certain the problem is an AUFS filesystem bug courtesy of TaskCluster running Docker. (By default / in TaskCluster is an AUFS volume.) For performance reasons (bug 1291940) and consistency reasons, you'll want to do as little work on AUFS as possible and instead use \"cache\" volumes, which are just EXT4 filesystems bind mounted into the Docker container.</p>\n<p>The TaskCluster code in mozilla-central already does optimal things. Namely it sets up caches and scopes (see helper functions in <a href=\"https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/taskgraph/transforms/job/common.py\" rel=\"nofollow\">https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/taskgraph/transforms/job/common.py</a>) and run-task (<a href=\"https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/docker/recipes/run-task\" rel=\"nofollow\">https://hg.mozilla.org/mozilla-central/file/tip/taskcluster/docker/recipes/run-task</a>) for ensuring proper permissions and using <code>hg robustcheckout</code> to get a checkout as consistently and efficiently as possible. Every piece of complexity has been added for a reason and is necessary to guard various failure scenarios. Countless hours were spent making all this as robust as possible. Ideally you would just reuse it all verbatim. But since you are outside of mozilla-central, you'll have to copy some code and methods. This means you'll almost certainly drift behind on best practices and encounter bugs that have already been fixed by Firefox CI. The robustness of your CI will suffer.</p>\n<p>I recommend changing the model of your CI to do version control magic to sync a Git[Hub] project into a sub-directory of mozilla-central then piggyback off Firefox's CI infrastructure. I am actively working on the VCS bits in bug 1357597.</p>", "id": 303526887, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/757"}