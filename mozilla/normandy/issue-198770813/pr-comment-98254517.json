{"original_position": 1, "diff_hunk": "@@ -0,0 +1,37 @@\n+/**", "body_text": "The clone doc snippet says it only makes a shallow copy, however we need a deep clone. Underscore itself doesn't offer a deepClone function, and digging into alternatives leads into using a ~3 year old, test-less npm package, or rolling our own (either using a couple of Underscore fn's or using the JSON.parse(JSON.stringify(...)) business).\nIMO I'd prefer to maintain our own util file instead of farming it out to another NPM package (seeing as Underscore doesn't offer what we need). And, fwiw, there are at least tests written already for our utils. What do you think, @rehandalal ?", "in_reply_to_id": 97806470, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/405", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98254517", "created_at": "2017-01-27T17:53:47Z", "author_association": "CONTRIBUTOR", "body": "The `clone` [doc snippet](http://underscorejs.org/#clone) says it only makes a shallow copy, however we need a deep clone. Underscore itself doesn't offer a `deepClone` function, and [digging into alternatives](https://github.com/jashkenas/underscore/issues/162) leads into using a ~3 year old, test-less [npm package](https://github.com/mateusmaso/underscore.deepclone), or rolling our own (either using a couple of Underscore fn's or using the `JSON.parse(JSON.stringify(...))` business).\r\n\r\nIMO I'd prefer to maintain our own util file instead of farming it out to another NPM package (seeing as Underscore doesn't offer what we need). And, fwiw, there are at least tests written already for our utils. What do you think, @rehandalal ?", "updated_at": "2017-02-06T18:21:31Z", "html_url": "https://github.com/mozilla/normandy/pull/405#discussion_r98254517", "pull_request_review_id": 18893530, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98254517"}, "html": {"href": "https://github.com/mozilla/normandy/pull/405#discussion_r98254517"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/405"}}, "commit_id": "3817ad087be7dc4e56a202977ff6d14e66b9d676", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "client/utils/clone-array.js", "body_html": "<p>The <code>clone</code> <a href=\"http://underscorejs.org/#clone\" rel=\"nofollow\">doc snippet</a> says it only makes a shallow copy, however we need a deep clone. Underscore itself doesn't offer a <code>deepClone</code> function, and <a href=\"https://github.com/jashkenas/underscore/issues/162\">digging into alternatives</a> leads into using a ~3 year old, test-less <a href=\"https://github.com/mateusmaso/underscore.deepclone\">npm package</a>, or rolling our own (either using a couple of Underscore fn's or using the <code>JSON.parse(JSON.stringify(...))</code> business).</p>\n<p>IMO I'd prefer to maintain our own util file instead of farming it out to another NPM package (seeing as Underscore doesn't offer what we need). And, fwiw, there are at least tests written already for our utils. What do you think, <a class=\"user-mention\" href=\"https://github.com/rehandalal\">@rehandalal</a> ?</p>", "original_commit_id": "99bef613fd39a06b33d6cc3fd67085bfdb48cbf4", "id": 98254517}