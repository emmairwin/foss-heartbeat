{"original_position": 78, "diff_hunk": "@@ -76,32 +104,62 @@ export default class GroupMenu extends React.Component {\n     } = this.props;\n \n     const textSearchMessage = this.buildTextSearchMessage(searchText);\n+    const maxCount = GroupMenu.INTIAL_DISPLAY_COUNT;\n \n     return (\n       <div\n         className=\"group-menu\"\n       >\n         { textSearchMessage }\n         {\n-          data.map(group =>\n-            <div\n-              key={group.value}\n-              className={group.value}\n-            >\n-              <h3 className=\"group-label\">{group.label}</h3>\n-              {\n-                group.options.map((option, index) =>\n-                  <div\n-                    className={\"menu-item\"}\n-                    key={index}\n-                    onClick={this.makeClickItemHandler(group, option)}\n-                  >\n-                    { option.label || option.value }\n-                  </div>\n-                )\n-              }\n-            </div>\n-          )\n+          data.map(group => {\n+            const {\n+              value,\n+              options,\n+              label,\n+            } = group;", "body_text": "I actually wanted to go with this too, but the event handlers use the group object later in that scope, e.g. ...onClick={this.makeClickItemHandler(group, option)}....\nI can set up the handlers to expect the explicit values from group/option if you'd prefer. I like to just pass the whole object in so the calling scope doesn't need to know how the handler works.", "in_reply_to_id": 98735402, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/405", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98743774", "created_at": "2017-01-31T19:00:42Z", "author_association": "CONTRIBUTOR", "body": "I actually wanted to go with this too, but the event handlers use the `group` object later in that scope, e.g. `...onClick={this.makeClickItemHandler(group, option)}...`.\r\n\r\nI can set up the handlers to expect the explicit values from `group`/`option` if you'd prefer. I like to just pass the whole object in so the calling scope doesn't need to know how the handler works.", "updated_at": "2017-02-06T18:21:31Z", "html_url": "https://github.com/mozilla/normandy/pull/405#discussion_r98743774", "pull_request_review_id": 19395145, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98743774"}, "html": {"href": "https://github.com/mozilla/normandy/pull/405#discussion_r98743774"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/405"}}, "commit_id": "3817ad087be7dc4e56a202977ff6d14e66b9d676", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": 120, "path": "recipe-server/client/control/components/GroupMenu.js", "body_html": "<p>I actually wanted to go with this too, but the event handlers use the <code>group</code> object later in that scope, e.g. <code>...onClick={this.makeClickItemHandler(group, option)}...</code>.</p>\n<p>I can set up the handlers to expect the explicit values from <code>group</code>/<code>option</code> if you'd prefer. I like to just pass the whole object in so the calling scope doesn't need to know how the handler works.</p>", "original_commit_id": "d4c06e458a15259699f5807b69a488421e9a10ad", "id": 98743774}