{"original_position": 72, "diff_hunk": "@@ -0,0 +1,197 @@\n+/**\n+ * Store for tracking front-end 'filter list' status\n+ *\n+ * Exists as an array of objects denoting option groups,\n+ * containing each set of options per group.\n+ *\n+ * Active/enabled filters have a `selected` property,\n+ * which is mostly used later in the filter selectors\n+ */\n+\n+import {\n+  LOAD_FILTERS,\n+  SET_FILTER,\n+  SET_ALL_FILTERS,\n+  SET_TEXT_FILTER,\n+} from 'control/actions/FilterActions';\n+\n+import cloneArrayValues from 'client/utils/clone-array';\n+\n+function formatLabel(value) {\n+  return value.charAt(0).toUpperCase() + value.slice(1);\n+}\n+\n+function formatFilterOption(option) {\n+  let label;\n+  let value;\n+\n+  // string type = we were given just an option\n+  // (no keyed value/label)\n+  if (typeof option === 'string') {\n+    value = option;\n+    label = formatLabel(option);\n+  // else if we get an object, then we\n+  // can extract the key/value props\n+  } else if (typeof option === 'object') {\n+    label = option.value;\n+    value = option.key;\n+  }\n+\n+  return {\n+    value,\n+    label,\n+  };\n+}\n+\n+// Filters start out empty, as we need to load them from the API\n+let initialState = [];\n+\n+function filtersReducer(state = initialState, action) {\n+  let newState;\n+  let textOptions;\n+\n+  switch (action.type) {\n+    case LOAD_FILTERS: {\n+      newState = [];\n+      const { filters } = action;\n+\n+      for (const group in filters) {\n+        if (!filters.hasOwnProperty(group)) {\n+          break;\n+        }\n+        const newGroup = {\n+          value: group,\n+          label: formatLabel(group),\n+          multiple: filters[group].length > 2,\n+          options: cloneArrayValues(filters[group]).map(formatFilterOption),\n+        };\n+\n+        newState.push(newGroup);\n+      }\n+\n+      initialState = cloneArrayValues(newState);", "body_text": "Makes sense \ud83d\udc4d.  I've switched the filter reducer to be an object with separate active/list properties to track what's been modified by the user and should be considered the 'initial state' should the user decide to reset filters.", "in_reply_to_id": 94869957, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/405", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/95221102", "created_at": "2017-01-09T18:55:14Z", "author_association": "CONTRIBUTOR", "body": "Makes sense \ud83d\udc4d.  I've switched the filter reducer to be an object with separate `active`/`list` properties to track what's been modified by the user and should be considered the 'initial state' should the user decide to reset filters.", "updated_at": "2017-02-06T18:21:31Z", "html_url": "https://github.com/mozilla/normandy/pull/405#discussion_r95221102", "pull_request_review_id": 15769191, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/95221102"}, "html": {"href": "https://github.com/mozilla/normandy/pull/405#discussion_r95221102"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/405"}}, "commit_id": "3817ad087be7dc4e56a202977ff6d14e66b9d676", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "client/control/reducers/FiltersReducer.js", "body_html": "<p>Makes sense <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji>.  I've switched the filter reducer to be an object with separate <code>active</code>/<code>list</code> properties to track what's been modified by the user and should be considered the 'initial state' should the user decide to reset filters.</p>", "original_commit_id": "532fdf2ced0ce059bd30fa25be624037e8a805b3", "id": 95221102}