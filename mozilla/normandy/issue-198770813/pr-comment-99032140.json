{"original_position": 104, "diff_hunk": "@@ -0,0 +1,161 @@\n+/* eslint-disable react/prop-types */\n+import React from 'react';\n+import { mount, shallow } from 'enzyme';\n+\n+import ActiveFilters from 'control/components/ActiveFilters';\n+\n+const noop = () => {};\n+const propFactory = props => ({\n+  selectedFilters: [],\n+  onResetFilters: noop,\n+  onFilterSelect: noop,\n+  className: null,\n+  ...props,\n+});\n+\n+const stubbedFilters = [{\n+  value: 'channels',\n+  label: 'Channels',\n+  multiple: true,\n+  options: [{\n+    value: 'aurora',\n+    label: 'Developer Edition',\n+  }, {\n+    value: 'beta',\n+    label: 'Beta',\n+    selected: true,\n+  }, {\n+    value: 'nightly',\n+    label: 'Nightly',\n+    selected: true,\n+  }, {\n+    value: 'release',\n+    label: 'Release',\n+  }],\n+  selected: true,\n+}, {\n+  value: 'status',\n+  label: 'Status',\n+  multiple: false,\n+  options: [{\n+    value: 'enabled',\n+    label: 'Enabled',\n+    selected: true,\n+  }, {\n+    value: 'disabled',\n+    label: 'Disabled',\n+  }],\n+  selected: true,\n+}];\n+\n+describe('<ActiveFilters>', () => {\n+  it('should work', () => {\n+    const wrapper = () => mount(<ActiveFilters {...propFactory()} />);\n+    expect(wrapper).not.toThrow();\n+  });\n+\n+  describe('Filter groups', () => {\n+    it('should display based on the `selectedFilters` prop', () => {\n+      const wrapper = mount(<ActiveFilters\n+        {...propFactory({\n+          selectedFilters: [],\n+        })}\n+      />);\n+      expect(wrapper.find('.filter-group').length).toBe(0);\n+\n+      wrapper.setProps({\n+        selectedFilters: stubbedFilters,\n+      });\n+\n+      expect(wrapper.find('.filter-group').length).toBe(2);\n+    });\n+\n+    it('should fire the `onFilterSelect` prop when the user clicks an item', () => {\n+      let hasFired = false;\n+      let hasData = false;\n+      const wrapper = mount(<ActiveFilters\n+        {...propFactory({\n+          selectedFilters: stubbedFilters,\n+          onFilterSelect: (group, option) => {\n+            hasFired = true;\n+            hasData = !!group && !!option;\n+          },\n+        })}\n+      />);\n+\n+      wrapper.find('.filter-option').first().simulate('click');\n+      expect(hasFired).toBe(true);\n+      expect(hasData).toBe(true);\n+    });\n+\n+    it('should append the className prop (if any) to the root element', () => {\n+      // we have to use shallow to use `hasClass` on the wrapper\n+      // see: https://github.com/airbnb/enzyme/issues/134\n+      const wrapper = shallow(<ActiveFilters\n+        {...propFactory({\n+          selectedFilters: stubbedFilters,\n+        })}\n+      />);\n+\n+      expect(wrapper.hasClass('active-filters')).toBe(true);\n+\n+      wrapper.setProps({ className: 'test' });\n+      // only one element should exist\n+      expect(wrapper.hasClass('active-filters')).toBe(true);", "body_text": "I think the comment and the assertion don't match here?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/405", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99032140", "created_at": "2017-02-02T00:44:40Z", "author_association": "MEMBER", "body": "I think the comment and the assertion don't match here?", "updated_at": "2017-02-06T18:21:31Z", "html_url": "https://github.com/mozilla/normandy/pull/405#discussion_r99032140", "pull_request_review_id": 19694390, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/99032140"}, "html": {"href": "https://github.com/mozilla/normandy/pull/405#discussion_r99032140"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/405"}}, "commit_id": "3817ad087be7dc4e56a202977ff6d14e66b9d676", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control/tests/components/test_ActiveFilters.js", "body_html": "<p>I think the comment and the assertion don't match here?</p>", "original_commit_id": "e3243c52e3fb3107112fe10aae72f9b24118d884", "id": 99032140}