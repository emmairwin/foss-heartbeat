{"original_position": 59, "diff_hunk": "@@ -87,34 +86,36 @@ class DisconnectedRecipeList extends React.Component {\n    * @param  {Object} Original recipe object\n    * @return {Object} Original recipe but with `metaData` and `searchData` properties added\n    */\n-  static applyRecipeMetadata(recipe) {\n+  static applyRecipeMetaData(recipe) {\n     const { action: recipeAction } = recipe;\n-    const newRecipe = { ...recipe };\n-\n-    // recipes should have empty metaData/searchData props,\n-    // regardless if we set the values or not\n-    newRecipe.metaData = {};\n-    newRecipe.searchData = '';\n+    const newRecipe = {\n+      ...recipe,\n+      // recipes should have empty metaData/searchData props,\n+      // regardless if we set the values or not\n+      metaData: [],\n+      searchData: '',\n+    };\n \n-    // check if there are specific properties/labels we want to grub\n+    // check if there are specific properties/labels we want to display\n     const requestedMetaProps = DisconnectedRecipeList.ActionMetaData[recipeAction];\n \n-    // if there are metadata props we want to pull out,\n-    // loop through them and extract the data from the recipe\n-    for (const propName in requestedMetaProps) {\n-      if (requestedMetaProps.hasOwnProperty(propName)) {\n-        // get the displayed label value\n-        const label = requestedMetaProps[propName];\n-        // get the actual property value\n-        const value = newRecipe.arguments[propName];\n-        // save the label:property into the metadata\n-        newRecipe.metaData[label] = value;\n-\n-        // add the value to the existing search data\n-        newRecipe.searchData = `${newRecipe.searchData} ${value}`;\n-      }\n+    // if we have a metadata definition to fill..", "body_text": "Typo here? Is this a period or an ellipsis?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/314", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/87117201", "created_at": "2016-11-09T00:53:48Z", "author_association": "MEMBER", "body": "Typo here? Is this a period or an ellipsis?\n", "updated_at": "2016-11-09T18:27:20Z", "html_url": "https://github.com/mozilla/normandy/pull/314#discussion_r87117201", "pull_request_review_id": 7742177, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/87117201"}, "html": {"href": "https://github.com/mozilla/normandy/pull/314#discussion_r87117201"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/314"}}, "commit_id": "3678878a81ff53057eb941296ab3fa213ef88ba5", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "client/control/components/RecipeList.js", "body_html": "<p>Typo here? Is this a period or an ellipsis?</p>", "original_commit_id": "7e02515e6a0893a650babb743e4ae9882cd5e1d6", "id": 87117201}