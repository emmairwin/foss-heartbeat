{"body_text": "This way the most primitive CORS is enabled for all things /api/*. You can test it like this:\n\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\"  2>&1 | grep Access\n< Access-Control-Allow-Origin: *\n\nand\n\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\" -X OPTIONS 2>&1 | grep Access\n< Access-Control-Allow-Origin: *\n< Access-Control-Allow-Headers: accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with\n< Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT\n< Access-Control-Max-Age: 86400\n\nFor the production instance the Origin header needs to match a specific hardcoded list. I only put the production admin UI URL in there for now. This will need to change at some point to also include the domain for the production Delivery Console.\nIf we land this, I guess our Dev and Stage uses the Production DJANGO_CONFIGURATION so we're going to need to manually add whatever domains we use for doing prototypes. E.g. rdalal.github.io or something.", "labels": [{"url": "https://api.github.com/repos/mozilla/normandy/labels/new-feature", "color": "0e8a16", "default": false, "id": 821572171, "name": "new-feature"}], "number": 1202, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2018-03-06T21:20:44Z", "body_html": "<p>This way the most primitive CORS is enabled for all things <code>/api/*</code>. You can test it like this:</p>\n<pre><code>\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\"  2&gt;&amp;1 | grep Access\n&lt; Access-Control-Allow-Origin: *\n</code></pre>\n<p>and</p>\n<pre><code>\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\" -X OPTIONS 2&gt;&amp;1 | grep Access\n&lt; Access-Control-Allow-Origin: *\n&lt; Access-Control-Allow-Headers: accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with\n&lt; Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT\n&lt; Access-Control-Max-Age: 86400\n</code></pre>\n<p>For the production instance the Origin header needs to match a specific hardcoded list. I only put the production admin UI URL in there for now. This will need to change at some point to also include the domain for the production Delivery Console.</p>\n<p>If we land this, I guess our Dev and Stage uses the <code>Production</code> DJANGO_CONFIGURATION so we're going to need to manually add whatever domains we use for doing prototypes. E.g. rdalal.github.io or something.</p>", "id": 302461083, "title": "enable CORS for REST endpoints, fixes #954", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/1202", "diff_url": "https://github.com/mozilla/normandy/pull/1202.diff", "html_url": "https://github.com/mozilla/normandy/pull/1202", "patch_url": "https://github.com/mozilla/normandy/pull/1202.patch"}, "comments": 7, "state": "closed", "body": "This way the most primitive CORS is enabled for all things `/api/*`. You can test it like this:\r\n\r\n```\r\n\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\"  2>&1 | grep Access\r\n< Access-Control-Allow-Origin: *\r\n```\r\nand\r\n```\r\n\u25b6 curl -v -k https://localhost:8000/api/v2/recipe/ -H \"Origin: http://example.com\" -X OPTIONS 2>&1 | grep Access\r\n< Access-Control-Allow-Origin: *\r\n< Access-Control-Allow-Headers: accept, accept-encoding, authorization, content-type, dnt, origin, user-agent, x-csrftoken, x-requested-with\r\n< Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT\r\n< Access-Control-Max-Age: 86400\r\n```\r\n\r\nFor the production instance the Origin header needs to match a specific hardcoded list. I only put the production admin UI URL in there for now. This will need to change at some point to also include the domain for the production Delivery Console. \r\n\r\nIf we land this, I guess our Dev and Stage uses the `Production` DJANGO_CONFIGURATION so we're going to need to manually add whatever domains we use for doing prototypes. E.g. rdalal.github.io or something. ", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/1202/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/1202/labels{/name}", "author_association": "CONTRIBUTOR", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/1202/comments", "html_url": "https://github.com/mozilla/normandy/pull/1202", "updated_at": "2018-03-06T21:48:35Z", "user": {"following_url": "https://api.github.com/users/peterbe/following{/other_user}", "events_url": "https://api.github.com/users/peterbe/events{/privacy}", "organizations_url": "https://api.github.com/users/peterbe/orgs", "url": "https://api.github.com/users/peterbe", "gists_url": "https://api.github.com/users/peterbe/gists{/gist_id}", "html_url": "https://github.com/peterbe", "subscriptions_url": "https://api.github.com/users/peterbe/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/26739?v=4", "repos_url": "https://api.github.com/users/peterbe/repos", "received_events_url": "https://api.github.com/users/peterbe/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/peterbe/starred{/owner}{/repo}", "site_admin": false, "login": "peterbe", "type": "User", "id": 26739, "followers_url": "https://api.github.com/users/peterbe/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/1202", "created_at": "2018-03-05T21:00:57Z", "assignees": []}