{"original_position": 112, "diff_hunk": "@@ -0,0 +1,142 @@\n+import React, { PropTypes as pt } from 'react';\n+import uuid from 'node-uuid';\n+\n+import closest from 'client/utils/closest';\n+\n+/**\n+ * Simple component used to hide/show a block of content\n+ * based on focus/clicking. Uses a `trigger` property\n+ * to determine the element which should be used to\n+ * trigger the menu's appearance\n+ */\n+\n+export default class DropdownMenu extends React.Component {\n+  static propTypes = {\n+    // trigger is the element the user interacts with\n+    // to display the dropdown menu\n+    trigger: pt.node.isRequired,\n+    // children is the content displayed when open\n+    children: pt.any.isRequired,\n+    // track clicks to display menu?\n+    useClick: pt.bool,\n+    // track trigger's focus to display menu?\n+    useFocus: pt.bool,\n+    // pin the dropdown to the right edge\n+    // of the parent container?\n+    pinRight: pt.bool,\n+  };\n+\n+  constructor(props) {\n+    super(props);\n+\n+    // hidden by default\n+    this.state = {\n+      isVisible: false,\n+    };\n+\n+    this.toggleVisibility = ::this.toggleVisibility;\n+    this.onMenuBlur = ::this.onMenuBlur;\n+  }\n+\n+  /**\n+   * On mount, generates a new component ID\n+   * if one does not already exist.\n+   *\n+   * (This prevents components interfering,\n+   * due to how the component uses class selectors)\n+   *\n+   * @return {void}\n+   */\n+  componentDidMount() {\n+    this.id = this.id || `dropdown-menu-${uuid()}`;\n+  }\n+\n+  /**\n+   * On unmount, hides the modal (if visible)\n+   * and removes all relevant bindings.\n+   *\n+   * @return {void}\n+   */\n+  componentWillUnmount() {\n+    // just toggle it to hide when component unmounts\n+    // (this will automatically remove event bindings etc too)\n+    this.toggleVisibility(false);\n+  }\n+\n+  /**\n+   * Click handler to determine if user clicked inside the menu.\n+   * If the user clicked OUTSIDE of the menu, it is closed.\n+   *\n+   * @param  {MouseEvent} evt Original click event\n+   * @return {void}\n+   */\n+  onMenuBlur(evt) {\n+    // determine if the click was inside of this .dropdown-menu\n+    if (!closest(evt.target, `.${this.id}`)) {\n+      // and if so, close it\n+      this.toggleVisibility(false);\n+    }\n+  }\n+\n+  /**\n+   * Adds or removes click event handler on the body\n+   * (used to close menu if user clicks out of menu)\n+   * based on the `shouldBind` param.\n+   *\n+   * @param  {boolean} shouldBind Should the event be attached?\n+   * @return {void}\n+   */\n+  updateWindowBinding(shouldBind) {\n+    if (shouldBind) {\n+      document.body.addEventListener('click', this.onMenuBlur, true);\n+    } else {\n+      document.body.removeEventListener('click', this.onMenuBlur);\n+    }\n+  }\n+\n+  /**\n+   * Shows or hides the menu based on previous state\n+   * or if the `force` param is passed.\n+   * @param  {Boolean} force (Optional) Value to set visibility\n+   * @return {void}\n+   */\n+  toggleVisibility(force) {\n+    // if we get a parameter, use that instead of just straight up toggling\n+    const newVisibleState = typeof force === 'boolean' ? force : !this.state.isVisible;\n+\n+    this.setState({\n+      isVisible: newVisibleState,\n+    });\n+\n+    // add or remove the event based on visibility\n+    this.updateWindowBinding(newVisibleState);", "body_text": "This makes me think that the event handler will be added or removed, but the actual code of updateWindowBinding doesn't do that. Am I missing something?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/388", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/92687562", "created_at": "2016-12-15T19:55:33Z", "author_association": "MEMBER", "body": "This makes me think that the event handler will be added or removed, but the actual code of `updateWindowBinding` doesn't do that. Am I missing something?", "updated_at": "2016-12-19T16:56:33Z", "html_url": "https://github.com/mozilla/normandy/pull/388#discussion_r92687562", "pull_request_review_id": 13201086, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/92687562"}, "html": {"href": "https://github.com/mozilla/normandy/pull/388#discussion_r92687562"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/388"}}, "commit_id": "cb5179088a80658131dc4bf3ffbecebf8f8a82bb", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "client/control/components/DropdownMenu.js", "body_html": "<p>This makes me think that the event handler will be added or removed, but the actual code of <code>updateWindowBinding</code> doesn't do that. Am I missing something?</p>", "original_commit_id": "400d6c64e149a38d454dab8e57706d99b11f625f", "id": 92687562}