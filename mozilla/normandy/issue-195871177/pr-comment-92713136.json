{"original_position": 85, "diff_hunk": "@@ -0,0 +1,88 @@\n+import configureMockStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import * as localForage from 'localforage';\n+\n+import { initialState } from 'control/tests/fixtures';\n+import * as columnActions from 'control/actions/ColumnActions';\n+\n+import cloneArrayValues from 'client/utils/clone-array-values';\n+\n+const middlewares = [thunk];\n+const mockStore = configureMockStore(middlewares);\n+const store = mockStore({ ...initialState });\n+\n+describe('Column Actions', () => {\n+  afterEach(() => {\n+    store.clearActions();\n+    localForage.clear();\n+  });\n+\n+  describe('updateColumn', () => {\n+    it('creates an UPDATE_COLUMN action', () => {\n+      const {\n+        updateColumn,\n+        UPDATE_COLUMN,\n+      } = columnActions;\n+\n+      const expectedAction = {\n+        type: UPDATE_COLUMN,\n+        index: 0,\n+        isActive: true,\n+      };\n+\n+      store.dispatch(updateColumn({ ...expectedAction }));\n+      expect(store.getActions()).toContain({ ...expectedAction });\n+    });\n+  });\n+\n+  describe('saveLocalColumns', () => {\n+    it('uses localForage to save column setup locally', done => {\n+      const {\n+        saveLocalColumns,\n+        localStorageID,\n+      } = columnActions;\n+\n+      const testState = { test: true };\n+\n+      saveLocalColumns(testState, () => {\n+        localForage.getItem(localStorageID, (err, found) => {\n+          expect(err).toBeNull();\n+          expect(found).toEqual(testState);\n+          done();\n+        });\n+      });\n+    });\n+  });\n+\n+  describe('loadLocalColumns', () => {\n+    it('should load column setup from localForage and put it into the column store', done => {\n+      const {\n+        localStorageID,\n+        LOAD_SAVED_COLUMNS,\n+        loadLocalColumns,\n+      } = columnActions;\n+\n+      // fake some 'loaded' columns\n+      const expectedColumns = cloneArrayValues(initialState.columns);\n+      expectedColumns[0].testProperty = 'should exist';\n+\n+      // set the fake columns in memory\n+      localForage.setItem(localStorageID, expectedColumns)\n+        .then(() =>\n+          // fire the action\n+          store.dispatch(loadLocalColumns())\n+            .then(() => {\n+              // check that our property was added to the column\n+              expect(expectedColumns[0].testProperty).toEqual('should exist');\n+              // rest of the columns should still match\n+              expect(store.getActions()).toContain({\n+                type: LOAD_SAVED_COLUMNS,\n+                columns: expectedColumns,\n+              });\n+              // done testing\n+              done();\n+            })\n+        );", "body_text": "I was having issues getting async/await to work with the action/localForage, I can dig into it more, though.", "in_reply_to_id": 92691283, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/388", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/92713136", "created_at": "2016-12-15T22:22:15Z", "author_association": "CONTRIBUTOR", "body": "I was having issues getting async/await to work with the action/localForage, I can dig into it more, though.", "updated_at": "2016-12-19T16:56:33Z", "html_url": "https://github.com/mozilla/normandy/pull/388#discussion_r92713136", "pull_request_review_id": 13234449, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/92713136"}, "html": {"href": "https://github.com/mozilla/normandy/pull/388#discussion_r92713136"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/388"}}, "commit_id": "cb5179088a80658131dc4bf3ffbecebf8f8a82bb", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "client/control/tests/actions/test_columnActions.js", "body_html": "<p>I was having issues getting async/await to work with the action/localForage, I can dig into it more, though.</p>", "original_commit_id": "400d6c64e149a38d454dab8e57706d99b11f625f", "id": 92713136}