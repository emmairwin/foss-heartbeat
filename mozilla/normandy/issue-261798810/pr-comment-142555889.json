{"original_position": 67, "diff_hunk": "@@ -356,22 +358,80 @@ decorate_task(\n   }\n );\n \n+// Test init() first run\n decorate_task(\n   withPrefEnv({\n     set: [\n       [\"extensions.shield-recipe-client.dev_mode\", false],\n       [\"extensions.shield-recipe-client.first_run\", true],\n+      [\"extensions.shield-recipe-client.api_url\", \"https://example.com\"],\n     ],\n   }),\n   withStub(RecipeRunner, \"run\"),\n   withStub(RecipeRunner, \"registerTimer\"),\n-  async function testInitFirstRun(runStub, registerTimerStub) {\n+  withStub(RecipeRunner, \"watchPrefs\"),\n+  async function testInitFirstRun(runStub, registerTimerStub, watchPrefsStub) {\n     await RecipeRunner.init();\n     ok(runStub.called, \"RecipeRunner.run is called immediately on first run\");\n     ok(\n       !Services.prefs.getBoolPref(\"extensions.shield-recipe-client.first_run\"),\n       \"On first run, the first run pref is set to false\"\n     );\n     ok(registerTimerStub.called, \"RecipeRunner.registerTimer registers a timer\");\n+\n+    // RecipeRunner.init() sets this to false, but SpecialPowers\n+    // relies on the preferences it manages to actually change when it\n+    // tries to change them. Settings this back to true here allows\n+    // that to happen. Not doing this causes popPrefEnv to hang forever.\n+    Services.prefs.setBoolPref(\"extensions.shield-recipe-client.first_run\", true);\n+  }\n+);\n+\n+// Test that prefs are watched correctly\n+decorate_task(\n+  withPrefEnv({\n+    set: [\n+      [\"toolkit.telemetry.unified\", true],  // telemetry enabled\n+      [\"extensions.shield-recipe-client.dev_mode\", false],\n+      [\"extensions.shield-recipe-client.first_run\", false],\n+      [\"extensions.shield-recipe-client.enabled\", true],\n+      [\"extensions.shield-recipe-client.api_url\", \"https://example.com\"], // starts with \"https://\"\n+    ],\n+  }),\n+  withStub(RecipeRunner, \"run\"),\n+  withStub(RecipeRunner, \"enable\"),\n+  withStub(RecipeRunner, \"disable\"),\n+  withStub(CleanupManager, \"addCleanupHandler\"),\n+\n+  async function testPrefWatching(runStub, enableStub, disableStub, addCleanupHandlerStub) {\n+    await RecipeRunner.init();", "body_text": "Could we potentially have multiple watchers registered during this test (since this was already called at the start of the session)? Feels like that could cause some hard-to-trace test errors down the road.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1080", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/142555889", "created_at": "2017-10-04T00:09:13Z", "author_association": "MEMBER", "body": "Could we potentially have multiple watchers registered during this test (since this was already called at the start of the session)? Feels like that could cause some hard-to-trace test errors down the road.", "updated_at": "2017-10-17T23:40:17Z", "html_url": "https://github.com/mozilla/normandy/pull/1080#discussion_r142555889", "pull_request_review_id": 66925249, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/142555889"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1080#discussion_r142555889"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1080"}}, "commit_id": "256f439bd54cc922e7ccf6f536b1c271191953a7", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 67, "path": "recipe-client-addon/test/browser/browser_RecipeRunner.js", "body_html": "<p>Could we potentially have multiple watchers registered during this test (since this was already called at the start of the session)? Feels like that could cause some hard-to-trace test errors down the road.</p>", "original_commit_id": "cb52c6f500dbe6a01a5bee8dc1af3e7b753ab7d7", "id": 142555889}