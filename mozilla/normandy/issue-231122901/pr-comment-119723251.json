{"original_position": 63, "diff_hunk": "@@ -156,6 +156,68 @@ this.NormandyDriver = function(sandboxManager) {\n       sandboxManager.removeHold(`setTimeout-${token}`);\n     },\n \n+    /*\n+     * Return a promise that resolves to an Addon ID if installation is successful.\n+     */\n+    installAddon(url) {\n+        /* Install an addon.  Note that the AddonManager can only handle\n+         * file:// and downloadable URLs.\n+         */\n+\n+      var installObjectCallback = (installObject, resolve, reject) => {\n+        installObject.install();\n+        installObject.addListener({\n+          onInstallEnded: (addonInstall, addon) => {\n+            let addonId = addon.id;\n+            resolve(addonId);\n+          },\n+          onInstallFailed: (addonInstall) => {\n+            reject(`AddonInstall error code: [${addonInstall.error}]`);\n+          },\n+        });\n+      };\n+\n+      function installObjectPromise(installObject) {\n+        return new Promise(function(resolve, reject) {\n+          installObjectCallback(installObject, resolve, reject);\n+        });\n+      }\n+\n+      function getInstallForURLPromise(url) {\n+        return new Promise(function(resolve, reject) {\n+          AddonManager.getInstallForURL(url, resolve, 'application/x-xpinstall');\n+        });\n+      };\n+\n+      // Return a promise\n+      return getInstallForURLPromise(url).then(installObjectPromise);\n+    },\n+\n+    /*\n+     * Return a promise that resolves to a success messsage if\n+     * addon uninstall is successful.\n+     */\n+    uninstallAddon(addonId) {\n+      function uninstallPromise(id) {\n+        return new Promise(function(resolve, reject) {\n+          AddonManager.getAddonByID(id, addon => {\n+            if (addon != null) {\n+              try {\n+                addon.uninstall();\n+              } catch (e) {\n+                reject(\"Addon uninstall triggered an error\");\n+                return;\n+              }\n+            } else {\n+              reject(\"Addon is null - can't uninstall it\");\n+            }\n+            resolve();\n+          });\n+        });\n+      }\n+      return uninstallPromise(addonId);", "body_text": "I changed this to be an immediately invoked function as I need to capture the addonId within the Promise using a closure.", "in_reply_to_id": 119478154, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/778", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/119723251", "created_at": "2017-06-01T20:42:03Z", "author_association": "CONTRIBUTOR", "body": "I changed this to be an immediately invoked function as I need to capture the addonId within the Promise using a closure.", "updated_at": "2017-06-15T19:56:17Z", "html_url": "https://github.com/mozilla/normandy/pull/778#discussion_r119723251", "pull_request_review_id": 41630901, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/119723251"}, "html": {"href": "https://github.com/mozilla/normandy/pull/778#discussion_r119723251"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/778"}}, "commit_id": "dbb2b5aba2dd9803c76a77a0dae01a837d9bd9fe", "user": {"following_url": "https://api.github.com/users/crankycoder/following{/other_user}", "events_url": "https://api.github.com/users/crankycoder/events{/privacy}", "organizations_url": "https://api.github.com/users/crankycoder/orgs", "url": "https://api.github.com/users/crankycoder", "gists_url": "https://api.github.com/users/crankycoder/gists{/gist_id}", "html_url": "https://github.com/crankycoder", "subscriptions_url": "https://api.github.com/users/crankycoder/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/4829?v=4", "repos_url": "https://api.github.com/users/crankycoder/repos", "received_events_url": "https://api.github.com/users/crankycoder/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/crankycoder/starred{/owner}{/repo}", "site_admin": false, "login": "crankycoder", "type": "User", "id": 4829, "followers_url": "https://api.github.com/users/crankycoder/followers"}, "position": null, "path": "recipe-client-addon/lib/NormandyDriver.jsm", "body_html": "<p>I changed this to be an immediately invoked function as I need to capture the addonId within the Promise using a closure.</p>", "original_commit_id": "444db373a6c019ce7a4c7c2dd6e2a45c50724638", "id": 119723251}