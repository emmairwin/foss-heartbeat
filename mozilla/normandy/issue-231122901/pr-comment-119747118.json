{"original_position": 11, "diff_hunk": "@@ -12,6 +12,16 @@ add_task(withDriver(Assert, async function uuids(driver) {\n   isnot(uuid1, uuid2, \"uuids are unique\");\n }));\n \n+add_task(withDriver(Assert, async function installXpi(driver) {\n+  // Test that we can install an XPI from any URL\n+  const dir = getChromeDir(getResolvedURI(gTestPath));\n+  dir.append(\"fixtures\");\n+  dir.append(\"normandy.xpi\");\n+  const xpiUrl = Services.io.newFileURI(dir).spec;\n+  var addonId = await driver.installAddon(xpiUrl);\n+  await driver.uninstallAddon(addonId);", "body_text": "If this ever fails (partially or fully), I expect checking explicitly that addonId is not undefined (or whatever else installAddon returns if installation didn't work) and/or that there's an installed add-on with the returned ID, will result in more understandable failure messaging than \"uninstallAddon threw an error\" (because the install failed).\nMore generally, I'm surprised the ID would be what this returns, and that's all that it returns - the ID is available without installing the add-on...\nAlso, late nit: let please. :-)", "in_reply_to_id": 119476961, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/778", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/119747118", "created_at": "2017-06-01T22:42:38Z", "author_association": "CONTRIBUTOR", "body": "If this ever fails (partially or fully), I expect checking explicitly that `addonId` is not undefined (or whatever else `installAddon` returns if installation didn't work) and/or that there's an installed add-on with the returned ID, will result in more understandable failure messaging than \"uninstallAddon threw an error\" (because the install failed).\r\n\r\nMore generally, I'm surprised the ID would be what this returns, and that's all that it returns - the ID is available without installing the add-on...\r\n\r\nAlso, late nit: `let` please. :-)", "updated_at": "2017-06-15T19:56:17Z", "html_url": "https://github.com/mozilla/normandy/pull/778#discussion_r119747118", "pull_request_review_id": 41656365, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/119747118"}, "html": {"href": "https://github.com/mozilla/normandy/pull/778#discussion_r119747118"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/778"}}, "commit_id": "dbb2b5aba2dd9803c76a77a0dae01a837d9bd9fe", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/browser/browser_NormandyDriver.js", "body_html": "<p>If this ever fails (partially or fully), I expect checking explicitly that <code>addonId</code> is not undefined (or whatever else <code>installAddon</code> returns if installation didn't work) and/or that there's an installed add-on with the returned ID, will result in more understandable failure messaging than \"uninstallAddon threw an error\" (because the install failed).</p>\n<p>More generally, I'm surprised the ID would be what this returns, and that's all that it returns - the ID is available without installing the add-on...</p>\n<p>Also, late nit: <code>let</code> please. :-)</p>", "original_commit_id": "444db373a6c019ce7a4c7c2dd6e2a45c50724638", "id": 119747118}