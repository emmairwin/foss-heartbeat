{"body": "> What are the benefits of making this change?\r\n\r\nClient start up is unpredictable and out of our control. It means we have a different patterns of execution for the \"every 24 hours\" case and the startup case. The execution model I've proposed here should be more predictable and means we only have one way of triggering execution, instead of several.\r\n\r\n> If we can't get confirmation that other high-priority update mechanisms consider the client clock reliable, I don't think it's wise for us to make this assumption.\r\n\r\nI claim that add-on manager (at least) considers the clock to be reliable enough for updates. \r\n\r\n* The add-on manager [registers a timer callback with the `nsUpdateManagerTimer`](https://dxr.mozilla.org/mozilla-central/source/toolkit/mozapps/extensions/extensions.manifest#12).\r\n* The IDL function that references is [here](https://dxr.mozilla.org/mozilla-central/source/toolkit/components/timermanager/nsIUpdateTimerManager.idl#).\r\n* The actual JS code executed is in [nsUpdateManagerTimer.jsm](https://dxr.mozilla.org/mozilla-central/source/toolkit/components/timermanager/nsUpdateTimerManager.js#306-331).\r\n\r\nTracing that maze of fun times leads me to believe that the add-on manager, via the UpdateManagerTimer, trusts the system clock at least enough to do things about every 86400 seconds.", "body_text": "What are the benefits of making this change?\n\nClient start up is unpredictable and out of our control. It means we have a different patterns of execution for the \"every 24 hours\" case and the startup case. The execution model I've proposed here should be more predictable and means we only have one way of triggering execution, instead of several.\n\nIf we can't get confirmation that other high-priority update mechanisms consider the client clock reliable, I don't think it's wise for us to make this assumption.\n\nI claim that add-on manager (at least) considers the clock to be reliable enough for updates.\n\nThe add-on manager registers a timer callback with the nsUpdateManagerTimer.\nThe IDL function that references is here.\nThe actual JS code executed is in nsUpdateManagerTimer.jsm.\n\nTracing that maze of fun times leads me to believe that the add-on manager, via the UpdateManagerTimer, trusts the system clock at least enough to do things about every 86400 seconds.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/289161490", "created_at": "2017-03-24T22:50:27Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/588#issuecomment-289161490", "updated_at": "2017-03-24T22:50:27Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<blockquote>\n<p>What are the benefits of making this change?</p>\n</blockquote>\n<p>Client start up is unpredictable and out of our control. It means we have a different patterns of execution for the \"every 24 hours\" case and the startup case. The execution model I've proposed here should be more predictable and means we only have one way of triggering execution, instead of several.</p>\n<blockquote>\n<p>If we can't get confirmation that other high-priority update mechanisms consider the client clock reliable, I don't think it's wise for us to make this assumption.</p>\n</blockquote>\n<p>I claim that add-on manager (at least) considers the clock to be reliable enough for updates.</p>\n<ul>\n<li>The add-on manager <a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/mozapps/extensions/extensions.manifest#12\" rel=\"nofollow\">registers a timer callback with the <code>nsUpdateManagerTimer</code></a>.</li>\n<li>The IDL function that references is <a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/timermanager/nsIUpdateTimerManager.idl#\" rel=\"nofollow\">here</a>.</li>\n<li>The actual JS code executed is in <a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/timermanager/nsUpdateTimerManager.js#306-331\" rel=\"nofollow\">nsUpdateManagerTimer.jsm</a>.</li>\n</ul>\n<p>Tracing that maze of fun times leads me to believe that the add-on manager, via the UpdateManagerTimer, trusts the system clock at least enough to do things about every 86400 seconds.</p>", "id": 289161490, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/588"}