{"body": "> Perhaps obvious, but I would prefer a system that is robust to client clock.\r\n\r\nThis technique assumes that the client's clock is at least monotonic and increasing at about 1 second per second. We don't have any way to check the time more than that in a way that I'm happy with, for now. We'll use UTC to deal with time zones. The timestamps we use to test filter expressions come from the server, but that particular query happens to be one of the most expensive ones we have, so we definitely can't increase its load by 50x overnight.\r\n\r\n> Every startup (NECESARY TO handles experiment tagging for ongoing At least once per day for ongoing sessions.\r\n\r\nI can't parse this paragraph. Did something go wrong with a copy/paste?\r\n\r\n> Derail: Is there some etag/caching magic to allow more often than once per day cheaply?\r\n\r\nWe already cache things pretty heavily, so there isn't much of an easy solution here. We are looking at some more things to potentially improve performance in the future (mostly things that require the system add-on to be finished). Once we have this interval system in the wild, we can definitely experiment with running more than once a day.", "body_text": "Perhaps obvious, but I would prefer a system that is robust to client clock.\n\nThis technique assumes that the client's clock is at least monotonic and increasing at about 1 second per second. We don't have any way to check the time more than that in a way that I'm happy with, for now. We'll use UTC to deal with time zones. The timestamps we use to test filter expressions come from the server, but that particular query happens to be one of the most expensive ones we have, so we definitely can't increase its load by 50x overnight.\n\nEvery startup (NECESARY TO handles experiment tagging for ongoing At least once per day for ongoing sessions.\n\nI can't parse this paragraph. Did something go wrong with a copy/paste?\n\nDerail: Is there some etag/caching magic to allow more often than once per day cheaply?\n\nWe already cache things pretty heavily, so there isn't much of an easy solution here. We are looking at some more things to potentially improve performance in the future (mostly things that require the system add-on to be finished). Once we have this interval system in the wild, we can definitely experiment with running more than once a day.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/289142599", "created_at": "2017-03-24T21:04:52Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/588#issuecomment-289142599", "updated_at": "2017-03-24T21:04:52Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<blockquote>\n<p>Perhaps obvious, but I would prefer a system that is robust to client clock.</p>\n</blockquote>\n<p>This technique assumes that the client's clock is at least monotonic and increasing at about 1 second per second. We don't have any way to check the time more than that in a way that I'm happy with, for now. We'll use UTC to deal with time zones. The timestamps we use to test filter expressions come from the server, but that particular query happens to be one of the most expensive ones we have, so we definitely can't increase its load by 50x overnight.</p>\n<blockquote>\n<p>Every startup (NECESARY TO handles experiment tagging for ongoing At least once per day for ongoing sessions.</p>\n</blockquote>\n<p>I can't parse this paragraph. Did something go wrong with a copy/paste?</p>\n<blockquote>\n<p>Derail: Is there some etag/caching magic to allow more often than once per day cheaply?</p>\n</blockquote>\n<p>We already cache things pretty heavily, so there isn't much of an easy solution here. We are looking at some more things to potentially improve performance in the future (mostly things that require the system add-on to be finished). Once we have this interval system in the wild, we can definitely experiment with running more than once a day.</p>", "id": 289142599, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/588"}