{"body": "BTW I put up a patch on bug 1350471 - assuming I can land and uplift that in short order, you'd be able to set a timer like:\r\n\r\n```js\r\nlet SO_MANY_SECONDS = 1234;\r\nlet timerManager = Cc[\"@mozilla.org/updates/timer-manager;1\"].\r\n                   getService(Ci.nsIUpdateTimerManager);\r\ntimerManager.registerTimer(\"my-special-timer\", () => {\r\n  this.doVerySpecialThings();\r\n}, SO_MANY_SECONDS);\r\n```\r\n\r\nYou can also lazy-load the service if you want, with `XPCOMUtils.defineLazyServiceGetter`.\r\n\r\nWhen your add-on is shutdown or disabled, you can unregister it (you can either get the service again or keep the `timerManager` reference, either way):\r\n\r\n```\r\ntimerManager.unregisterTimer(\"my-special-timer\");\r\n```\r\n\r\nThen if the user shuts down before `SO_MANY_SECONDS`, the timer will continue where it left off when Firefox starts up again.", "body_text": "BTW I put up a patch on bug 1350471 - assuming I can land and uplift that in short order, you'd be able to set a timer like:\nlet SO_MANY_SECONDS = 1234;\nlet timerManager = Cc[\"@mozilla.org/updates/timer-manager;1\"].\n                   getService(Ci.nsIUpdateTimerManager);\ntimerManager.registerTimer(\"my-special-timer\", () => {\n  this.doVerySpecialThings();\n}, SO_MANY_SECONDS);\nYou can also lazy-load the service if you want, with XPCOMUtils.defineLazyServiceGetter.\nWhen your add-on is shutdown or disabled, you can unregister it (you can either get the service again or keep the timerManager reference, either way):\ntimerManager.unregisterTimer(\"my-special-timer\");\n\nThen if the user shuts down before SO_MANY_SECONDS, the timer will continue where it left off when Firefox starts up again.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/289296381", "created_at": "2017-03-26T16:42:52Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/588#issuecomment-289296381", "updated_at": "2017-03-27T18:02:24Z", "user": {"following_url": "https://api.github.com/users/rhelmer/following{/other_user}", "events_url": "https://api.github.com/users/rhelmer/events{/privacy}", "organizations_url": "https://api.github.com/users/rhelmer/orgs", "url": "https://api.github.com/users/rhelmer", "gists_url": "https://api.github.com/users/rhelmer/gists{/gist_id}", "html_url": "https://github.com/rhelmer", "subscriptions_url": "https://api.github.com/users/rhelmer/subscriptions", "avatar_url": "https://avatars0.githubusercontent.com/u/61412?v=4", "repos_url": "https://api.github.com/users/rhelmer/repos", "received_events_url": "https://api.github.com/users/rhelmer/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rhelmer/starred{/owner}{/repo}", "site_admin": false, "login": "rhelmer", "type": "User", "id": 61412, "followers_url": "https://api.github.com/users/rhelmer/followers"}, "body_html": "<p>BTW I put up a patch on bug 1350471 - assuming I can land and uplift that in short order, you'd be able to set a timer like:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">let</span> <span class=\"pl-c1\">SO_MANY_SECONDS</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1234</span>;\n<span class=\"pl-k\">let</span> timerManager <span class=\"pl-k\">=</span> Cc[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@mozilla.org/updates/timer-manager;1<span class=\"pl-pds\">\"</span></span>].\n                   <span class=\"pl-en\">getService</span>(<span class=\"pl-smi\">Ci</span>.<span class=\"pl-smi\">nsIUpdateTimerManager</span>);\n<span class=\"pl-smi\">timerManager</span>.<span class=\"pl-en\">registerTimer</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>my-special-timer<span class=\"pl-pds\">\"</span></span>, () <span class=\"pl-k\">=&gt;</span> {\n  <span class=\"pl-c1\">this</span>.<span class=\"pl-en\">doVerySpecialThings</span>();\n}, <span class=\"pl-c1\">SO_MANY_SECONDS</span>);</pre></div>\n<p>You can also lazy-load the service if you want, with <code>XPCOMUtils.defineLazyServiceGetter</code>.</p>\n<p>When your add-on is shutdown or disabled, you can unregister it (you can either get the service again or keep the <code>timerManager</code> reference, either way):</p>\n<pre><code>timerManager.unregisterTimer(\"my-special-timer\");\n</code></pre>\n<p>Then if the user shuts down before <code>SO_MANY_SECONDS</code>, the timer will continue where it left off when Firefox starts up again.</p>", "id": 289296381, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/588"}