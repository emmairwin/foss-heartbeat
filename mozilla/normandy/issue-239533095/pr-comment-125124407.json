{"original_position": 164, "diff_hunk": "@@ -0,0 +1,185 @@\n+import { Button, Col, Input, Pagination, Row, Table } from 'antd';\n+import autobind from 'autobind-decorator';\n+import moment from 'moment';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+import { bindActionCreators } from 'redux';\n+import { push as pushAction, Link } from 'redux-little-router';\n+\n+import BooleanIcon from 'control_new/components/common/BooleanIcon';\n+import LoadingOverlay from 'control_new/components/common/LoadingOverlay';\n+import QueryRecipes from 'control_new/components/data/QueryRecipes';\n+import ListingActionBar from 'control_new/components/recipes/ListingActionBar';\n+import DataList from 'control_new/components/tables/DataList';\n+import * as recipeActions from 'control_new/state/recipes/actions';\n+import {\n+  getRecipeListingColumns,\n+  getRecipeListingCount,\n+  getRecipeListingFlattenedAction,\n+} from 'control_new/state/recipes/selectors';\n+import {\n+  getCurrentURL,\n+  getQueryParameter,\n+} from 'control_new/state/router/selectors';\n+\n+\n+@connect(\n+  state => ({\n+    columns: getRecipeListingColumns(state),\n+    count: getRecipeListingCount(state),\n+    getCurrentURL: queryParams => getCurrentURL(state, queryParams),\n+    ordering: getQueryParameter(state, 'ordering', '-last_updated'),\n+    pageNumber: parseInt(getQueryParameter(state, 'page', 1), 10),\n+    recipes: getRecipeListingFlattenedAction(state),\n+    searchText: getQueryParameter(state, 'searchText'),\n+    status: getQueryParameter(state, 'status'),\n+  }),\n+  dispatch => (\n+    bindActionCreators({\n+      fetchFilteredRecipesPage: recipeActions.fetchFilteredRecipesPage,\n+      push: pushAction,\n+    }, dispatch)\n+  )\n+)\n+@autobind\n+export default class Listing extends React.Component {\n+  static propTypes = {\n+    columns: PropTypes.object,\n+    count: PropTypes.number,\n+    fetchFilteredRecipesPage: PropTypes.func.isRequired,\n+    getCurrentURL: PropTypes.func.isRequired,\n+    ordering: PropTypes.string,\n+    pageNumber: PropTypes.number,\n+    push: PropTypes.func.isRequired,\n+    recipes: PropTypes.object.isRequired,\n+    searchText: PropTypes.string,\n+    status: PropTypes.string,\n+  };\n+\n+  static columnRenderers = {\n+    name({ ordering }) {\n+      return (\n+        <Table.Column\n+          title=\"Name\"\n+          dataIndex=\"name\"\n+          key=\"name\"\n+          render={Listing.renderLinkedText}\n+          sortOrder={DataList.getSortOrder('name', ordering)}\n+          sorter\n+        />\n+      );\n+    },\n+\n+    action() {\n+      return (\n+        <Table.Column\n+          title=\"Action\"\n+          dataIndex=\"action\"\n+          key=\"action\"\n+          render={Listing.renderLinkedText}\n+        />\n+      );\n+    },\n+\n+    enabled({ status }) {\n+      return (\n+        <Table.Column\n+          title=\"Enabled\"\n+          key=\"status\"\n+          render={(text, record) => <BooleanIcon value={record.enabled} />}\n+          filters={[\n+            { text: 'Enabled', value: 'enabled' },\n+            { text: 'Disabled', value: 'disabled' },\n+          ]}\n+          filteredValue={status}\n+          filterMultiple={false}\n+        />\n+      );\n+    },\n+\n+    lastUpdated({ ordering }) {\n+      return (\n+        <Table.Column\n+          title=\"Last Updated\"\n+          key=\"last_updated\"\n+          dataIndex=\"last_updated\"\n+          render={(text, record) => {\n+            const lastUpdated = moment(record.last_updated);\n+            return (\n+              <Link href={`/recipes/${record.id}`} title={lastUpdated.format('LLLL')}>\n+                {lastUpdated.fromNow()}\n+              </Link>\n+            );\n+          }}\n+          sortOrder={DataList.getSortOrder('last_updated', ordering)}\n+          sorter\n+        />\n+      );\n+    },\n+  }\n+\n+  static renderLinkedText(text, record) {\n+    return <Link href={`/recipes/${record.id}`}>{text}</Link>;\n+  }\n+\n+  getFilters() {\n+    const { ordering, searchText, status } = this.props;\n+\n+    const filters = {\n+      text: searchText,\n+      ordering,\n+      status,\n+    };\n+\n+    Object.keys(filters).forEach(key => {\n+      if (filters[key] === undefined) {\n+        delete filters[key];\n+      }\n+    });\n+\n+    return filters;\n+  }\n+\n+  handleChangePage(page) {\n+    const { getCurrentURL, push } = this.props;\n+    push(getCurrentURL({ page }));\n+  }\n+\n+  handleRowClick(record) {\n+    const { push } = this.props;\n+    push(`recipes/${record.id}`);\n+  }\n+\n+  render() {\n+    const { columns, count, ordering, pageNumber, recipes, status } = this.props;\n+\n+    return (\n+      <div>\n+        <QueryRecipes\n+          pageNumber={pageNumber}\n+          filters={this.getFilters()}\n+        />\n+        <LoadingOverlay>\n+          <ListingActionBar />", "body_text": "UX nit: Currently, this spinner disables the New Recipe button while loading:\n\nwhich is minor, but if a user is not interested in the table data, we're holding them up from doing what they want. I'd suggest just moving ListingActionBar out from under the LoadingOverlay for this reason.\n--\nActually, better idea that requires more work: I think it'd look nice if we moved the New Recipe button up and in line with the breadcrumbs. That way, the only components 'attached' to the table are those that directly affect it.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/853", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/125124407", "created_at": "2017-06-30T20:29:58Z", "author_association": "CONTRIBUTOR", "body": "UX nit: Currently, this spinner disables the `New Recipe` button while loading:\r\n<img width=\"790\" alt=\"screen shot 2017-06-30 at 1 12 38 pm\" src=\"https://user-images.githubusercontent.com/2767162/27752800-b38840fa-5d97-11e7-8193-cdb095b17356.png\">\r\n\r\nwhich is minor, but if a user is not interested in the table data, we're holding them up from doing what they want. I'd suggest just moving `ListingActionBar` out from under the `LoadingOverlay` for this reason.\r\n\r\n--\r\n\r\nActually, better idea that requires more work: I think it'd look nice if we moved the `New Recipe` button up and in line with the breadcrumbs. That way, the only components 'attached' to the table are those that directly affect it.", "updated_at": "2017-07-06T17:40:09Z", "html_url": "https://github.com/mozilla/normandy/pull/853#discussion_r125124407", "pull_request_review_id": 47486592, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/125124407"}, "html": {"href": "https://github.com/mozilla/normandy/pull/853#discussion_r125124407"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/853"}}, "commit_id": "4a8fc065afa8b0106139016d8136ef876521d437", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-server/client/control_new/components/recipes/Listing.js", "body_html": "<p>UX nit: Currently, this spinner disables the <code>New Recipe</code> button while loading:<br>\n<a target=\"_blank\" href=\"https://user-images.githubusercontent.com/2767162/27752800-b38840fa-5d97-11e7-8193-cdb095b17356.png\"><img width=\"790\" alt=\"screen shot 2017-06-30 at 1 12 38 pm\" src=\"https://user-images.githubusercontent.com/2767162/27752800-b38840fa-5d97-11e7-8193-cdb095b17356.png\" style=\"max-width:100%;\"></a></p>\n<p>which is minor, but if a user is not interested in the table data, we're holding them up from doing what they want. I'd suggest just moving <code>ListingActionBar</code> out from under the <code>LoadingOverlay</code> for this reason.</p>\n<p>--</p>\n<p>Actually, better idea that requires more work: I think it'd look nice if we moved the <code>New Recipe</code> button up and in line with the breadcrumbs. That way, the only components 'attached' to the table are those that directly affect it.</p>", "original_commit_id": "4ae3be4c12bd584ff61a12b33ae7432989ec2722", "id": 125124407}