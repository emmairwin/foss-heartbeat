{"original_position": 108, "diff_hunk": "@@ -0,0 +1,185 @@\n+import { Button, Col, Input, Pagination, Row, Table } from 'antd';\n+import autobind from 'autobind-decorator';\n+import moment from 'moment';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+import { bindActionCreators } from 'redux';\n+import { push as pushAction, Link } from 'redux-little-router';\n+\n+import BooleanIcon from 'control_new/components/common/BooleanIcon';\n+import LoadingOverlay from 'control_new/components/common/LoadingOverlay';\n+import QueryRecipes from 'control_new/components/data/QueryRecipes';\n+import ListingActionBar from 'control_new/components/recipes/ListingActionBar';\n+import DataList from 'control_new/components/tables/DataList';\n+import * as recipeActions from 'control_new/state/recipes/actions';\n+import {\n+  getRecipeListingColumns,\n+  getRecipeListingCount,\n+  getRecipeListingFlattenedAction,\n+} from 'control_new/state/recipes/selectors';\n+import {\n+  getCurrentURL,\n+  getQueryParameter,\n+} from 'control_new/state/router/selectors';\n+\n+\n+@connect(\n+  state => ({\n+    columns: getRecipeListingColumns(state),\n+    count: getRecipeListingCount(state),\n+    getCurrentURL: queryParams => getCurrentURL(state, queryParams),\n+    ordering: getQueryParameter(state, 'ordering', '-last_updated'),\n+    pageNumber: parseInt(getQueryParameter(state, 'page', 1), 10),\n+    recipes: getRecipeListingFlattenedAction(state),\n+    searchText: getQueryParameter(state, 'searchText'),\n+    status: getQueryParameter(state, 'status'),\n+  }),\n+  dispatch => (\n+    bindActionCreators({\n+      fetchFilteredRecipesPage: recipeActions.fetchFilteredRecipesPage,\n+      push: pushAction,\n+    }, dispatch)\n+  )\n+)\n+@autobind\n+export default class Listing extends React.Component {\n+  static propTypes = {\n+    columns: PropTypes.object,\n+    count: PropTypes.number,\n+    fetchFilteredRecipesPage: PropTypes.func.isRequired,\n+    getCurrentURL: PropTypes.func.isRequired,\n+    ordering: PropTypes.string,\n+    pageNumber: PropTypes.number,\n+    push: PropTypes.func.isRequired,\n+    recipes: PropTypes.object.isRequired,\n+    searchText: PropTypes.string,\n+    status: PropTypes.string,\n+  };\n+\n+  static columnRenderers = {\n+    name({ ordering }) {\n+      return (\n+        <Table.Column\n+          title=\"Name\"\n+          dataIndex=\"name\"\n+          key=\"name\"\n+          render={Listing.renderLinkedText}\n+          sortOrder={DataList.getSortOrder('name', ordering)}\n+          sorter\n+        />\n+      );\n+    },\n+\n+    action() {\n+      return (\n+        <Table.Column\n+          title=\"Action\"\n+          dataIndex=\"action\"\n+          key=\"action\"\n+          render={Listing.renderLinkedText}\n+        />\n+      );\n+    },\n+\n+    enabled({ status }) {\n+      return (\n+        <Table.Column\n+          title=\"Enabled\"\n+          key=\"status\"\n+          render={(text, record) => <BooleanIcon value={record.enabled} />}\n+          filters={[\n+            { text: 'Enabled', value: 'enabled' },\n+            { text: 'Disabled', value: 'disabled' },\n+          ]}\n+          filteredValue={status}\n+          filterMultiple={false}\n+        />\n+      );\n+    },\n+\n+    lastUpdated({ ordering }) {\n+      return (\n+        <Table.Column\n+          title=\"Last Updated\"\n+          key=\"last_updated\"\n+          dataIndex=\"last_updated\"\n+          render={(text, record) => {\n+            const lastUpdated = moment(record.last_updated);", "body_text": "We use ISO-8601 date strings so we don't need to pass the format in.", "in_reply_to_id": 125123516, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/853", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/125965498", "created_at": "2017-07-06T17:33:16Z", "author_association": "MEMBER", "body": "We use ISO-8601 date strings so we don't need to pass the format in.", "updated_at": "2017-07-06T17:40:09Z", "html_url": "https://github.com/mozilla/normandy/pull/853#discussion_r125965498", "pull_request_review_id": 48407459, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/125965498"}, "html": {"href": "https://github.com/mozilla/normandy/pull/853#discussion_r125965498"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/853"}}, "commit_id": "4a8fc065afa8b0106139016d8136ef876521d437", "user": {"following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "url": "https://api.github.com/users/rehandalal", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "html_url": "https://github.com/rehandalal", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "repos_url": "https://api.github.com/users/rehandalal/repos", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "site_admin": false, "login": "rehandalal", "type": "User", "id": 987136, "followers_url": "https://api.github.com/users/rehandalal/followers"}, "position": 114, "path": "recipe-server/client/control_new/components/recipes/Listing.js", "body_html": "<p>We use ISO-8601 date strings so we don't need to pass the format in.</p>", "original_commit_id": "4ae3be4c12bd584ff61a12b33ae7432989ec2722", "id": 125965498}