{"body_text": "In the past, self-repair has had a few issues where a recipe config or bug caused a recipe to behave wrongly at a time when none of the people able to change recipes were online. For example, the issue of localStorage being disabled by privacy add-ons + a recipe sent to 100% of Australian users caused surveys to reappear every launch for many users.\nTo address this, we'd like to add a shutoff valve for recipes that temporarily disables all recipes being sent out to users. This switch will be made available to the MOC, who have IT staff on shift around the clock who can respond to reports of widespread issues with recipes. The MOC can flip the switch when issues arise, and once admins or devs come online, they can resolve the issue and re-enable recipe delivery.\nSpec\nThe shutoff valve should be a flag that controls all recipes being sent out, independent of their Enabled/Disabled status. If the shutoff valve is on, the recipe API should respond as if there are no enabled recipes. Switching the flag on or off should not modify recipes themselves, only their delivery.\nThe control interface will need a form for turning the shutoff valve off and on. Turning it on should require a comment explaining why user is disabling recipe deliver (preferably with a related bug number or something).\nWe'll probably want a new Django permission to grant access to the shutoff valve.\nOpen Questions\n\nHow will the MOC maintain a list of accounts that can access the shutoff valve?\nWhere do we put navigation in the site design to link to the shutoff valve?\nWhat are the criteria for the MOC to identify a reported issue as being related to Normandy?\n\nrob an come up with numbers of complaints that matter\nPoint to doc page of actions\nlist of experiments / recipes internal visible", "labels": [], "number": 324, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-10-18T18:16:46Z", "body_html": "<p>In the past, self-repair has had a few issues where a recipe config or bug caused a recipe to behave wrongly at a time when none of the people able to change recipes were online. For example, the issue of localStorage being disabled by privacy add-ons + a recipe sent to 100% of Australian users caused surveys to reappear every launch for many users.</p>\n<p>To address this, we'd like to add a shutoff valve for recipes that temporarily disables all recipes being sent out to users. This switch will be made available to the MOC, who have IT staff on shift around the clock who can respond to reports of widespread issues with recipes. The MOC can flip the switch when issues arise, and once admins or devs come online, they can resolve the issue and re-enable recipe delivery.</p>\n<h2>Spec</h2>\n<p>The shutoff valve should be a flag that controls <em>all</em> recipes being sent out, independent of their Enabled/Disabled status. If the shutoff valve is on, the recipe API should respond as if there are no enabled recipes. Switching the flag on or off should not modify recipes themselves, only their delivery.</p>\n<p>The control interface will need a form for turning the shutoff valve off and on. Turning it on should require a comment explaining why user is disabling recipe deliver (preferably with a related bug number or something).</p>\n<p>We'll probably want a new Django permission to grant access to the shutoff valve.</p>\n<h2>Open Questions</h2>\n<ul>\n<li>How will the MOC maintain a list of accounts that can access the shutoff valve?</li>\n<li>Where do we put navigation in the site design to link to the shutoff valve?</li>\n<li>What are the criteria for the MOC to identify a reported issue as being related to Normandy?\n<ul>\n<li>rob an come up with numbers of complaints that matter</li>\n<li>Point to doc page of actions</li>\n<li>list of experiments / recipes internal visible</li>\n</ul>\n</li>\n</ul>", "id": 189232584, "title": "Global Shutoff Valve", "comments": 1, "state": "closed", "body": "In the past, self-repair has had a few issues where a recipe config or bug caused a recipe to behave wrongly at a time when none of the people able to change recipes were online. For example, the issue of localStorage being disabled by privacy add-ons + a recipe sent to 100% of Australian users caused surveys to reappear every launch for many users.\r\n\r\nTo address this, we'd like to add a shutoff valve for recipes that temporarily disables all recipes being sent out to users. This switch will be made available to the MOC, who have IT staff on shift around the clock who can respond to reports of widespread issues with recipes. The MOC can flip the switch when issues arise, and once admins or devs come online, they can resolve the issue and re-enable recipe delivery.\r\n\r\n## Spec\r\nThe shutoff valve should be a flag that controls _all_ recipes being sent out, independent of their Enabled/Disabled status. If the shutoff valve is on, the recipe API should respond as if there are no enabled recipes. Switching the flag on or off should not modify recipes themselves, only their delivery.\r\n\r\nThe control interface will need a form for turning the shutoff valve off and on. Turning it on should require a comment explaining why user is disabling recipe deliver (preferably with a related bug number or something). \r\n\r\nWe'll probably want a new Django permission to grant access to the shutoff valve. \r\n\r\n## Open Questions\r\n- How will the MOC maintain a list of accounts that can access the shutoff valve?\r\n- Where do we put navigation in the site design to link to the shutoff valve?\r\n- What are the criteria for the MOC to identify a reported issue as being related to Normandy?\r\n  - rob an come up with numbers of complaints that matter\r\n  - Point to doc page of actions\r\n  - list of experiments / recipes internal visible", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/324/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/324/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/324/comments", "html_url": "https://github.com/mozilla/normandy/issues/324", "updated_at": "2017-10-18T18:16:46Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/324", "created_at": "2016-11-14T21:33:58Z", "assignees": []}