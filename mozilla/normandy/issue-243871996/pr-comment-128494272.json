{"original_position": 57, "diff_hunk": "@@ -212,25 +212,37 @@ add_task(async function testStartup() {\n   const addCleanupHandlerStub = sinon.stub(CleanupManager, \"addCleanupHandler\");\n   const updateRunIntervalStub = sinon.stub(RecipeRunner, \"updateRunInterval\");\n \n-  // in dev mode\n-  await SpecialPowers.pushPrefEnv({set: [[\"extensions.shield-recipe-client.dev_mode\", true]]});\n-  RecipeRunner.init();\n-  ok(runStub.called, \"RecipeRunner.run is called immediately when in dev mode\");\n-  ok(addCleanupHandlerStub.called, \"A cleanup function is registered when in dev mode\");\n-  ok(updateRunIntervalStub.called, \"A timer is registered when in dev mode\");\n-\n-  runStub.reset();\n-  addCleanupHandlerStub.reset();\n-  updateRunIntervalStub.reset();\n-\n-  // not in dev mode\n-  await SpecialPowers.pushPrefEnv({set: [[\"extensions.shield-recipe-client.dev_mode\", false]]});\n-  RecipeRunner.init();\n-  ok(!runStub.called, \"RecipeRunner.run is not called immediately when not in dev mode\");\n-  ok(addCleanupHandlerStub.called, \"A cleanup function is registered when not in dev mode\");\n-  ok(updateRunIntervalStub.called, \"A timer is registered when not in dev mode\");\n-\n-  runStub.restore();\n-  addCleanupHandlerStub.restore();\n-  updateRunIntervalStub.restore();\n+  const UI_AVAILABLE_NOTIFICATION = \"sessionstore-windows-restored\";\n+  const observer = {\n+    observe: async function(subject, topic, data) {\n+      Services.obs.removeObserver(this, UI_AVAILABLE_NOTIFICATION);\n+\n+      // in dev mode\n+      await SpecialPowers.pushPrefEnv({set: [[\"extensions.shield-recipe-client.dev_mode\", true]]});\n+      RecipeRunner.init();\n+      ok(runStub.called, \"RecipeRunner.run is called immediately when in dev mode\");\n+      ok(addCleanupHandlerStub.called, \"A cleanup function is registered when in dev mode\");\n+      ok(updateRunIntervalStub.called, \"A timer is registered when in dev mode\");\n+\n+      runStub.reset();\n+      addCleanupHandlerStub.reset();\n+      updateRunIntervalStub.reset();\n+\n+      // not in dev mode\n+      await SpecialPowers.pushPrefEnv({set: [[\"extensions.shield-recipe-client.dev_mode\", false]]});\n+      RecipeRunner.init();\n+      ok(!runStub.called, \"RecipeRunner.run is not called immediately when not in dev mode\");\n+      ok(addCleanupHandlerStub.called, \"A cleanup function is registered when not in dev mode\");\n+      ok(updateRunIntervalStub.called, \"A timer is registered when not in dev mode\");\n+\n+      runStub.restore();\n+      addCleanupHandlerStub.restore();\n+      updateRunIntervalStub.restore();\n+    },\n+    QueryInterface: XPCOMUtils.generateQI([\n+      Components.interfaces.nsIObserver,\n+      Components.interfaces.nsISupportsWeakReference,\n+    ]),\n+  };\n+  Services.obs.addObserver(observer, UI_AVAILABLE_NOTIFICATION);", "body_text": "I have to admit I don't understand this change. Surely there's no guarantee that the test runs after this observer notification has been sent? Where is it being sent instead?", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/895", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128494272", "created_at": "2017-07-20T11:55:48Z", "author_association": "CONTRIBUTOR", "body": "I have to admit I don't understand this change. Surely there's no guarantee that the test runs after this observer notification has been sent? Where is it being sent instead?", "updated_at": "2017-07-25T22:42:16Z", "html_url": "https://github.com/mozilla/normandy/pull/895#discussion_r128494272", "pull_request_review_id": 51176289, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128494272"}, "html": {"href": "https://github.com/mozilla/normandy/pull/895#discussion_r128494272"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/895"}}, "commit_id": "deccb8340392e8e09d93edd04c80950e3c946aef", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/test/browser/browser_RecipeRunner.js", "body_html": "<p>I have to admit I don't understand this change. Surely there's no guarantee that the test runs after this observer notification has been sent? Where is it being sent instead?</p>", "original_commit_id": "8ac29d09a56d0daf224336ee765f3b8631446f06", "id": 128494272}