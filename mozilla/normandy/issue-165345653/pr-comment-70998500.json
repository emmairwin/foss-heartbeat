{"original_position": 12, "diff_hunk": "@@ -28,6 +31,46 @@ def test_it_works(self, rf):\n             'is_approved': recipe.is_approved\n         }\n \n+    def test_it_validates_arguments(self):", "body_text": "@rehandalal ummm, are these on the right track?\nI want to test the serializer with 3 different sets of data --\n\nwith an invalid action name, as it would not be able to find an arguments_schema to validate against\nwith a valid action, but invalid arguments, so it returns the right error formatting for arguments\nwith all valid data so it raises no errors\n\nIs there a concept of isolating these different scenarios in pytest? Like in JavaScript you would wrap them all in a describe block then isolate each case into an it block.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/196", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/70998500", "created_at": "2016-07-15T16:09:46Z", "author_association": "CONTRIBUTOR", "body": "@rehandalal ummm, are these on the right track?\n\nI want to test the serializer with 3 different sets of data -- \n1. with an invalid action name, as it would not be able to find an arguments_schema to validate against\n2. with a valid action, but invalid arguments, so it returns the right error formatting for `arguments`\n3. with all valid data so it raises no errors\n\nIs there a concept of isolating these different scenarios in pytest? Like in JavaScript you would wrap them all in a `describe` block then isolate each case into an `it` block.\n", "updated_at": "2016-07-19T14:15:13Z", "html_url": "https://github.com/mozilla/normandy/pull/196#discussion_r70998500", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/70998500"}, "html": {"href": "https://github.com/mozilla/normandy/pull/196#discussion_r70998500"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/196"}}, "commit_id": "307546e51d66ab4f9a66874cf756a949629c932a", "user": {"following_url": "https://api.github.com/users/brittanystoroz/following{/other_user}", "events_url": "https://api.github.com/users/brittanystoroz/events{/privacy}", "organizations_url": "https://api.github.com/users/brittanystoroz/orgs", "url": "https://api.github.com/users/brittanystoroz", "gists_url": "https://api.github.com/users/brittanystoroz/gists{/gist_id}", "html_url": "https://github.com/brittanystoroz", "subscriptions_url": "https://api.github.com/users/brittanystoroz/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/856935?v=4", "repos_url": "https://api.github.com/users/brittanystoroz/repos", "received_events_url": "https://api.github.com/users/brittanystoroz/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/brittanystoroz/starred{/owner}{/repo}", "site_admin": false, "login": "brittanystoroz", "type": "User", "id": 856935, "followers_url": "https://api.github.com/users/brittanystoroz/followers"}, "position": null, "path": "normandy/recipes/tests/test_serializers.py", "body_html": "<p><a class=\"user-mention\" href=\"https://github.com/rehandalal\">@rehandalal</a> ummm, are these on the right track?</p>\n<p>I want to test the serializer with 3 different sets of data --</p>\n<ol>\n<li>with an invalid action name, as it would not be able to find an arguments_schema to validate against</li>\n<li>with a valid action, but invalid arguments, so it returns the right error formatting for <code>arguments</code></li>\n<li>with all valid data so it raises no errors</li>\n</ol>\n<p>Is there a concept of isolating these different scenarios in pytest? Like in JavaScript you would wrap them all in a <code>describe</code> block then isolate each case into an <code>it</code> block.</p>", "original_commit_id": "370299f357a508f1e20a48cfa8663db984c818ca", "id": 70998500}