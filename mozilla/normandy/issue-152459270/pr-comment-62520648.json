{"original_position": 156, "diff_hunk": "@@ -0,0 +1,173 @@\n+import apiFetch from '../utils/apiFetch.js';\n+\n+export const REQUEST_IN_PROGRESS = 'REQUEST_IN_PROGRESS';\n+export const REQUEST_COMPLETE = 'REQUEST_COMPLETE';\n+\n+export const RECIPES_RECEIVED = 'RECIPES_RECEIVED';\n+export const SINGLE_RECIPE_RECEIVED = 'SINGLE_RECIPE_RECEIVED';\n+\n+export const SET_SELECTED_RECIPE = 'SET_SELECTED_RECIPE';\n+\n+export const RECIPE_ADDED = 'RECIPE_ADDED';\n+export const RECIPE_UPDATED = 'RECIPE_UPDATED';\n+export const RECIPE_DELETED = 'RECIPE_DELETED';\n+\n+\n+const BASE_API_URL = '/api/v1/recipe/';\n+\n+const API_REQUEST_SETTINGS = {\n+  credentials: 'include',\n+  headers: {\n+    'X-CSRFToken': document.getElementsByTagName('html')[0].dataset.csrf\n+  }\n+};\n+\n+const apiRequestMap = {\n+  fetchAllRecipes(settings, getState) {\n+    if (shouldFetchRecipes(getState())) {\n+      return {\n+        url: BASE_API_URL,\n+        settings: {\n+          method: 'get'\n+        },\n+        actionOnSuccess: recipesReceived\n+      };\n+    } else {\n+      return null;\n+    }\n+  },\n+\n+  fetchSingleRecipe(recipeInfo) {\n+    return {\n+      url: `${BASE_API_URL}${recipeInfo.recipeId}/`,\n+      settings: {\n+        method: 'get'\n+      },\n+      actionOnSuccess: singleRecipeReceived\n+    };\n+  },\n+\n+  addRecipe(recipeInfo) {\n+    return {\n+      url: BASE_API_URL,\n+      settings: {\n+        data: recipeInfo,\n+        method: 'post'\n+      },\n+      actionOnSuccess: recipeAdded\n+    };\n+  },\n+\n+  updateRecipe(recipeInfo) {\n+    return {\n+      url: `${BASE_API_URL}${recipeInfo.recipeId}/`,\n+      settings: {\n+        data: recipeInfo.recipe,\n+        method: 'patch'\n+      },\n+      actionOnSuccess: recipeUpdated\n+    };\n+  },\n+\n+  deleteRecipe(recipeInfo) {\n+    return {\n+      url: `${BASE_API_URL}${recipeInfo.recipeId}/`,\n+      settings: {\n+        method: 'delete'\n+      },\n+      actionOnSuccess: recipeDeleted,\n+      successActionParams: recipeInfo.recipeId\n+    };\n+  }\n+};\n+\n+\n+function requestInProgress() {\n+  return {\n+    type: REQUEST_IN_PROGRESS\n+  };\n+}\n+\n+function requestComplete(status) {\n+  return {\n+    type: REQUEST_COMPLETE,\n+    status: status\n+  };\n+}\n+\n+function recipesReceived(recipes) {\n+  return {\n+    type: RECIPES_RECEIVED,\n+    recipes\n+  };\n+}\n+\n+function singleRecipeReceived(recipe) {\n+  return {\n+    type: SINGLE_RECIPE_RECEIVED,\n+    recipe\n+  };\n+}\n+\n+function recipeAdded(recipe) {\n+  return {\n+    type: RECIPE_ADDED,\n+    recipe\n+  };\n+}\n+\n+function recipeUpdated(recipe) {\n+  return {\n+    type: RECIPE_UPDATED,\n+    recipe\n+  };\n+}\n+\n+function recipeDeleted(recipeId) {\n+  return {\n+    type: RECIPE_DELETED,\n+    recipeId\n+  };\n+}\n+\n+function shouldFetchRecipes(state) {\n+  if (state.controlApp.recipeListNeedsFetch === true &&\n+      state.controlApp.isFetching === false) {\n+    return true;\n+  } else {\n+    return false;\n+  }\n+}\n+\n+export function setSelectedRecipe(recipeId) {\n+  return {\n+    type: SET_SELECTED_RECIPE,\n+    recipeId\n+  };\n+}\n+\n+export function makeApiRequest(requestType, settings) {\n+  return (dispatch, getState) => {\n+    let apiRequestConfig = apiRequestMap[requestType](settings, getState);\n+    if (apiRequestConfig) {\n+      dispatch(requestInProgress());\n+      return apiFetch(apiRequestConfig.url, {\n+        ...apiRequestConfig.settings,\n+        ...API_REQUEST_SETTINGS", "body_text": "the order of these two should probably be flipped?\n...API_REQUEST_SETTINGS,\n...apiRequestConfig.settings", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/130", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62520648", "created_at": "2016-05-09T15:37:37Z", "author_association": "MEMBER", "body": "the order of these two should probably be flipped?\n\n``` es6\n...API_REQUEST_SETTINGS,\n...apiRequestConfig.settings\n```\n", "updated_at": "2016-05-09T21:42:05Z", "html_url": "https://github.com/mozilla/normandy/pull/130#discussion_r62520648", "pull_request_review_id": null, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/62520648"}, "html": {"href": "https://github.com/mozilla/normandy/pull/130#discussion_r62520648"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/130"}}, "commit_id": "fe2803e4d8c6aacbe1e624d979c6c7ec17a91ae5", "user": {"following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "url": "https://api.github.com/users/rehandalal", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "html_url": "https://github.com/rehandalal", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "repos_url": "https://api.github.com/users/rehandalal/repos", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "site_admin": false, "login": "rehandalal", "type": "User", "id": 987136, "followers_url": "https://api.github.com/users/rehandalal/followers"}, "position": null, "path": "normandy/control/static/control/js/actions/ControlActions.js", "body_html": "<p>the order of these two should probably be flipped?</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">...</span>API_REQUEST_SETTINGS,\n<span class=\"pl-k\">...</span><span class=\"pl-smi\">apiRequestConfig</span>.<span class=\"pl-smi\">settings</span></pre></div>", "original_commit_id": "6967ad090deb55e083e6613d016949aa7ab3c7d3", "id": 62520648}