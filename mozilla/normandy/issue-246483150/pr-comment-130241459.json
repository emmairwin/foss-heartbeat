{"original_position": 90, "diff_hunk": "@@ -0,0 +1,133 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\"use strict\";\n+\n+const {utils: Cu} = Components;\n+Cu.import(\"resource://gre/modules/Services.jsm\");\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+\n+XPCOMUtils.defineLazyModuleGetter(\n+  this, \"AppConstants\", \"resource://gre/modules/AppConstants.jsm\"\n+);\n+XPCOMUtils.defineLazyModuleGetter(\n+  this, \"CleanupManager\", \"resource://shield-recipe-client/lib/CleanupManager.jsm\"\n+);\n+\n+this.EXPORTED_SYMBOLS = [\"ShieldPreferences\"];\n+\n+const XUL_NS = \"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\";\n+const NS_PREFBRANCH_PREFCHANGE_TOPIC_ID = \"nsPref:changed\"; // from modules/libpref/nsIPrefBranch.idl\n+const FHR_UPLOAD_ENABLED_PREF = \"datareporting.healthreport.uploadEnabled\";\n+const OPT_OUT_STUDIES_ENABLED_PREF = \"app.shield.optoutstudies.enabled\";\n+\n+/**\n+ * Handles Shield-specific preferences, including their UI.\n+ */\n+this.ShieldPreferences = {\n+  async init() {\n+    // Disabled outside of en-* locales temporarily (bug 1377192).\n+    // Disabled when MOZ_DATA_REPORTING is false since the FHR UI is also hidden\n+    // when data reporting is false.\n+    if (AppConstants.MOZ_DATA_REPORTING && Services.locale.getAppLocaleAsLangTag().startsWith(\"en\")) {\n+      Services.obs.addObserver(this, \"advanced-pane-loaded\");\n+      Services.prefs.addObserver(FHR_UPLOAD_ENABLED_PREF, this);\n+\n+      CleanupManager.addCleanupHandler(() => {\n+        Services.obs.removeObserver(this, \"advanced-pane-loaded\");\n+        Services.prefs.removeObserver(FHR_UPLOAD_ENABLED_PREF, this);\n+      });\n+    }\n+  },\n+\n+  observe(subject, topic, data) {\n+    switch (topic) {\n+      // Add the opt-out-study checkbox to the Privacy preferences when it is shown.\n+      case \"advanced-pane-loaded\":\n+        if (!Services.prefs.getBoolPref(\"browser.preferences.useOldOrganization\", false)) {\n+          const checkbox = new this.OptOutStudyCheckbox(subject.document);\n+          checkbox.inject();\n+        }\n+        break;\n+      // If the FHR pref changes, set the opt-out-study pref to the value it is changing to.\n+      case NS_PREFBRANCH_PREFCHANGE_TOPIC_ID:\n+        if (data === FHR_UPLOAD_ENABLED_PREF) {\n+          const fhrUploadEnabled = Services.prefs.getBoolPref(FHR_UPLOAD_ENABLED_PREF);\n+          Services.prefs.setBoolPref(OPT_OUT_STUDIES_ENABLED_PREF, fhrUploadEnabled);\n+        }\n+        break;\n+    }\n+  },\n+\n+  /**\n+   * Injects the opt-out-study preference checkbox into about:preferences and\n+   * handles events coming from the UI for it.\n+   */\n+  OptOutStudyCheckbox: class {\n+    constructor(document) {\n+      this.document = document;\n+      this.refs = {};\n+\n+      const container = this.refs.container = document.createElementNS(XUL_NS, \"vbox\");\n+      container.classList.add(\"indent\");\n+\n+      const hContainer = this.refs.hContainer = document.createElementNS(XUL_NS, \"hbox\");\n+      hContainer.setAttribute(\"align\", \"center\");\n+      container.appendChild(hContainer);\n+\n+      const checkbox = this.refs.checkbox = document.createElementNS(XUL_NS, \"checkbox\");\n+      checkbox.setAttribute(\"id\", \"optOutStudiesEnabled\");\n+      checkbox.setAttribute(\"label\", \"Allow Firefox to install and run studies\");\n+      checkbox.setAttribute(\"preference\", OPT_OUT_STUDIES_ENABLED_PREF);\n+      checkbox.setAttribute(\"checked\", Services.prefs.getBoolPref(OPT_OUT_STUDIES_ENABLED_PREF));\n+      checkbox.setAttribute(\"disabled\", !Services.prefs.getBoolPref(FHR_UPLOAD_ENABLED_PREF));\n+      hContainer.appendChild(checkbox);\n+\n+      const viewStudies = this.refs.viewStudies = document.createElementNS(XUL_NS, \"label\");\n+      viewStudies.setAttribute(\"id\", \"viewShieldStudies\");\n+      viewStudies.textContent = \"View Firefox Studies\";\n+      viewStudies.classList.add(\"learnMore\", \"text-link\");\n+      viewStudies.addEventListener(\"click\", this);", "body_text": "No, it's not, but the XBL binding for label.text-link[href] does a manual security check against a null principal ( http://searchfox.org/mozilla-central/rev/09c065976fd4f18d4ad764d7cb4bbc684bf56714/toolkit/content/widgets/text.xml#315-329 ), which is unfortunate. You can add useoriginprincipal as well, and then it should work. https://bugzilla.mozilla.org/show_bug.cgi?id=315166 added the original restriction because in some cases, the URLs are controlled by people other than us. That isn't the case here, so we should be OK with the added attribute.", "in_reply_to_id": 130218463, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/938", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130241459", "created_at": "2017-07-30T12:43:54Z", "author_association": "CONTRIBUTOR", "body": "No, it's not, but the XBL binding for `label.text-link[href]` does a manual security check against a null principal ( http://searchfox.org/mozilla-central/rev/09c065976fd4f18d4ad764d7cb4bbc684bf56714/toolkit/content/widgets/text.xml#315-329 ), which is unfortunate. You can add `useoriginprincipal` as well, and then it should work. https://bugzilla.mozilla.org/show_bug.cgi?id=315166 added the original restriction because in some cases, the URLs are controlled by people other than us. That isn't the case here, so we should be OK with the added attribute.", "updated_at": "2017-08-08T20:07:34Z", "html_url": "https://github.com/mozilla/normandy/pull/938#discussion_r130241459", "pull_request_review_id": 53095978, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/130241459"}, "html": {"href": "https://github.com/mozilla/normandy/pull/938#discussion_r130241459"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/938"}}, "commit_id": "b057e9026915ddfa6f4ef93147a888f34bb2aba1", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/lib/ShieldPreferences.jsm", "body_html": "<p>No, it's not, but the XBL binding for <code>label.text-link[href]</code> does a manual security check against a null principal ( <a href=\"http://searchfox.org/mozilla-central/rev/09c065976fd4f18d4ad764d7cb4bbc684bf56714/toolkit/content/widgets/text.xml#315-329\" rel=\"nofollow\">http://searchfox.org/mozilla-central/rev/09c065976fd4f18d4ad764d7cb4bbc684bf56714/toolkit/content/widgets/text.xml#315-329</a> ), which is unfortunate. You can add <code>useoriginprincipal</code> as well, and then it should work. <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=315166\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=315166</a> added the original restriction because in some cases, the URLs are controlled by people other than us. That isn't the case here, so we should be OK with the added attribute.</p>", "original_commit_id": "8bdd2c8556f5399ba2f373a6ffa54a6e95efa229", "id": 130241459}