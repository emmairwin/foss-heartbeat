{"body": "Seems like there are two feasible options:\r\n\r\n1. Write a wrapper for Selenium that has a similar API as its built-in select stuff, but that actually ends up simulating clicks on the Ant non-select UI. I mildly think this is the better option. @18epedersen, would having to do this severely delay the rest of your work on these tests?\r\n\r\n2. Write a component that wraps the Ant select component and injects a hidden select into the DOM that mirrors the Ant select. I think we might be able to just inject the props coming from the form into both elements and it'll \"just work\". We'd have to loop over the children passed in and convert them to standard DOM options, but that's probably not the worst?\r\n\r\n   I'm only kinda guessing that that'd work though. We'd need to test it.", "body_text": "Seems like there are two feasible options:\n\n\nWrite a wrapper for Selenium that has a similar API as its built-in select stuff, but that actually ends up simulating clicks on the Ant non-select UI. I mildly think this is the better option. @18epedersen, would having to do this severely delay the rest of your work on these tests?\n\n\nWrite a component that wraps the Ant select component and injects a hidden select into the DOM that mirrors the Ant select. I think we might be able to just inject the props coming from the form into both elements and it'll \"just work\". We'd have to loop over the children passed in and convert them to standard DOM options, but that's probably not the worst?\nI'm only kinda guessing that that'd work though. We'd need to test it.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/318521771", "created_at": "2017-07-28T00:18:02Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/932#issuecomment-318521771", "updated_at": "2017-07-28T00:18:02Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "body_html": "<p>Seems like there are two feasible options:</p>\n<ol>\n<li>\n<p>Write a wrapper for Selenium that has a similar API as its built-in select stuff, but that actually ends up simulating clicks on the Ant non-select UI. I mildly think this is the better option. <a class=\"user-mention\" href=\"https://github.com/18epedersen\">@18epedersen</a>, would having to do this severely delay the rest of your work on these tests?</p>\n</li>\n<li>\n<p>Write a component that wraps the Ant select component and injects a hidden select into the DOM that mirrors the Ant select. I think we might be able to just inject the props coming from the form into both elements and it'll \"just work\". We'd have to loop over the children passed in and convert them to standard DOM options, but that's probably not the worst?</p>\n<p>I'm only kinda guessing that that'd work though. We'd need to test it.</p>\n</li>\n</ol>", "id": 318521771, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/932"}