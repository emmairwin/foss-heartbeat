{"original_position": 76, "diff_hunk": "@@ -0,0 +1,101 @@\n+import { message } from 'antd';\n+import autobind from 'autobind-decorator';\n+import { Map } from 'immutable';\n+import PropTypes from 'prop-types';\n+import React from 'react';\n+import { connect } from 'react-redux';\n+import { Link, push as pushAction } from 'redux-little-router';\n+\n+import { SimpleLoadingOverlay } from 'control_new/components/common/LoadingOverlay';\n+import RecipeForm from 'control_new/components/recipes/RecipeForm';\n+import QueryRecipe from 'control_new/components/data/QueryRecipe';\n+\n+import { createRecipe as createAction } from 'control_new/state/recipes/actions';\n+import { getRecipe } from 'control_new/state/recipes/selectors';\n+import { getRouterParamAsInt } from 'control_new/state/router/selectors';\n+\n+@connect(\n+  state => {\n+    const recipeId = getRouterParamAsInt(state, 'recipeId');\n+\n+    return {\n+      recipeId,\n+      recipe: getRecipe(state, recipeId, new Map()),\n+    };\n+  },\n+  {\n+    push: pushAction,\n+    createRecipe: createAction,\n+  },\n+)\n+@autobind\n+export default class CloneRecipePage extends React.Component {\n+  static propTypes = {\n+    createRecipe: PropTypes.func.isRequired,\n+    recipeId: PropTypes.number.isRequired,\n+    recipe: PropTypes.instanceOf(Map),\n+  };\n+\n+  static defaultProps = {\n+    recipe: null,\n+  };\n+\n+  state = {\n+    formErrors: undefined,\n+  };\n+\n+  /**\n+   * Update the existing recipe and display a message.\n+   */\n+  async handleSubmit(values) {\n+    const { push } = this.props;\n+\n+    try {\n+      const newId = await this.props.createRecipe(values);\n+\n+      message.success('Recipe saved');\n+      this.setState({\n+        formErrors: undefined,\n+      });\n+\n+      push(`/recipe/${newId}`);\n+    } catch (error) {\n+      message.error(\n+        'Recipe cannot be saved. Please correct any errors listed in the form below.',\n+      );\n+\n+      this.setState({\n+        formErrors: error.data || error,\n+      });\n+    }\n+  }\n+\n+  render() {\n+    const { recipe, recipeId } = this.props;\n+\n+    const recipeName = recipe.get('name');", "body_text": "IMO I'd prefer to keep it without the fallback. If we default to an empty string, that means that there will be some time where Cloning recipe values from \"\" is on the page - even if it's under a Spin. With this approach, we don't display the string until we have the complete thing.", "in_reply_to_id": 128118598, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/887", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128309213", "created_at": "2017-07-19T17:14:02Z", "author_association": "CONTRIBUTOR", "body": "IMO I'd prefer to keep it without the fallback. If we default to an empty string, that means that there will be some time where `Cloning recipe values from \"\"` is on the page - even if it's under a `Spin`. With this approach, we don't display the string until we have the complete thing.", "updated_at": "2017-07-19T17:14:02Z", "html_url": "https://github.com/mozilla/normandy/pull/887#discussion_r128309213", "pull_request_review_id": 50976937, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/128309213"}, "html": {"href": "https://github.com/mozilla/normandy/pull/887#discussion_r128309213"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/887"}}, "commit_id": "18922a3d4ffbf125d393b39139df74fc1cefe5f8", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": 76, "path": "recipe-server/client/control_new/components/recipes/CloneRecipePage.js", "body_html": "<p>IMO I'd prefer to keep it without the fallback. If we default to an empty string, that means that there will be some time where <code>Cloning recipe values from \"\"</code> is on the page - even if it's under a <code>Spin</code>. With this approach, we don't display the string until we have the complete thing.</p>", "original_commit_id": "18922a3d4ffbf125d393b39139df74fc1cefe5f8", "id": 128309213}