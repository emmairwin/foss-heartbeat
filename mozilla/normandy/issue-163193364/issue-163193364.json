{"body_text": "Here is a small sample of the thousand tests I wrote and scrapped. I don't know about any of these. The biggest problem I've run into with the integration tests is not being able to spy on things. You'll notice a nice ugly hack I put in to spy on a dispatch property for the component. I tried spying on that dispatch method from every object and component I could think of and would always be met with 'expected spy to be called with {} but it was never called'.\nThere are a lot of places where I can/should just check the state of the store instead of spying on dispatch (the redux-form actions, mainly), but when we're conditionally dispatching our own actions (i.e. in the submit method we want to dispatch either updateRecipe or addRecipe depending on current props & state.) it would be nice to check, especially when there are promises involved, as state isn't going to be updated immediately. I also wanted to spy on window.fetch so I could fake success/failure responses after submitting but again, it's never getting called.\nI think in general everything is probably just a little too nesty. Even doing unit tests where I only import the RecipeForm class on its own isn't really possible without still doing all of the Provider and store setup to keep the action form components happy.  Leaving this branch here so someone else can take a look, my brain is tired.", "labels": [], "number": 185, "assignee": null, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2016-07-25T16:18:52Z", "body_html": "<p>Here is a small sample of the thousand tests I wrote and scrapped. I don't know about any of these. The biggest problem I've run into with the integration tests is not being able to spy on things. You'll notice a nice ugly hack I put in to spy on a <code>dispatch</code> property for the component. I tried spying on that <code>dispatch</code> method from every object and component I could think of and would always be met with 'expected spy to be called with {} but it was never called'.</p>\n<p>There are a lot of places where I can/should just check the state of the store instead of spying on dispatch (the redux-form actions, mainly), but when we're conditionally dispatching our own actions (i.e. in the submit method we want to dispatch either <code>updateRecipe</code> or <code>addRecipe</code> depending on current props &amp; state.) it would be nice to check, especially when there are promises involved, as state isn't going to be updated immediately. I also wanted to spy on <code>window.fetch</code> so I could fake success/failure responses after submitting but again, it's never getting called.</p>\n<p>I think in general everything is probably just a little too nesty. Even doing unit tests where I only import the <code>RecipeForm</code> class on its own isn't really possible without still doing all of the <code>Provider</code> and <code>store</code> setup to keep the action form components happy.  Leaving this branch here so someone else can take a look, my brain is tired.</p>", "id": 163193364, "title": "*raises white flag*", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/185", "diff_url": "https://github.com/mozilla/normandy/pull/185.diff", "html_url": "https://github.com/mozilla/normandy/pull/185", "patch_url": "https://github.com/mozilla/normandy/pull/185.patch"}, "comments": 4, "state": "closed", "body": "Here is a small sample of the thousand tests I wrote and scrapped. I don't know about any of these. The biggest problem I've run into with the integration tests is not being able to spy on things. You'll notice a nice ugly hack I put in to spy on a `dispatch` property for the component. I tried spying on that `dispatch` method from every object and component I could think of and would always be met with 'expected spy to be called with {} but it was never called'. \n\nThere are a lot of places where I can/should just check the state of the store instead of spying on dispatch (the redux-form actions, mainly), but when we're conditionally dispatching our own actions (i.e. in the submit method we want to dispatch either `updateRecipe` or `addRecipe` depending on current props & state.) it would be nice to check, especially when there are promises involved, as state isn't going to be updated immediately. I also wanted to spy on `window.fetch` so I could fake success/failure responses after submitting but again, it's never getting called.\n\nI think in general everything is probably just a little too nesty. Even doing unit tests where I only import the `RecipeForm` class on its own isn't really possible without still doing all of the `Provider` and `store` setup to keep the action form components happy.  Leaving this branch here so someone else can take a look, my brain is tired. \n", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/185/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/185/labels{/name}", "author_association": "CONTRIBUTOR", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/185/comments", "html_url": "https://github.com/mozilla/normandy/pull/185", "updated_at": "2016-07-25T16:18:52Z", "user": {"following_url": "https://api.github.com/users/brittanystoroz/following{/other_user}", "events_url": "https://api.github.com/users/brittanystoroz/events{/privacy}", "organizations_url": "https://api.github.com/users/brittanystoroz/orgs", "url": "https://api.github.com/users/brittanystoroz", "gists_url": "https://api.github.com/users/brittanystoroz/gists{/gist_id}", "html_url": "https://github.com/brittanystoroz", "subscriptions_url": "https://api.github.com/users/brittanystoroz/subscriptions", "avatar_url": "https://avatars2.githubusercontent.com/u/856935?v=4", "repos_url": "https://api.github.com/users/brittanystoroz/repos", "received_events_url": "https://api.github.com/users/brittanystoroz/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/brittanystoroz/starred{/owner}{/repo}", "site_admin": false, "login": "brittanystoroz", "type": "User", "id": 856935, "followers_url": "https://api.github.com/users/brittanystoroz/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/185", "created_at": "2016-06-30T15:22:56Z", "assignees": []}