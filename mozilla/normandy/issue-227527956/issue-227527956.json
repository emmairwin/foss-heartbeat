{"body_text": "The opt-out study action will need to abort early if a user already has the study add-on installed. The AddonManager has getAddonByID, which we can use. I think this API will work:\nvar addon = await normandy.addons.get('addon-id'); // Returns null if addon not found\nWe can't just return the add-on object we get from getAddonByID, but here's the properties I'm interested in returning from it:\n\nid\nname\nversion\ninstallDate\nisActive\n\n@crankycoder Thoughts on the above?", "labels": [], "number": 747, "assignee": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-07-07T22:34:02Z", "body_html": "<p>The opt-out study action will need to abort early if a user already has the study add-on installed. The <a href=\"https://developer.mozilla.org/en-US/Add-ons/Add-on_Manager/AddonManager\" rel=\"nofollow\">AddonManager</a> has <code>getAddonByID</code>, which we can use. I think this API will work:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">var</span> addon <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-smi\">normandy</span>.<span class=\"pl-smi\">addons</span>.<span class=\"pl-c1\">get</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>addon-id<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\"><span class=\"pl-c\">//</span> Returns null if addon not found</span></pre></div>\n<p>We can't just return the <a href=\"https://developer.mozilla.org/en-US/Add-ons/Add-on_Manager/Addon\" rel=\"nofollow\">add-on object</a> we get from <code>getAddonByID</code>, but here's the properties I'm interested in returning from it:</p>\n<ul>\n<li><code>id</code></li>\n<li><code>name</code></li>\n<li><code>version</code></li>\n<li><code>installDate</code></li>\n<li><code>isActive</code></li>\n</ul>\n<p><a class=\"user-mention\" href=\"https://github.com/crankycoder\">@crankycoder</a> Thoughts on the above?</p>", "id": 227527956, "title": "Add driver function for reading currently-installed add-ons", "comments": 0, "state": "closed", "body": "The opt-out study action will need to abort early if a user already has the study add-on installed. The [AddonManager](https://developer.mozilla.org/en-US/Add-ons/Add-on_Manager/AddonManager) has `getAddonByID`, which we can use. I think this API will work:\r\n\r\n```js\r\nvar addon = await normandy.addons.get('addon-id'); // Returns null if addon not found\r\n```\r\n\r\nWe can't just return the [add-on object](https://developer.mozilla.org/en-US/Add-ons/Add-on_Manager/Addon) we get from `getAddonByID`, but here's the properties I'm interested in returning from it:\r\n\r\n- `id`\r\n- `name`\r\n- `version`\r\n- `installDate`\r\n- `isActive`\r\n\r\n@crankycoder Thoughts on the above?", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/747/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/747/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/747/comments", "html_url": "https://github.com/mozilla/normandy/issues/747", "updated_at": "2018-01-30T17:39:19Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/747", "created_at": "2017-05-09T23:36:44Z", "assignees": [{"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}]}