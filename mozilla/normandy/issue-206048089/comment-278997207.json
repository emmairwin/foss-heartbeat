{"body": "**Disregard, Osmose fixed it: #503**\r\n---\r\nFound the other issue when creating recipes. Upon form submission, redux-form fires its own `handleSubmit` prop, which in turn fires our `onSubmit(values, dispatch, ...)`  function.\r\n\r\nApparently, redux-form does _not_ return empty form fields with the `values` param. What's happening is if you try to create a recipe without `Enabled` checked, the `enabled` property is never assigned to the `recipe` object that is passed to the API for creation. The API requires `enabled` to be passed in - [apparently](https://cloud.githubusercontent.com/assets/2767162/22835441/fe1d96fa-ef75-11e6-8a60-d8ea2c9f5490.png) - so by submitting a `recipe` without `enabled`, the error is thrown.\r\n\r\nThere are a couple things here that stand out as strange to me. First, I can't recall doing any work on the redux-form business that would change how it handles empty fields, so I'm not sure if this is a recent issue or what. Second, looking at the back end, I don't see any 'required' flags on the field, so I would expect that a request without the `enabled` key would just default it to `false`.\r\n\r\nMaybe rehandalal can chime in with any thoughts? I'm working on a front end fix that ensures all required keys actually have values, though it feels a little sticky.\r\n", "body_text": "Disregard, Osmose fixed it: #503\nFound the other issue when creating recipes. Upon form submission, redux-form fires its own handleSubmit prop, which in turn fires our onSubmit(values, dispatch, ...)  function.\nApparently, redux-form does not return empty form fields with the values param. What's happening is if you try to create a recipe without Enabled checked, the enabled property is never assigned to the recipe object that is passed to the API for creation. The API requires enabled to be passed in - apparently - so by submitting a recipe without enabled, the error is thrown.\nThere are a couple things here that stand out as strange to me. First, I can't recall doing any work on the redux-form business that would change how it handles empty fields, so I'm not sure if this is a recent issue or what. Second, looking at the back end, I don't see any 'required' flags on the field, so I would expect that a request without the enabled key would just default it to false.\nMaybe rehandalal can chime in with any thoughts? I'm working on a front end fix that ensures all required keys actually have values, though it feels a little sticky.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/278997207", "created_at": "2017-02-10T16:51:02Z", "author_association": "CONTRIBUTOR", "html_url": "https://github.com/mozilla/normandy/issues/493#issuecomment-278997207", "updated_at": "2017-02-10T16:54:08Z", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "body_html": "<h2><strong>Disregard, Osmose fixed it: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"206842767\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/mozilla/normandy/issues/503\" href=\"https://github.com/mozilla/normandy/pull/503\">#503</a></strong></h2>\n<p>Found the other issue when creating recipes. Upon form submission, redux-form fires its own <code>handleSubmit</code> prop, which in turn fires our <code>onSubmit(values, dispatch, ...)</code>  function.</p>\n<p>Apparently, redux-form does <em>not</em> return empty form fields with the <code>values</code> param. What's happening is if you try to create a recipe without <code>Enabled</code> checked, the <code>enabled</code> property is never assigned to the <code>recipe</code> object that is passed to the API for creation. The API requires <code>enabled</code> to be passed in - <a href=\"https://cloud.githubusercontent.com/assets/2767162/22835441/fe1d96fa-ef75-11e6-8a60-d8ea2c9f5490.png\" rel=\"nofollow\">apparently</a> - so by submitting a <code>recipe</code> without <code>enabled</code>, the error is thrown.</p>\n<p>There are a couple things here that stand out as strange to me. First, I can't recall doing any work on the redux-form business that would change how it handles empty fields, so I'm not sure if this is a recent issue or what. Second, looking at the back end, I don't see any 'required' flags on the field, so I would expect that a request without the <code>enabled</code> key would just default it to <code>false</code>.</p>\n<p>Maybe rehandalal can chime in with any thoughts? I'm working on a front end fix that ensures all required keys actually have values, though it feels a little sticky.</p>", "id": 278997207, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/493"}