{"original_position": 78, "diff_hunk": "@@ -0,0 +1,108 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\n+/**\n+ * @typedef {Object} Study\n+ * @property {string} name\n+ *   Unique name of the study\n+ * @property {number} version\n+ *   Study add-on version number\n+ * @property {string} description\n+ *   Description of the study and its intent.\n+ * @property {string} studyStartDate\n+ *   ISO-formatted date string of when the study was started.\n+ * @property {string} studyEndDate\n+ *   ISO-formatted date string of when the study was ended.\n+ * @property {string} addonId\n+ *   Add-on ID for this particular study.\n+ * @property {boolean} active\n+ *   Is the study still running?\n+ */\n+\n+\"use strict\";\n+\n+const {utils: Cu} = Components;\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"IndexedDB\", \"resource://gre/modules/IndexedDB.jsm\");\n+\n+this.EXPORTED_SYMBOLS = [\"StudyStorage\"];\n+\n+const DB_OPTIONS = {\n+  namespace: \"shield-study-addons\",\n+  version: 1,\n+  storage: \"persistent\",\n+  schema: {\n+    name: { autoIncrement: false, unique: true },\n+    version: { autoIncrement: false, unique: false },\n+    description: { autoIncrement: false, unique: false },\n+    studyStartDate: { autoIncrement: false, unique: false },\n+    studyEndDate: { autoIncrement: false, unique: false },\n+    addonId: { autoIncrement: false, unique: false },\n+    active: { autoIncrement: false, unique: false },\n+  },\n+};\n+\n+const dbName = \"shield-studies\";\n+let database;\n+\n+async function getDatabase() {\n+  if (!database) {\n+    database = await IndexedDB.open(dbName, DB_OPTIONS, db => {\n+      db.createObjectStore(dbName, { keyPath: \"name\" });\n+    });\n+  }\n+  return database;\n+}\n+\n+this.StudyStorage = {\n+  async clearAllData() {\n+    if (database) {\n+      await database.objectStore(dbName, \"readwrite\").clear();\n+    }\n+  },\n+\n+  async closeConnection() {\n+    if (database) {\n+      await database.close();\n+      database = null;\n+    }\n+  },\n+\n+  async getStudy(studyName) {\n+    const db = await getDatabase();\n+\n+    return db.objectStore(dbName, \"readonly\").get(studyName);\n+  },\n+\n+  async saveStudy(study) {", "body_text": "I remember looking for a schema library in mozilla-central at least one time before this, plus we probably eventually want to shift to a single storage solution across the entire add-on, instead of the split between IndexedDB and JSONFile that we'll have once this lands. I think we'll be doing enough schema stuff that pulling it in is worth it, although ideally mozilla-central would eventually ship it built-in and we wouldn't have to pull it in ourselves.", "in_reply_to_id": 126101672, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/860", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126292465", "created_at": "2017-07-08T23:24:47Z", "author_association": "MEMBER", "body": "I remember looking for a schema library in mozilla-central at least one time before this, plus we probably eventually want to shift to a single storage solution across the entire add-on, instead of the split between IndexedDB and JSONFile that we'll have once this lands. I think we'll be doing enough schema stuff that pulling it in is worth it, although ideally mozilla-central would eventually ship it built-in and we wouldn't have to pull it in ourselves.", "updated_at": "2017-07-11T21:12:35Z", "html_url": "https://github.com/mozilla/normandy/pull/860#discussion_r126292465", "pull_request_review_id": 48766127, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126292465"}, "html": {"href": "https://github.com/mozilla/normandy/pull/860#discussion_r126292465"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/860"}}, "commit_id": "f1440ec998aab5190ee6b3c661e89c7c45e49821", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": null, "path": "recipe-client-addon/lib/StudyStorage.jsm", "body_html": "<p>I remember looking for a schema library in mozilla-central at least one time before this, plus we probably eventually want to shift to a single storage solution across the entire add-on, instead of the split between IndexedDB and JSONFile that we'll have once this lands. I think we'll be doing enough schema stuff that pulling it in is worth it, although ideally mozilla-central would eventually ship it built-in and we wouldn't have to pull it in ourselves.</p>", "original_commit_id": "0e79179ffd3eb6c8cf09f6b80bc736136dd0252d", "id": 126292465}