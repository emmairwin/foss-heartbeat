{"original_position": 85, "diff_hunk": "@@ -0,0 +1,108 @@\n+/* This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n+\n+/**\n+ * @typedef {Object} Study\n+ * @property {string} name\n+ *   Unique name of the study\n+ * @property {number} version\n+ *   Study add-on version number\n+ * @property {string} description\n+ *   Description of the study and its intent.\n+ * @property {string} studyStartDate\n+ *   ISO-formatted date string of when the study was started.\n+ * @property {string} studyEndDate\n+ *   ISO-formatted date string of when the study was ended.\n+ * @property {string} addonId\n+ *   Add-on ID for this particular study.\n+ * @property {boolean} active\n+ *   Is the study still running?\n+ */\n+\n+\"use strict\";\n+\n+const {utils: Cu} = Components;\n+Cu.import(\"resource://gre/modules/XPCOMUtils.jsm\");\n+XPCOMUtils.defineLazyModuleGetter(this, \"IndexedDB\", \"resource://gre/modules/IndexedDB.jsm\");\n+\n+this.EXPORTED_SYMBOLS = [\"StudyStorage\"];\n+\n+const DB_OPTIONS = {\n+  namespace: \"shield-study-addons\",\n+  version: 1,\n+  storage: \"persistent\",\n+  schema: {\n+    name: { autoIncrement: false, unique: true },\n+    version: { autoIncrement: false, unique: false },\n+    description: { autoIncrement: false, unique: false },\n+    studyStartDate: { autoIncrement: false, unique: false },\n+    studyEndDate: { autoIncrement: false, unique: false },\n+    addonId: { autoIncrement: false, unique: false },\n+    active: { autoIncrement: false, unique: false },\n+  },\n+};\n+\n+const dbName = \"shield-studies\";\n+let database;\n+\n+async function getDatabase() {\n+  if (!database) {\n+    database = await IndexedDB.open(dbName, DB_OPTIONS, db => {\n+      db.createObjectStore(dbName, { keyPath: \"name\" });\n+    });\n+  }\n+  return database;\n+}\n+\n+this.StudyStorage = {\n+  async clearAllData() {\n+    if (database) {\n+      await database.objectStore(dbName, \"readwrite\").clear();\n+    }\n+  },\n+\n+  async closeConnection() {\n+    if (database) {\n+      await database.close();\n+      database = null;\n+    }\n+  },\n+\n+  async getStudy(studyName) {\n+    const db = await getDatabase();\n+\n+    return db.objectStore(dbName, \"readonly\").get(studyName);\n+  },\n+\n+  async saveStudy(study) {\n+    const {\n+      name, // The unique name for the study\n+      version, // The add-on version\n+      description, // The add-on description\n+      studyStartDate = Date.now(), // The study start date\n+      studyEndDate = null, // The study end date (starts off null)\n+      addonId = study.id, // The add-on ID", "body_text": "In the docs at the top, this is just addonId, not id. This is generally confusing because you're basically doing:\nconst {\n  bar = foo.baz\n} = foo;\n... which I guess makes sense in that now bar will be either foo.bar or, if that wasn't defined, foo.baz - was that intentional? In any case, this isn't documented, and you've omitted this funky thing in the updateStudy implementation, but you're passing id (and not addonId) to updateStudy in the tests... This will need to be consistent and documented.", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/860", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126101467", "created_at": "2017-07-07T09:06:22Z", "author_association": "CONTRIBUTOR", "body": "In the docs at the top, this is just `addonId`, not `id`. This is generally confusing because you're basically doing:\r\n\r\n```js\r\nconst {\r\n  bar = foo.baz\r\n} = foo;\r\n```\r\n\r\n... which I guess makes sense in that now `bar` will be either `foo.bar` or, if that wasn't defined, `foo.baz` - was that intentional? In any case, this isn't documented, and you've omitted this funky thing in the `updateStudy` implementation, but you're passing `id` (and not `addonId`) to `updateStudy` in the tests... This will need to be consistent and documented.", "updated_at": "2017-07-11T21:12:35Z", "html_url": "https://github.com/mozilla/normandy/pull/860#discussion_r126101467", "pull_request_review_id": 48550816, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/126101467"}, "html": {"href": "https://github.com/mozilla/normandy/pull/860#discussion_r126101467"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/860"}}, "commit_id": "f1440ec998aab5190ee6b3c661e89c7c45e49821", "user": {"following_url": "https://api.github.com/users/gijsk/following{/other_user}", "events_url": "https://api.github.com/users/gijsk/events{/privacy}", "organizations_url": "https://api.github.com/users/gijsk/orgs", "url": "https://api.github.com/users/gijsk", "gists_url": "https://api.github.com/users/gijsk/gists{/gist_id}", "html_url": "https://github.com/gijsk", "subscriptions_url": "https://api.github.com/users/gijsk/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/375983?v=4", "repos_url": "https://api.github.com/users/gijsk/repos", "received_events_url": "https://api.github.com/users/gijsk/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/gijsk/starred{/owner}{/repo}", "site_admin": false, "login": "gijsk", "type": "User", "id": 375983, "followers_url": "https://api.github.com/users/gijsk/followers"}, "position": null, "path": "recipe-client-addon/lib/StudyStorage.jsm", "body_html": "<p>In the docs at the top, this is just <code>addonId</code>, not <code>id</code>. This is generally confusing because you're basically doing:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> {\n  <span class=\"pl-c1\">bar</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">foo</span>.<span class=\"pl-smi\">baz</span>\n} <span class=\"pl-k\">=</span> foo;</pre></div>\n<p>... which I guess makes sense in that now <code>bar</code> will be either <code>foo.bar</code> or, if that wasn't defined, <code>foo.baz</code> - was that intentional? In any case, this isn't documented, and you've omitted this funky thing in the <code>updateStudy</code> implementation, but you're passing <code>id</code> (and not <code>addonId</code>) to <code>updateStudy</code> in the tests... This will need to be consistent and documented.</p>", "original_commit_id": "0e79179ffd3eb6c8cf09f6b80bc736136dd0252d", "id": 126101467}