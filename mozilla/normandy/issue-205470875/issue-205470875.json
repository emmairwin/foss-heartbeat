{"body_text": "We've had a few errors during deploys recently with things like the ability to save recipes properly, which reminded me that I never got around to writing marionette/selenium tests. I wanted to learn a bit more about writing selenium tests this weekend anyway, so I worked on this a bit. Whereas the last few times I tried this I was trying to get a version of Firefox that could run recipes, this PR focuses only on testing the functionality of the control interface.\nThis PR adds another project similar to the mock-recipe-server project that builds and runs a docker-compose setup running the recipe server, a selenium server with Firefox, and a container running pytest that executes functional tests.\nFuture followup work would be:\n\nWrite more tests, this only has a very basic one.\nRefactor the test(s) to use page objects and other common, useful patterns (former WebQA engineers are well-versed in this).\nCustomize which Firefox selenium is using (currently it's hard-coded to 51.0.1 in their docker image) and to install the system add-on and do some in-chrome tests, which AFAIK is a thing Selenium can do in Firefox via Marionette.\nDo the above, or wait until Firefox 52 hits release and the selenium docker images, and run the tests through the nginx proxy over SSL. We need Firefox 52 for this as a bug prevented versions before that from disabling certificate verification.\n\nOne last note, I named the project functional_tests, with an underscore, on purpose. The mixture of underscores and dashes throughout the project is a bit confusing, and I think the common pattern is to use underscores for directory paths and filenames and dashes for things like docker image names, slugs, etc. I can change the name if this is a major problem.", "labels": [], "number": 479, "assignee": {"following_url": "https://api.github.com/users/chartjes/following{/other_user}", "events_url": "https://api.github.com/users/chartjes/events{/privacy}", "organizations_url": "https://api.github.com/users/chartjes/orgs", "url": "https://api.github.com/users/chartjes", "gists_url": "https://api.github.com/users/chartjes/gists{/gist_id}", "html_url": "https://github.com/chartjes", "subscriptions_url": "https://api.github.com/users/chartjes/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/28321?v=4", "repos_url": "https://api.github.com/users/chartjes/repos", "received_events_url": "https://api.github.com/users/chartjes/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/chartjes/starred{/owner}{/repo}", "site_admin": false, "login": "chartjes", "type": "User", "id": 28321, "followers_url": "https://api.github.com/users/chartjes/followers"}, "repository_url": "https://api.github.com/repos/mozilla/normandy", "closed_at": "2017-02-07T20:50:47Z", "body_html": "<p>We've had a few errors during deploys recently with things like the ability to save recipes properly, which reminded me that I never got around to writing marionette/selenium tests. I wanted to learn a bit more about writing selenium tests this weekend anyway, so I worked on this a bit. Whereas the last few times I tried this I was trying to get a version of Firefox that could run recipes, this PR focuses only on testing the functionality of the control interface.</p>\n<p>This PR adds another project similar to the <code>mock-recipe-server</code> project that builds and runs a docker-compose setup running the recipe server, a selenium server with Firefox, and a container running pytest that executes functional tests.</p>\n<p>Future followup work would be:</p>\n<ul>\n<li>Write more tests, this only has a very basic one.</li>\n<li>Refactor the test(s) to use <a href=\"http://selenium-python.readthedocs.io/page-objects.html\" rel=\"nofollow\">page objects</a> and other common, useful patterns (former WebQA engineers are well-versed in this).</li>\n<li>Customize which Firefox selenium is using (currently it's hard-coded to 51.0.1 in their docker image) and to install the system add-on and do some in-chrome tests, which AFAIK is a thing Selenium can do in Firefox via Marionette.</li>\n<li>Do the above, or wait until Firefox 52 hits release and the selenium docker images, and run the tests through the nginx proxy over SSL. We need Firefox 52 for this as <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1103196\" rel=\"nofollow\">a bug prevented versions before that from disabling certificate verification</a>.</li>\n</ul>\n<p>One last note, I named the project <code>functional_tests</code>, with an underscore, on purpose. The mixture of underscores and dashes throughout the project is a bit confusing, and I think the common pattern is to use underscores for directory paths and filenames and dashes for things like docker image names, slugs, etc. I can change the name if this is a major problem.</p>", "id": 205470875, "title": "Functional tests via Selenium", "pull_request": {"url": "https://api.github.com/repos/mozilla/normandy/pulls/479", "diff_url": "https://github.com/mozilla/normandy/pull/479.diff", "html_url": "https://github.com/mozilla/normandy/pull/479", "patch_url": "https://github.com/mozilla/normandy/pull/479.patch"}, "comments": 5, "state": "closed", "body": "We've had a few errors during deploys recently with things like the ability to save recipes properly, which reminded me that I never got around to writing marionette/selenium tests. I wanted to learn a bit more about writing selenium tests this weekend anyway, so I worked on this a bit. Whereas the last few times I tried this I was trying to get a version of Firefox that could run recipes, this PR focuses only on testing the functionality of the control interface.\r\n\r\nThis PR adds another project similar to the `mock-recipe-server` project that builds and runs a docker-compose setup running the recipe server, a selenium server with Firefox, and a container running pytest that executes functional tests.\r\n\r\nFuture followup work would be:\r\n\r\n- Write more tests, this only has a very basic one.\r\n- Refactor the test(s) to use [page objects](http://selenium-python.readthedocs.io/page-objects.html) and other common, useful patterns (former WebQA engineers are well-versed in this).\r\n- Customize which Firefox selenium is using (currently it's hard-coded to 51.0.1 in their docker image) and to install the system add-on and do some in-chrome tests, which AFAIK is a thing Selenium can do in Firefox via Marionette.\r\n- Do the above, or wait until Firefox 52 hits release and the selenium docker images, and run the tests through the nginx proxy over SSL. We need Firefox 52 for this as [a bug prevented versions before that from disabling certificate verification](https://bugzilla.mozilla.org/show_bug.cgi?id=1103196).\r\n\r\nOne last note, I named the project `functional_tests`, with an underscore, on purpose. The mixture of underscores and dashes throughout the project is a bit confusing, and I think the common pattern is to use underscores for directory paths and filenames and dashes for things like docker image names, slugs, etc. I can change the name if this is a major problem.", "events_url": "https://api.github.com/repos/mozilla/normandy/issues/479/events", "labels_url": "https://api.github.com/repos/mozilla/normandy/issues/479/labels{/name}", "author_association": "MEMBER", "comments_url": "https://api.github.com/repos/mozilla/normandy/issues/479/comments", "html_url": "https://github.com/mozilla/normandy/pull/479", "updated_at": "2017-02-07T20:50:47Z", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "milestone": null, "locked": false, "url": "https://api.github.com/repos/mozilla/normandy/issues/479", "created_at": "2017-02-06T01:34:00Z", "assignees": [{"following_url": "https://api.github.com/users/chartjes/following{/other_user}", "events_url": "https://api.github.com/users/chartjes/events{/privacy}", "organizations_url": "https://api.github.com/users/chartjes/orgs", "url": "https://api.github.com/users/chartjes", "gists_url": "https://api.github.com/users/chartjes/gists{/gist_id}", "html_url": "https://github.com/chartjes", "subscriptions_url": "https://api.github.com/users/chartjes/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/28321?v=4", "repos_url": "https://api.github.com/users/chartjes/repos", "received_events_url": "https://api.github.com/users/chartjes/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/chartjes/starred{/owner}{/repo}", "site_admin": false, "login": "chartjes", "type": "User", "id": 28321, "followers_url": "https://api.github.com/users/chartjes/followers"}, {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}]}