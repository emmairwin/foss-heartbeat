{"original_position": 4, "diff_hunk": "@@ -31,8 +31,11 @@ this.NormandyDriver = function(sandboxManager) {\n   }\n   const {sandbox} = sandboxManager;\n \n+  Storage.seedDurability(sandbox);", "body_text": "this will count only the first recipe run the first time as non-durable\n\nI'm not sure why this is would be the case - the durability value is seeded to 1 (if none is previously set) and then the driver checks that value when it creates its Storage. In theory, the first recipe/run should have a durability of 1 and should run as expected (assuming the store is durable).\nHowever, In selfrepair, the durability check looks for a value of 2 instead, which didn't really add up to me. Maybe there's something about the recipe life cycle that I'm missing.\n\nIt would probably be good to call seedDurability from the context of RecipeRunner\n\nI'm confused how this would work with regards to the sandboxes. Would we need to seed each action/sandbox in RecipeRunner.executeAction? Would the call to Storage.checkDurability then still exist in NormandyDriver?", "in_reply_to_id": 108527660, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/633", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108728551", "created_at": "2017-03-29T16:50:15Z", "author_association": "CONTRIBUTOR", "body": "\r\n> this will count only the first recipe run the first time as non-durable\r\n\r\nI'm not sure why this is would be the case - the durability value is seeded to `1` (if none is previously set) and then the driver checks that value when it creates its Storage. In theory, the first recipe/run should have a `durability` of `1` and should run as expected (assuming the store is durable).\r\n\r\nHowever, In selfrepair, the durability check looks for a value of `2` instead, which didn't really add up to me. Maybe there's something about the recipe life cycle that I'm missing.\r\n\r\n > It would probably be good to call seedDurability from the context of RecipeRunner\r\n\r\n I'm confused how this would work with regards to the sandboxes. Would we need to seed each action/sandbox in `RecipeRunner.executeAction`? Would the call to `Storage.checkDurability` then still exist in NormandyDriver?", "updated_at": "2017-03-31T17:53:47Z", "html_url": "https://github.com/mozilla/normandy/pull/633#discussion_r108728551", "pull_request_review_id": 29779274, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108728551"}, "html": {"href": "https://github.com/mozilla/normandy/pull/633#discussion_r108728551"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/633"}}, "commit_id": "ced6ba379fc6d24d135c186440c27c9d64326b5e", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-client-addon/lib/NormandyDriver.jsm", "body_html": "<blockquote>\n<p>this will count only the first recipe run the first time as non-durable</p>\n</blockquote>\n<p>I'm not sure why this is would be the case - the durability value is seeded to <code>1</code> (if none is previously set) and then the driver checks that value when it creates its Storage. In theory, the first recipe/run should have a <code>durability</code> of <code>1</code> and should run as expected (assuming the store is durable).</p>\n<p>However, In selfrepair, the durability check looks for a value of <code>2</code> instead, which didn't really add up to me. Maybe there's something about the recipe life cycle that I'm missing.</p>\n<blockquote>\n<p>It would probably be good to call seedDurability from the context of RecipeRunner</p>\n</blockquote>\n<p>I'm confused how this would work with regards to the sandboxes. Would we need to seed each action/sandbox in <code>RecipeRunner.executeAction</code>? Would the call to <code>Storage.checkDurability</code> then still exist in NormandyDriver?</p>", "original_commit_id": "9c3ec361368d18a6ee65b66c0c754b16e0588975", "id": 108728551}