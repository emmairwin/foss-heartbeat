{"original_position": 15, "diff_hunk": "@@ -29,6 +30,34 @@ function loadStorage() {\n }\n \n this.Storage = {\n+  DURABILITY_NAMESPACE: '_storageDurability',\n+  DURABILITY_KEY: 'durable',\n+  async seedDurability(sandbox) {\n+    const globalDurabilityStore = Storage.makeStorage(this.DURABILITY_NAMESPACE, sandbox);", "body_text": "Technically, if an action tried to makeStorage('_storageDurability') then yes - the data would collide. In my opinion I don't think that's a huge thing to worry about - but I could be wrong. Should we specify it further, something like normandy_storageDurability?\nWhile I'm on the subject - I think the term prefix should be swapped to namespace in  the storage code. Though we use prefixes within the actual Storages, to outside modules the term prefix is a little vague. It makes sense once you open up the Storage file and see that prefixes effectively namespace the data, but at first the terminology didn't click for me.\nAlso, if we switch to the term namespace, outside modules won't have to be updated if we ever decide to change how Storages internally handle the data. Working with stores then would become a little less coupled.\nJust a thought!", "in_reply_to_id": 108528016, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/633", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108554433", "created_at": "2017-03-28T22:38:42Z", "author_association": "CONTRIBUTOR", "body": "Technically, if an action tried to `makeStorage('_storageDurability')` then yes - the data would collide. In my opinion I don't think that's a huge thing to worry about - but I could be wrong. Should we specify it further, something like `normandy_storageDurability`?\r\n\r\nWhile I'm on the subject - I think the term `prefix` should be swapped to `namespace` in  the storage code. Though we use prefixes within the actual `Storage`s, to outside modules the term `prefix` is a little vague. It makes sense once you open up the Storage file and see that prefixes effectively namespace the data, but at first the terminology didn't click for me. \r\n\r\nAlso, if we switch to the term `namespace`, outside modules won't have to be updated if we ever decide to change how `Storage`s internally handle the data. Working with stores then would become a little less coupled.\r\n\r\nJust a thought!", "updated_at": "2017-03-31T17:53:47Z", "html_url": "https://github.com/mozilla/normandy/pull/633#discussion_r108554433", "pull_request_review_id": 29593187, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/108554433"}, "html": {"href": "https://github.com/mozilla/normandy/pull/633#discussion_r108554433"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/633"}}, "commit_id": "ced6ba379fc6d24d135c186440c27c9d64326b5e", "user": {"following_url": "https://api.github.com/users/andymikulski/following{/other_user}", "events_url": "https://api.github.com/users/andymikulski/events{/privacy}", "organizations_url": "https://api.github.com/users/andymikulski/orgs", "url": "https://api.github.com/users/andymikulski", "gists_url": "https://api.github.com/users/andymikulski/gists{/gist_id}", "html_url": "https://github.com/andymikulski", "subscriptions_url": "https://api.github.com/users/andymikulski/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/2767162?v=4", "repos_url": "https://api.github.com/users/andymikulski/repos", "received_events_url": "https://api.github.com/users/andymikulski/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/andymikulski/starred{/owner}{/repo}", "site_admin": false, "login": "andymikulski", "type": "User", "id": 2767162, "followers_url": "https://api.github.com/users/andymikulski/followers"}, "position": null, "path": "recipe-client-addon/lib/Storage.jsm", "body_html": "<p>Technically, if an action tried to <code>makeStorage('_storageDurability')</code> then yes - the data would collide. In my opinion I don't think that's a huge thing to worry about - but I could be wrong. Should we specify it further, something like <code>normandy_storageDurability</code>?</p>\n<p>While I'm on the subject - I think the term <code>prefix</code> should be swapped to <code>namespace</code> in  the storage code. Though we use prefixes within the actual <code>Storage</code>s, to outside modules the term <code>prefix</code> is a little vague. It makes sense once you open up the Storage file and see that prefixes effectively namespace the data, but at first the terminology didn't click for me.</p>\n<p>Also, if we switch to the term <code>namespace</code>, outside modules won't have to be updated if we ever decide to change how <code>Storage</code>s internally handle the data. Working with stores then would become a little less coupled.</p>\n<p>Just a thought!</p>", "original_commit_id": "9c3ec361368d18a6ee65b66c0c754b16e0588975", "id": 108554433}