{"original_position": 33, "diff_hunk": "@@ -20,15 +19,13 @@ this.EventEmitter = function(driver) {\n       Promise.resolve()\n         .then(() => {\n           if (!(eventName in listeners)) {\n-            driver.log(`EventEmitter: Event fired with no listeners: ${eventName}`);\n+            log.info(`EventEmitter: Event fired with no listeners: ${eventName}`);\n             return;\n           }\n-          // freeze event to prevent handlers from modifying it\n-          const frozenEvent = Object.freeze(event);", "body_text": "But that one won't have the handlers of the one inside the sandbox, right?\n\nIt will, because the handlers aren't a property of the emitter, but instead are in the scope of the constructor function, and the docs on exportFunction say that the cloned function has access to its surrounding closure.", "in_reply_to_id": 97058236, "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/436", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98103060", "created_at": "2017-01-26T22:05:10Z", "author_association": "MEMBER", "body": "> But that one won't have the handlers of the one inside the sandbox, right?\r\n\r\nIt will, because the handlers aren't a property of the emitter, but instead are in the scope of the constructor function, and the docs on [`exportFunction`](https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.exportFunction) say that the cloned function has access to its surrounding closure.", "updated_at": "2017-01-27T17:57:33Z", "html_url": "https://github.com/mozilla/normandy/pull/436#discussion_r98103060", "pull_request_review_id": 18735727, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/98103060"}, "html": {"href": "https://github.com/mozilla/normandy/pull/436#discussion_r98103060"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/436"}}, "commit_id": "87238c3cb90a13c27247a84fbe5c239ccca3778a", "user": {"following_url": "https://api.github.com/users/Osmose/following{/other_user}", "events_url": "https://api.github.com/users/Osmose/events{/privacy}", "organizations_url": "https://api.github.com/users/Osmose/orgs", "url": "https://api.github.com/users/Osmose", "gists_url": "https://api.github.com/users/Osmose/gists{/gist_id}", "html_url": "https://github.com/Osmose", "subscriptions_url": "https://api.github.com/users/Osmose/subscriptions", "avatar_url": "https://avatars1.githubusercontent.com/u/193106?v=4", "repos_url": "https://api.github.com/users/Osmose/repos", "received_events_url": "https://api.github.com/users/Osmose/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/Osmose/starred{/owner}{/repo}", "site_admin": false, "login": "Osmose", "type": "User", "id": 193106, "followers_url": "https://api.github.com/users/Osmose/followers"}, "position": 42, "path": "recipe-client-addon/lib/EventEmitter.jsm", "body_html": "<blockquote>\n<p>But that one won't have the handlers of the one inside the sandbox, right?</p>\n</blockquote>\n<p>It will, because the handlers aren't a property of the emitter, but instead are in the scope of the constructor function, and the docs on <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.exportFunction\" rel=\"nofollow\"><code>exportFunction</code></a> say that the cloned function has access to its surrounding closure.</p>", "original_commit_id": "877c57c4a5ba2dd61ae1f912de56838c2e10348f", "id": 98103060}