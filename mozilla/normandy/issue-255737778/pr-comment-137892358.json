{"original_position": 36, "diff_hunk": "@@ -38,23 +38,31 @@ function history(state = new Map(), action) {\n   }\n }\n \n+const formatRecipe = recipe =>\n+  recipe\n+    .set('action_id', recipe.getIn(['action', 'id'], null))\n+    .set('latest_revision_id', recipe.getIn(['latest_revision', 'id'], null))\n+    .set('approved_revision_id', recipe.getIn(['approved_revision', 'id'], null))\n+    .remove('action')\n+    .remove('latest_revision')\n+    .remove('approved_revision');\n \n function items(state = new Map(), action) {\n-  let recipe;\n-\n   switch (action.type) {\n     case RECIPE_RECEIVE: {\n-      recipe = fromJS(action.recipe);\n+      const recipe = fromJS(action.recipe);\n+      return state.set(action.recipe.id, formatRecipe(recipe));\n+    }\n+\n+    case RECIPE_PAGE_RECEIVE: {\n+      const recipes = fromJS(action.recipes.results);\n+      let newState = state;\n \n-      recipe = recipe\n-        .set('action_id', recipe.getIn(['action', 'id'], null))\n-        .set('latest_revision_id', recipe.getIn(['latest_revision', 'id'], null))\n-        .set('approved_revision_id', recipe.getIn(['approved_revision', 'id'], null))\n-        .remove('action')\n-        .remove('latest_revision')\n-        .remove('approved_revision');\n+      recipes.forEach(receivedRecipe => {\n+        newState = newState.set(receivedRecipe.get('id'), formatRecipe(receivedRecipe));\n+      });", "body_text": "As a drive-by comment, Immutable's withMutations helper might help speed this up. It temporarily makes the data structure directly mutable, so you could write this as:\nconst recipes = fromJS(action.recipes.results);\nreturn state.withMutations(mutState => {\n  recipe.forEach(receivedRecipe => {\n    mutState.set(receivedRecipe.get('id'), formatRecipe(receivedRecipe));\n  });\n});", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/1042", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/137892358", "created_at": "2017-09-08T21:21:21Z", "author_association": "MEMBER", "body": "As a drive-by comment, Immutable's [`withMutations` helper](https://facebook.github.io/immutable-js/docs/#/Map/withMutations) might help speed this up. It temporarily makes the data structure directly mutable, so you could write this as:\r\n\r\n```js\r\nconst recipes = fromJS(action.recipes.results);\r\nreturn state.withMutations(mutState => {\r\n  recipe.forEach(receivedRecipe => {\r\n    mutState.set(receivedRecipe.get('id'), formatRecipe(receivedRecipe));\r\n  });\r\n});\r\n```", "updated_at": "2017-09-20T23:45:07Z", "html_url": "https://github.com/mozilla/normandy/pull/1042#discussion_r137892358", "pull_request_review_id": 61625959, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/137892358"}, "html": {"href": "https://github.com/mozilla/normandy/pull/1042#discussion_r137892358"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/1042"}}, "commit_id": "f3e7b3506bfed1dcafe170547c418c50c328feb4", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "recipe-server/client/control_new/state/app/recipes/reducers.js", "body_html": "<p>As a drive-by comment, Immutable's <a href=\"https://facebook.github.io/immutable-js/docs/#/Map/withMutations\" rel=\"nofollow\"><code>withMutations</code> helper</a> might help speed this up. It temporarily makes the data structure directly mutable, so you could write this as:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-c1\">recipes</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">fromJS</span>(<span class=\"pl-smi\">action</span>.<span class=\"pl-smi\">recipes</span>.<span class=\"pl-smi\">results</span>);\n<span class=\"pl-k\">return</span> <span class=\"pl-smi\">state</span>.<span class=\"pl-en\">withMutations</span>(<span class=\"pl-smi\">mutState</span> <span class=\"pl-k\">=&gt;</span> {\n  <span class=\"pl-smi\">recipe</span>.<span class=\"pl-c1\">forEach</span>(<span class=\"pl-smi\">receivedRecipe</span> <span class=\"pl-k\">=&gt;</span> {\n    <span class=\"pl-smi\">mutState</span>.<span class=\"pl-c1\">set</span>(<span class=\"pl-smi\">receivedRecipe</span>.<span class=\"pl-c1\">get</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>id<span class=\"pl-pds\">'</span></span>), <span class=\"pl-en\">formatRecipe</span>(receivedRecipe));\n  });\n});</pre></div>", "original_commit_id": "4ce8c413215b06e9c35f4cfe98c618587d47505f", "id": 137892358}