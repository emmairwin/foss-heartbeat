{"body": "@sunahsuh @jaredkerim @MattGrimes Can you take a look at the below and add any comments you have?\r\n\r\nHere is an attempt at spec'ing this out. As a note, the [Telemetry Events API](https://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api) has this signature for recording events:\r\n\r\n```js\r\nServices.telemetry.recordEvent(category, method, object, value, extra);\r\n```\r\n\r\n`category`, `method`, and `object` must be known statically. That is, they can't be the name or id of the recipe, sorry.\r\n\r\n---\r\n\r\nWhen enrolling a user in a preference study, this event will be recorded:\r\n\r\n```js\r\nServices.telemetry.recordEvent(\r\n  \"shield\",\r\n  \"enroll\",\r\n  \"preference-study\",\r\n  studySlug,\r\n  { isHighPop, branch }\r\n);\r\n```\r\n\r\nWhen unenrolling:\r\n\r\n```js\r\nServices.telemetry.recordEvent(\r\n  \"shield\",\r\n  \"unenroll\",\r\n  \"preference-study\",\r\n  studySlug,\r\n  { reason, resetValue }\r\n);\r\n```\r\n\r\n`reason` will be one of \"filter-mismatch\", \"user-preference-change-sideload\", \"user-preference-change\". `resetValue` will be the string \"true\" if Shield reset the value of the preference, and the string \"false\" otherwise. (Telemetry Event values must be strings here, sorry). Shield does not reset the value when the reason for unenrollment was the preference changing. It does if the reason is the filter no longer matching.\r\n\r\n---\r\n\r\nFor add-on studies (aka \"opt-out studies\"), the events are similar. The only different is that \"object\" argument will be \"addon-study\" instead of \"preference-study\", and that the keys in the \"extra\" field will be different.\r\n\r\nFor enrollment, the extra keys will be `addonId` and `addonVersion`.\r\n\r\nFor unenrollment, the extra keys will be only include `reason`. The values of `reason` are similar: \"filter-mismatch\", \"uninstalled-sideload\", and \"uninstalled\".\r\n\r\n---\r\n\r\nNote: \"Sideload\" here means changes that occur when Shield \"isn't watching\". This generally refers to changes made to the profile while Firefox is shut down, or sometimes changes that happen due to version upgrades.", "body_text": "@sunahsuh @jaredkerim @MattGrimes Can you take a look at the below and add any comments you have?\nHere is an attempt at spec'ing this out. As a note, the Telemetry Events API has this signature for recording events:\nServices.telemetry.recordEvent(category, method, object, value, extra);\ncategory, method, and object must be known statically. That is, they can't be the name or id of the recipe, sorry.\n\nWhen enrolling a user in a preference study, this event will be recorded:\nServices.telemetry.recordEvent(\n  \"shield\",\n  \"enroll\",\n  \"preference-study\",\n  studySlug,\n  { isHighPop, branch }\n);\nWhen unenrolling:\nServices.telemetry.recordEvent(\n  \"shield\",\n  \"unenroll\",\n  \"preference-study\",\n  studySlug,\n  { reason, resetValue }\n);\nreason will be one of \"filter-mismatch\", \"user-preference-change-sideload\", \"user-preference-change\". resetValue will be the string \"true\" if Shield reset the value of the preference, and the string \"false\" otherwise. (Telemetry Event values must be strings here, sorry). Shield does not reset the value when the reason for unenrollment was the preference changing. It does if the reason is the filter no longer matching.\n\nFor add-on studies (aka \"opt-out studies\"), the events are similar. The only different is that \"object\" argument will be \"addon-study\" instead of \"preference-study\", and that the keys in the \"extra\" field will be different.\nFor enrollment, the extra keys will be addonId and addonVersion.\nFor unenrollment, the extra keys will be only include reason. The values of reason are similar: \"filter-mismatch\", \"uninstalled-sideload\", and \"uninstalled\".\n\nNote: \"Sideload\" here means changes that occur when Shield \"isn't watching\". This generally refers to changes made to the profile while Firefox is shut down, or sometimes changes that happen due to version upgrades.", "url": "https://api.github.com/repos/mozilla/normandy/issues/comments/345879729", "created_at": "2017-11-21T00:47:54Z", "author_association": "MEMBER", "html_url": "https://github.com/mozilla/normandy/issues/1139#issuecomment-345879729", "updated_at": "2017-11-21T00:47:54Z", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "body_html": "<p><a class=\"user-mention\" href=\"https://github.com/sunahsuh\">@sunahsuh</a> <a class=\"user-mention\" href=\"https://github.com/jaredkerim\">@jaredkerim</a> <a class=\"user-mention\" href=\"https://github.com/mattgrimes\">@MattGrimes</a> Can you take a look at the below and add any comments you have?</p>\n<p>Here is an attempt at spec'ing this out. As a note, the <a href=\"https://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api\" rel=\"nofollow\">Telemetry Events API</a> has this signature for recording events:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">Services</span>.<span class=\"pl-smi\">telemetry</span>.<span class=\"pl-en\">recordEvent</span>(category, method, object, value, extra);</pre></div>\n<p><code>category</code>, <code>method</code>, and <code>object</code> must be known statically. That is, they can't be the name or id of the recipe, sorry.</p>\n<hr>\n<p>When enrolling a user in a preference study, this event will be recorded:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">Services</span>.<span class=\"pl-smi\">telemetry</span>.<span class=\"pl-en\">recordEvent</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shield<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enroll<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>preference-study<span class=\"pl-pds\">\"</span></span>,\n  studySlug,\n  { isHighPop, branch }\n);</pre></div>\n<p>When unenrolling:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-smi\">Services</span>.<span class=\"pl-smi\">telemetry</span>.<span class=\"pl-en\">recordEvent</span>(\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shield<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unenroll<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>preference-study<span class=\"pl-pds\">\"</span></span>,\n  studySlug,\n  { reason, resetValue }\n);</pre></div>\n<p><code>reason</code> will be one of \"filter-mismatch\", \"user-preference-change-sideload\", \"user-preference-change\". <code>resetValue</code> will be the string \"true\" if Shield reset the value of the preference, and the string \"false\" otherwise. (Telemetry Event values must be strings here, sorry). Shield does not reset the value when the reason for unenrollment was the preference changing. It does if the reason is the filter no longer matching.</p>\n<hr>\n<p>For add-on studies (aka \"opt-out studies\"), the events are similar. The only different is that \"object\" argument will be \"addon-study\" instead of \"preference-study\", and that the keys in the \"extra\" field will be different.</p>\n<p>For enrollment, the extra keys will be <code>addonId</code> and <code>addonVersion</code>.</p>\n<p>For unenrollment, the extra keys will be only include <code>reason</code>. The values of <code>reason</code> are similar: \"filter-mismatch\", \"uninstalled-sideload\", and \"uninstalled\".</p>\n<hr>\n<p>Note: \"Sideload\" here means changes that occur when Shield \"isn't watching\". This generally refers to changes made to the profile while Firefox is shut down, or sometimes changes that happen due to version upgrades.</p>", "id": 345879729, "issue_url": "https://api.github.com/repos/mozilla/normandy/issues/1139"}