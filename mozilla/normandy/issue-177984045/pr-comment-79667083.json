{"original_position": 102, "diff_hunk": "@@ -36,21 +39,106 @@ describe('Normandy Driver', () => {\n     });\n   });\n \n+  describe('saveHeartbeatFlow', () => {\n+    const driver = new NormandyDriver();\n+\n+    afterEach(() => {\n+      fetchMock.restore();\n+    });\n+\n+    beforeEach(() => {\n+      fetchMock.get(urlPathMatcher('/api/v2/hb/'), 200);\n+    });\n+\n+    it('should not POST data if in testing mode', async () => {\n+      driver.testing = true;\n+      await driver.saveHeartbeatFlow({\n+        flowId: '123456789',\n+      });\n+\n+      expect(fetchMock.calls().matched.length).toEqual(0);\n+    });\n+\n+    it('should POST flow data to input', async () => {\n+      driver.testing = false;\n+      await driver.saveHeartbeatFlow({\n+        flowId: '123456789',\n+      });\n+\n+      expect(fetchMock.lastOptions()).toEqual({\n+        method: 'POST',\n+        body: '{\"flowId\":\"123456789\"}',\n+        headers: {\n+          Accept: 'application/json',\n+          'Content-Type': 'application/json',\n+        },\n+      });\n+    });\n+  });\n+\n   describe('client', () => {\n-    it(\"should fetch the user's distribution ID from UITour\", async () => {\n+    it(\"should fetch the user's config from UITour\", async () => {\n       const uitour = {\n         getConfiguration(config, cb) {\n-          if (config === 'appinfo') {\n-            cb({ distribution: 'funnelcake85' });\n-          } else {\n-            cb({});\n+          switch (config) {\n+            case 'sync':\n+              return cb({\n+                setup: false,\n+              });\n+            case 'appinfo':\n+              return cb({\n+                version: '50.0.2',\n+                defaultUpdateChannel: 'aurora',\n+                defaultBrowser: true,\n+                distribution: 'funnelcake85',\n+              });\n+            case 'selectedSearchEngine':\n+              return cb({ searchEngineIdentifier: 'Yahoo' });\n+            default:\n+              return cb({});\n           }\n         },\n       };\n       const driver = new NormandyDriver(uitour);\n-\n       const client = await driver.client();\n+\n+      expect(client.syncSetup).toEqual(false);\n       expect(client.distribution).toEqual('funnelcake85');\n+      expect(client.isDefaultBrowser).toEqual(true);\n+      expect(client.searchEngine).toEqual('Yahoo');\n+    });\n+  });\n+\n+  describe('uuid', () => {\n+    it('returns a valid userID', () => {\n+      const UUID_ISH_REGEX = /^[a-f0-9-]{36}$/;\n+      const driver = new NormandyDriver();\n+      const uuid = driver.uuid();\n+      expect(UUID_ISH_REGEX.test(uuid)).toBe(true);\n+    });\n+  });\n+\n+  describe('log', () => {\n+    const driver = new NormandyDriver();\n+\n+    it('will not log debug level unless in testing mode', () => {\n+      spyOn(console, 'log');\n+      driver.log('lorem ipsum');", "body_text": "Should probably set driver.testing = false here to be explicit (also, to match the \"should POST flow data to input\" test).", "pull_request_url": "https://api.github.com/repos/mozilla/normandy/pulls/265", "url": "https://api.github.com/repos/mozilla/normandy/pulls/comments/79667083", "created_at": "2016-09-20T17:29:41Z", "author_association": "MEMBER", "body": "Should probably set `driver.testing = false` here to be explicit (also, to match the \"should POST flow data to input\" test).\n", "updated_at": "2016-09-21T17:12:34Z", "html_url": "https://github.com/mozilla/normandy/pull/265#discussion_r79667083", "pull_request_review_id": 798625, "_links": {"self": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/comments/79667083"}, "html": {"href": "https://github.com/mozilla/normandy/pull/265#discussion_r79667083"}, "pull_request": {"href": "https://api.github.com/repos/mozilla/normandy/pulls/265"}}, "commit_id": "0f32d5e37a85c306be57350a6cc006f74cc471d8", "user": {"following_url": "https://api.github.com/users/mythmon/following{/other_user}", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "organizations_url": "https://api.github.com/users/mythmon/orgs", "url": "https://api.github.com/users/mythmon", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "html_url": "https://github.com/mythmon", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "repos_url": "https://api.github.com/users/mythmon/repos", "received_events_url": "https://api.github.com/users/mythmon/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "site_admin": false, "login": "mythmon", "type": "User", "id": 305049, "followers_url": "https://api.github.com/users/mythmon/followers"}, "position": null, "path": "client/selfrepair/tests/test_normandy_driver.js", "body_html": "<p>Should probably set <code>driver.testing = false</code> here to be explicit (also, to match the \"should POST flow data to input\" test).</p>", "original_commit_id": "149c63c7afb47268c723f0fbbf0bffa2699c5814", "id": 79667083}